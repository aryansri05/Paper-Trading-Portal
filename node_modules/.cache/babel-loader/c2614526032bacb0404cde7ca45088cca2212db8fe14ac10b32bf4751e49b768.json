{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/StockChart.js\",\n  _s = $RefreshSig$();\n// src/components/StockChart.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { FINNHUB_API_KEY, isInvalidApiKey, CURRENCY_SYMBOL } from '../TradingDataContext'; // Import FINNHUB_API_KEY and helper\n\n// Define options for the chart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultChartOptions = {\n  chart: {\n    type: 'candlestick',\n    height: 350,\n    toolbar: {\n      show: true,\n      tools: {\n        download: true,\n        selection: true,\n        zoom: true,\n        zoomin: true,\n        zoomout: true,\n        pan: true,\n        reset: true\n      }\n    }\n  },\n  title: {\n    text: 'Candlestick Chart',\n    align: 'left'\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      formatter: function (val) {\n        return new Date(val).toLocaleDateString();\n      }\n    }\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    },\n    labels: {\n      // CORRECTED: Template literal syntax\n      formatter: value => `${CURRENCY_SYMBOL}${value ? value.toFixed(2) : ''}`\n    }\n  },\n  plotOptions: {\n    candlestick: {\n      colors: {\n        up: '#00B746',\n        // Green for up candles\n        down: '#EF403C' // Red for down candles\n      }\n    }\n  },\n  tooltip: {\n    x: {\n      // CORRECTED: Standard ApexCharts date format for tooltip, including year\n      format: 'dd MMM yyyy'\n    },\n    y: {\n      formatter: function (val) {\n        // CORRECTED: Template literal syntax\n        return `${CURRENCY_SYMBOL}${val ? val.toFixed(2) : ''}`;\n      }\n    }\n  }\n};\nfunction StockChart({\n  symbol\n}) {\n  _s();\n  var _series$;\n  const [series, setSeries] = useState([{\n    data: []\n  }]);\n  const [loading, setLoading] = useState(true);\n  const [chartError, setChartError] = useState(null);\n  const [chartOptions, setChartOptions] = useState(defaultChartOptions);\n  const fetchHistoricalData = useCallback(async stockSymbol => {\n    if (!stockSymbol || isInvalidApiKey(FINNHUB_API_KEY)) {\n      setChartError(\"Invalid symbol or Finnhub API Key. Please ensure it's correct and active.\");\n      setLoading(false);\n      setSeries([{\n        data: []\n      }]);\n      return;\n    }\n    setLoading(true);\n    setChartError(null);\n    setSeries([{\n      data: []\n    }]); // Clear previous data\n\n    const now = Math.floor(Date.now() / 1000); // Current timestamp in seconds\n    // IMPORTANT MODIFICATION: Reverting to a shorter period (e.g., 30 days)\n    // to be compatible with typical Finnhub free tier limitations for daily data.\n    const periodInSeconds = 30 * 24 * 60 * 60; // 30 days in seconds\n    const fromTimestamp = now - periodInSeconds;\n    const resolution = 'D'; // 'D' for daily candles\n\n    try {\n      // CORRECTED: Template literal syntax for the Finnhub API URL\n      const response = await axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${stockSymbol}&resolution=${resolution}&from=${fromTimestamp}&to=${now}&token=${FINNHUB_API_KEY}`);\n      const {\n        c,\n        h,\n        l,\n        o,\n        t\n      } = response.data; // c: close, h: high, l: low, o: open, t: timestamp\n\n      if (response.data.s === 'no_data' || !c || c.length === 0) {\n        setChartError(`No historical data found for ${stockSymbol} for the last ${periodInSeconds / (24 * 60 * 60)} days. This is commonly due to Finnhub free tier API restrictions or an invalid symbol.`);\n        setSeries([{\n          data: []\n        }]);\n        return;\n      }\n      const formattedData = t.map((timestamp, index) => ({\n        x: new Date(timestamp * 1000),\n        // Convert timestamp to milliseconds\n        y: [o[index], h[index], l[index], c[index]] // [Open, High, Low, Close]\n      }));\n      setSeries([{\n        data: formattedData\n      }]);\n      setChartOptions(prevOptions => ({\n        ...prevOptions,\n        title: {\n          text: `${stockSymbol} Candlestick Chart (Last ${periodInSeconds / (24 * 60 * 60)} Days)`\n        }\n      }));\n    } catch (err) {\n      console.error(\"Error fetching historical data:\", err);\n      setChartError(`Failed to load chart for ${stockSymbol}. Please verify your Finnhub API key. Finnhub free tier has strict limitations on historical data access, often only providing the last 30 days of daily data.`);\n      setSeries([{\n        data: []\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  }, []); // MODIFIED: Removed stable imports from useCallback dependencies.\n\n  useEffect(() => {\n    fetchHistoricalData(symbol);\n  }, [symbol, fetchHistoricalData]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n  if (chartError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message error-message\",\n      children: chartError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }, this);\n  }\n  if (((_series$ = series[0]) === null || _series$ === void 0 ? void 0 : _series$.data.length) === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message info-message\",\n      children: [\"No chart data available for \", symbol, \" for the requested period. This is likely due to Finnhub free tier API limitations.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-chart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartOptions,\n      series: series,\n      type: \"candlestick\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n_s(StockChart, \"I3SdLQefiMxMtsoxSRvWU6Fp21c=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Chart","FINNHUB_API_KEY","isInvalidApiKey","CURRENCY_SYMBOL","jsxDEV","_jsxDEV","defaultChartOptions","chart","type","height","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","title","text","align","xaxis","labels","formatter","val","Date","toLocaleDateString","yaxis","tooltip","enabled","value","toFixed","plotOptions","candlestick","colors","up","down","x","format","y","StockChart","symbol","_s","_series$","series","setSeries","data","loading","setLoading","chartError","setChartError","chartOptions","setChartOptions","fetchHistoricalData","stockSymbol","now","Math","floor","periodInSeconds","fromTimestamp","resolution","response","get","c","h","l","o","t","s","length","formattedData","map","timestamp","index","prevOptions","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/StockChart.js"],"sourcesContent":["// src/components/StockChart.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { FINNHUB_API_KEY, isInvalidApiKey, CURRENCY_SYMBOL } from '../TradingDataContext'; // Import FINNHUB_API_KEY and helper\n\n// Define options for the chart\nconst defaultChartOptions = {\n    chart: {\n        type: 'candlestick',\n        height: 350,\n        toolbar: {\n            show: true,\n            tools: {\n                download: true,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n            },\n        },\n    },\n    title: {\n        text: 'Candlestick Chart',\n        align: 'left'\n    },\n    xaxis: {\n        type: 'datetime',\n        labels: {\n            formatter: function(val) {\n                return new Date(val).toLocaleDateString();\n            }\n        }\n    },\n    yaxis: {\n        tooltip: {\n            enabled: true\n        },\n        labels: {\n            // CORRECTED: Template literal syntax\n            formatter: (value) => `${CURRENCY_SYMBOL}${value ? value.toFixed(2) : ''}`\n        }\n    },\n    plotOptions: {\n        candlestick: {\n            colors: {\n                up: '#00B746', // Green for up candles\n                down: '#EF403C' // Red for down candles\n            }\n        }\n    },\n    tooltip: {\n        x: {\n            // CORRECTED: Standard ApexCharts date format for tooltip, including year\n            format: 'dd MMM yyyy'\n        },\n        y: {\n            formatter: function(val) {\n                // CORRECTED: Template literal syntax\n                return `${CURRENCY_SYMBOL}${val ? val.toFixed(2) : ''}`;\n            }\n        }\n    }\n};\n\nfunction StockChart({ symbol }) {\n    const [series, setSeries] = useState([{ data: [] }]);\n    const [loading, setLoading] = useState(true);\n    const [chartError, setChartError] = useState(null);\n    const [chartOptions, setChartOptions] = useState(defaultChartOptions);\n\n    const fetchHistoricalData = useCallback(async (stockSymbol) => {\n        if (!stockSymbol || isInvalidApiKey(FINNHUB_API_KEY)) {\n            setChartError(\"Invalid symbol or Finnhub API Key. Please ensure it's correct and active.\");\n            setLoading(false);\n            setSeries([{ data: [] }]);\n            return;\n        }\n\n        setLoading(true);\n        setChartError(null);\n        setSeries([{ data: [] }]); // Clear previous data\n\n        const now = Math.floor(Date.now() / 1000); // Current timestamp in seconds\n        // IMPORTANT MODIFICATION: Reverting to a shorter period (e.g., 30 days)\n        // to be compatible with typical Finnhub free tier limitations for daily data.\n        const periodInSeconds = 30 * 24 * 60 * 60; // 30 days in seconds\n        const fromTimestamp = now - periodInSeconds;\n        const resolution = 'D'; // 'D' for daily candles\n\n        try {\n            // CORRECTED: Template literal syntax for the Finnhub API URL\n            const response = await axios.get(\n                `https://finnhub.io/api/v1/stock/candle?symbol=${stockSymbol}&resolution=${resolution}&from=${fromTimestamp}&to=${now}&token=${FINNHUB_API_KEY}`\n            );\n\n            const { c, h, l, o, t } = response.data; // c: close, h: high, l: low, o: open, t: timestamp\n\n            if (response.data.s === 'no_data' || !c || c.length === 0) {\n                setChartError(`No historical data found for ${stockSymbol} for the last ${periodInSeconds / (24 * 60 * 60)} days. This is commonly due to Finnhub free tier API restrictions or an invalid symbol.`);\n                setSeries([{ data: [] }]);\n                return;\n            }\n\n            const formattedData = t.map((timestamp, index) => ({\n                x: new Date(timestamp * 1000), // Convert timestamp to milliseconds\n                y: [o[index], h[index], l[index], c[index]] // [Open, High, Low, Close]\n            }));\n\n            setSeries([{ data: formattedData }]);\n            setChartOptions(prevOptions => ({\n                ...prevOptions,\n                title: { text: `${stockSymbol} Candlestick Chart (Last ${periodInSeconds / (24 * 60 * 60)} Days)` }\n            }));\n\n        } catch (err) {\n            console.error(\"Error fetching historical data:\", err);\n            setChartError(`Failed to load chart for ${stockSymbol}. Please verify your Finnhub API key. Finnhub free tier has strict limitations on historical data access, often only providing the last 30 days of daily data.`);\n            setSeries([{ data: [] }]);\n        } finally {\n            setLoading(false);\n        }\n    }, []); // MODIFIED: Removed stable imports from useCallback dependencies.\n\n    useEffect(() => {\n        fetchHistoricalData(symbol);\n    }, [symbol, fetchHistoricalData]);\n\n    if (loading) {\n        return (\n            <div className=\"chart-loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading chart data...</p>\n            </div>\n        );\n    }\n\n    if (chartError) {\n        return <p className=\"message error-message\">{chartError}</p>;\n    }\n\n    if (series[0]?.data.length === 0) {\n        return <p className=\"message info-message\">No chart data available for {symbol} for the requested period. This is likely due to Finnhub free tier API limitations.</p>;\n    }\n\n    return (\n        <div className=\"stock-chart-wrapper\">\n            <Chart\n                options={chartOptions}\n                series={series}\n                type=\"candlestick\"\n                height={350}\n            />\n        </div>\n    );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}