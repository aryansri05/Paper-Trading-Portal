{"ast":null,"code":"// src/components/Dashboard.js\nimport React,{useState,useCallback,useMemo,useEffect,useRef}from'react';// Keep useRef for other elements if needed, but not for datalist\nimport axios from'axios';import{useTradingData,isInvalidApiKey,FINNHUB_API_KEY,CURRENCY_SYMBOL}from'../TradingDataContext';import{useNavigate}from'react-router-dom';import'./Dashboard.css';// Assuming you have or will create this file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){var _selectedSymbolDetail,_selectedSymbolDetail2;const{user,capital,trades,livePrices,availableSymbols,// <--- We'll use this directly for the datalist\nfetchLivePrices,calculatePnL,calculateTotalPortfolioValue,loadingData,watchListSymbols,addToWatchlist,removeFromWatchlist,holdings:contextHoldings,addTrade:contextAddTrade,removeTrade:contextRemoveTrade}=useTradingData();const navigate=useNavigate();// --- State for Stock Search ---\nconst[searchTerm,setSearchTerm]=useState('');const[selectedSymbolDetails,setSelectedSymbolDetails]=useState(null);const[stockSearchError,setStockSearchError]=useState(null);// No need for filteredSuggestions, showSuggestions, searchWrapperRef for datalist\nconst[quantity,setQuantity]=useState(0);const[orderType,setOrderType]=useState('market');// market, limit, stop\nconst[limitPrice,setLimitPrice]=useState(0);const[stopPrice,setStopPrice]=useState(0);const[tradeType,setTradeType]=useState('buy');// buy, sell\nconst[tradeMessage,setTradeMessage]=useState({text:'',type:''});const[showBuySellModal,setShowBuySellModal]=useState(false);const[modalSymbol,setModalSymbol]=useState('');const[modalPrice,setModalPrice]=useState(0);const[currentHoldingsTab,setCurrentHoldingsTab]=useState('stocks');const{holdings}=useMemo(()=>{if(!loadingData){return calculatePnL();}return{holdings:[],totalRealizedPnl:'0.00',totalUnrealizedPnl:'0.00'};},[loadingData,calculatePnL]);// --- Price Change Calculation ---\nconst calculatePriceChange=useCallback(symbol=>{const holding=holdings.find(h=>h.symbol===symbol);if(holding&&holding.netQty>0&&livePrices[symbol]&&holding.avgBuyPrice>0){const currentPrice=livePrices[symbol];const change=currentPrice-holding.avgBuyPrice;const percentageChange=change/holding.avgBuyPrice*100;return{change:change.toFixed(2),percentageChange:percentageChange.toFixed(2)};}return{change:'0.00',percentageChange:'0.00'};},[holdings,livePrices]);// Function to calculate today's change for the entire portfolio\nconst calculateTodaysChange=useCallback(()=>{const initialReferenceValue=10000;const currentTotalValue=parseFloat(calculateTotalPortfolioValue());const totalChangeAbsolute=currentTotalValue-initialReferenceValue;const totalChangePercentage=totalChangeAbsolute/initialReferenceValue*100;return{change:totalChangeAbsolute.toFixed(2),percentageChange:totalChangePercentage.toFixed(2)};},[calculateTotalPortfolioValue]);const{change:todaysChangeAbsolute,percentageChange:todaysChangePercentage}=calculateTodaysChange();const isPositiveChange=todaysChangeAbsolute>=0;// --- Search functionality (Finnhub for symbols) ---\n// handleSearchChange remains simple\nconst handleSearchChange=e=>{setSearchTerm(e.target.value.toUpperCase());// Keep symbol uppercase\nsetStockSearchError(null);// Clear previous search errors\nsetSelectedSymbolDetails(null);// Clear details when typing\n};// New helper function to fetch stock details (extracted from handleSearchSubmit)\nconst triggerSymbolDetailsFetch=useCallback(async symbolToFetch=>{if(!symbolToFetch.trim()){setStockSearchError(\"Please enter a stock symbol.\");return;}if(isInvalidApiKey(FINNHUB_API_KEY)){setStockSearchError(\"Invalid Finnhub API Key. Cannot fetch stock details.\");return;}const symbol=symbolToFetch.toUpperCase();// It's still good to validate against availableSymbols for better error messages\nif(!availableSymbols.includes(symbol)){setStockSearchError(\"'\".concat(symbol,\"' is not a valid US stock symbol or not available via Finnhub free tier.\"));setSelectedSymbolDetails(null);return;}try{const[quoteRes,profileRes]=await Promise.all([axios.get(\"https://finnhub.io/api/v1/quote?symbol=\".concat(symbol,\"&token=\").concat(FINNHUB_API_KEY)),axios.get(\"https://finnhub.io/api/v1/stock/profile2?symbol=\".concat(symbol,\"&token=\").concat(FINNHUB_API_KEY))]);const quote=quoteRes.data;const profile=profileRes.data;if(quote&&quote.c!==0&&profile&&profile.name){setSelectedSymbolDetails({symbol:symbol,currentPrice:quote.c,change:quote.d,percentChange:quote.dp,high:quote.h,low:quote.l,open:quote.o,previousClose:quote.pc,companyName:profile.name,industry:profile.finnhubIndustry,marketCap:profile.marketCapitalization,ipo:profile.ipo,weburl:profile.weburl});fetchLivePrices([symbol]);}else{setStockSearchError(\"No real-time data found for \".concat(symbol,\". It might be delisted or not available on free tier.\"));setSelectedSymbolDetails(null);}}catch(error){console.error(\"Error fetching stock details:\",error);if(error.response&&error.response.status===429){setStockSearchError(\"You've hit Finnhub API rate limits. Please wait a moment and try again.\");}else{setStockSearchError(\"Failed to fetch data for \".concat(symbol,\". Please check the symbol and your API key.\"));}setSelectedSymbolDetails(null);}},[availableSymbols,fetchLivePrices,FINNHUB_API_KEY,isInvalidApiKey]);// handleSearchSubmit will now trigger the details fetch for the current searchTerm\nconst handleSearchSubmit=useCallback(e=>{e.preventDefault();triggerSymbolDetailsFetch(searchTerm);},[searchTerm,triggerSymbolDetailsFetch]);// --- Trade Execution ---\nconst handleTrade=async()=>{if(!user){setTradeMessage({text:'Please log in to place a trade.',type:'error'});return;}if(!modalSymbol||quantity<=0||!modalPrice){setTradeMessage({text:'Please enter a valid symbol, quantity, and price.',type:'error'});return;}try{await contextAddTrade({symbol:modalSymbol,quantity:quantity,price:modalPrice,type:tradeType});setTradeMessage({text:\"\".concat(modalSymbol,\" \").concat(tradeType==='buy'?'bought':'sold',\" successfully!\"),type:'success'});setQuantity(0);setShowBuySellModal(false);}catch(error){console.error(\"Error placing trade:\",error);setTradeMessage({text:\"Failed to place trade: \".concat(error.message),type:'error'});}};const openBuySellModal=(symbol,price,type)=>{setModalSymbol(symbol);setModalPrice(price);setTradeType(type);setQuantity(0);setShowBuySellModal(true);setTradeMessage({text:'',type:''});};const handleRemoveTrade=async tradeId=>{if(window.confirm(\"Are you sure you want to remove this trade? This will adjust your capital and holdings.\")){try{await contextRemoveTrade({id:tradeId});setTradeMessage({text:'Trade successfully removed and capital/holdings adjusted.',type:'success'});}catch(error){setTradeMessage({text:\"Failed to remove trade: \".concat(error.message),type:'error'});}}};const currentPortfolioValue=parseFloat(calculateTotalPortfolioValue());const initialTotalCapital=10000;const netProfitLoss=currentPortfolioValue-initialTotalCapital;const netProfitLossPercentage=netProfitLoss/initialTotalCapital*100;const isNetProfit=netProfitLoss>=0;if(loadingData){return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading trading data...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"trading-dashboard-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:user?/*#__PURE__*/_jsxs(\"h1\",{className:\"welcome-message\",children:[\"Welcome, \",user.email,\"!\"]}):/*#__PURE__*/_jsx(\"h1\",{className:\"welcome-message\",children:\"Welcome to Paper Trading!\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-panel account-value-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"panel-title\",children:\"Account Value\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Account Value\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[CURRENCY_SYMBOL,currentPortfolioValue.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Today's Change\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value \".concat(isPositiveChange?'text-green':'text-red'),children:[todaysChangeAbsolute,\" (\",isPositiveChange?'+':'',todaysChangePercentage,\"%)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Buying Power\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[CURRENCY_SYMBOL,capital.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Cash\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value\",children:[CURRENCY_SYMBOL,capital.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Net P&L (All Time)\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value \".concat(isNetProfit?'text-green':'text-red'),children:[CURRENCY_SYMBOL,netProfitLoss.toFixed(2),\" (\",isNetProfit?'+':'',netProfitLossPercentage.toFixed(2),\"%)\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-panel performance-chart-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"panel-title\",children:\"Performance History\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-placeholder\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Your performance chart will update daily starting tomorrow.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group-top-right\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn active\",children:\"1W\"}),/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn\",children:\"1M\"}),/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn\",children:\"3M\"}),/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn\",children:\"6M\"}),/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn\",children:\"1Y\"}),/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn\",children:\"5Y\"}),/*#__PURE__*/_jsx(\"button\",{className:\"performance-btn\",children:\"Max\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-performance-history\",children:\"Performance History\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-panel trade-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"panel-title\",children:\"Place Order\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearchSubmit,className:\"stock-search-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter stock symbol (e.g., AAPL)\",value:searchTerm,onChange:handleSearchChange,list:\"available-symbols-datalist\"// <--- KEY CHANGE: Link to datalist\n,className:\"search-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"search-button\",children:\"Search\"})]}),/*#__PURE__*/_jsx(\"datalist\",{id:\"available-symbols-datalist\",children:availableSymbols.map(symbol=>/*#__PURE__*/_jsx(\"option\",{value:symbol},symbol))}),stockSearchError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:stockSearchError}),selectedSymbolDetails&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-stock-details\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[selectedSymbolDetails.companyName,\" (\",selectedSymbolDetails.symbol,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Current Price: \",CURRENCY_SYMBOL,selectedSymbolDetails.currentPrice.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{className:\"price-change-detail \".concat(selectedSymbolDetails.change>=0?'text-green':'text-red'),children:[selectedSymbolDetails.change>=0?'+':'',(_selectedSymbolDetail=selectedSymbolDetails.change)===null||_selectedSymbolDetail===void 0?void 0:_selectedSymbolDetail.toFixed(2),\" (\",selectedSymbolDetails.percentChange>=0?'+':'',(_selectedSymbolDetail2=selectedSymbolDetails.percentChange)===null||_selectedSymbolDetail2===void 0?void 0:_selectedSymbolDetail2.toFixed(2),\"%)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trade-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"buy-button\",onClick:()=>openBuySellModal(selectedSymbolDetails.symbol,selectedSymbolDetails.currentPrice,'buy'),children:\"Buy\"}),/*#__PURE__*/_jsx(\"button\",{className:\"sell-button\",onClick:()=>openBuySellModal(selectedSymbolDetails.symbol,selectedSymbolDetails.currentPrice,'sell'),children:\"Sell\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-details-button\",onClick:()=>navigate(\"/stock/\".concat(selectedSymbolDetails.symbol)),children:\"View Details\"}),watchListSymbols.includes(selectedSymbolDetails.symbol)?/*#__PURE__*/_jsx(\"button\",{className:\"remove-watchlist-button\",onClick:()=>removeFromWatchlist(selectedSymbolDetails.symbol),children:\"Remove from Watchlist\"}):/*#__PURE__*/_jsx(\"button\",{className:\"add-watchlist-button\",onClick:()=>addToWatchlist(selectedSymbolDetails.symbol),children:\"Add to Watchlist\"})]})]}),showBuySellModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[tradeType.toUpperCase(),\" \",modalSymbol,\" at \",CURRENCY_SYMBOL,modalPrice.toFixed(2)]}),tradeMessage.text&&/*#__PURE__*/_jsx(\"p\",{className:\"message \".concat(tradeMessage.type),children:tradeMessage.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quantity\",children:\"Quantity:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"quantity\",type:\"number\",min:\"1\",value:quantity,onChange:e=>setQuantity(parseInt(e.target.value)||0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"orderType\",children:\"Order Type:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"orderType\",value:orderType,onChange:e=>setOrderType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"market\",children:\"Market\"}),/*#__PURE__*/_jsx(\"option\",{value:\"limit\",children:\"Limit\"}),/*#__PURE__*/_jsx(\"option\",{value:\"stop\",children:\"Stop\"})]})]}),orderType==='limit'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"limitPrice\",children:\"Limit Price:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"limitPrice\",type:\"number\",value:limitPrice,onChange:e=>setLimitPrice(parseFloat(e.target.value)||0),step:\"0.01\"})]}),orderType==='stop'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"stopPrice\",children:\"Stop Price:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"stopPrice\",type:\"number\",value:stopPrice,onChange:e=>setStopPrice(parseFloat(e.target.value)||0),step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"confirm-trade-button\",onClick:handleTrade,children:[\"Confirm \",tradeType.toUpperCase()]}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:()=>setShowBuySellModal(false),children:\"Cancel\"})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-panel holdings-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"panel-title\",children:\"Holdings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(currentHoldingsTab==='stocks'?'active':''),onClick:()=>setCurrentHoldingsTab('stocks'),children:\"Stocks & ETFs\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(currentHoldingsTab==='options'?'active':''),onClick:()=>setCurrentHoldingsTab('options'),children:\"Options\"})]}),currentHoldingsTab==='stocks'&&/*#__PURE__*/_jsx(\"div\",{className:\"holdings-table-container\",children:holdings.filter(h=>h.netQty>0).length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Current Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Today's Change\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Purchase Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Value\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Trade Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:holdings.filter(h=>h.netQty>0).map(holding=>{const currentPrice=livePrices[holding.symbol]||0;const totalValue=currentPrice*holding.netQty;const{change,percentageChange}=calculatePriceChange(holding.symbol);const isHoldingPositiveChange=parseFloat(change)>=0;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:holding.symbol}),/*#__PURE__*/_jsx(\"td\",{children:(selectedSymbolDetails===null||selectedSymbolDetails===void 0?void 0:selectedSymbolDetails.symbol)===holding.symbol?selectedSymbolDetails===null||selectedSymbolDetails===void 0?void 0:selectedSymbolDetails.companyName:'N/A'}),/*#__PURE__*/_jsxs(\"td\",{children:[CURRENCY_SYMBOL,currentPrice.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{className:isHoldingPositiveChange?'text-green':'text-red',children:[change,\" (\",isHoldingPositiveChange?'+':'',percentageChange,\"%)\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[CURRENCY_SYMBOL,holding.avgBuyPrice.toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{children:holding.netQty}),/*#__PURE__*/_jsxs(\"td\",{children:[CURRENCY_SYMBOL,totalValue.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"sell-button-small\",onClick:()=>openBuySellModal(holding.symbol,currentPrice,'sell'),children:\"Sell\"}),/*#__PURE__*/_jsx(\"button\",{className:\"buy-button-small\",onClick:()=>openBuySellModal(holding.symbol,currentPrice,'buy'),children:\"Buy More\"})]})]},holding.symbol);})})]}):/*#__PURE__*/_jsx(\"p\",{className:\"message info-message\",children:\"You have no stock holdings yet.\"})}),currentHoldingsTab==='options'&&/*#__PURE__*/_jsx(\"div\",{className:\"options-holding-placeholder\",children:/*#__PURE__*/_jsx(\"p\",{className:\"message info-message\",children:\"Options trading not implemented yet.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-panel trade-history-panel\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"panel-title\",children:\"Trade History\"}),/*#__PURE__*/_jsx(\"div\",{className:\"trade-history-table-container\",children:trades.length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:trades.map(trade=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:trade.symbol}),/*#__PURE__*/_jsx(\"td\",{className:trade.type==='buy'?'text-green':'text-red',children:trade.type.toUpperCase()}),/*#__PURE__*/_jsx(\"td\",{children:trade.quantity}),/*#__PURE__*/_jsxs(\"td\",{children:[CURRENCY_SYMBOL,trade.price.toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{children:new Date(trade.created_at).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"remove-trade-button\",onClick:()=>handleRemoveTrade(trade.id),children:\"Remove\"})})]},trade.id))})]}):/*#__PURE__*/_jsx(\"p\",{className:\"message info-message\",children:\"No trade history yet.\"})})]})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","useRef","axios","useTradingData","isInvalidApiKey","FINNHUB_API_KEY","CURRENCY_SYMBOL","useNavigate","jsx","_jsx","jsxs","_jsxs","Dashboard","_selectedSymbolDetail","_selectedSymbolDetail2","user","capital","trades","livePrices","availableSymbols","fetchLivePrices","calculatePnL","calculateTotalPortfolioValue","loadingData","watchListSymbols","addToWatchlist","removeFromWatchlist","holdings","contextHoldings","addTrade","contextAddTrade","removeTrade","contextRemoveTrade","navigate","searchTerm","setSearchTerm","selectedSymbolDetails","setSelectedSymbolDetails","stockSearchError","setStockSearchError","quantity","setQuantity","orderType","setOrderType","limitPrice","setLimitPrice","stopPrice","setStopPrice","tradeType","setTradeType","tradeMessage","setTradeMessage","text","type","showBuySellModal","setShowBuySellModal","modalSymbol","setModalSymbol","modalPrice","setModalPrice","currentHoldingsTab","setCurrentHoldingsTab","totalRealizedPnl","totalUnrealizedPnl","calculatePriceChange","symbol","holding","find","h","netQty","avgBuyPrice","currentPrice","change","percentageChange","toFixed","calculateTodaysChange","initialReferenceValue","currentTotalValue","parseFloat","totalChangeAbsolute","totalChangePercentage","todaysChangeAbsolute","todaysChangePercentage","isPositiveChange","handleSearchChange","e","target","value","toUpperCase","triggerSymbolDetailsFetch","symbolToFetch","trim","includes","concat","quoteRes","profileRes","Promise","all","get","quote","data","profile","c","name","d","percentChange","dp","high","low","l","open","o","previousClose","pc","companyName","industry","finnhubIndustry","marketCap","marketCapitalization","ipo","weburl","error","console","response","status","handleSearchSubmit","preventDefault","handleTrade","price","message","openBuySellModal","handleRemoveTrade","tradeId","window","confirm","id","currentPortfolioValue","initialTotalCapital","netProfitLoss","netProfitLossPercentage","isNetProfit","className","children","email","onSubmit","placeholder","onChange","list","map","onClick","htmlFor","min","parseInt","step","filter","length","totalValue","isHoldingPositiveChange","trade","Date","created_at","toLocaleDateString"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useState, useCallback, useMemo, useEffect, useRef } from 'react'; // Keep useRef for other elements if needed, but not for datalist\nimport axios from 'axios';\nimport { useTradingData, isInvalidApiKey, FINNHUB_API_KEY, CURRENCY_SYMBOL } from '../TradingDataContext';\nimport { useNavigate } from 'react-router-dom';\n\nimport './Dashboard.css'; // Assuming you have or will create this file\n\nfunction Dashboard() {\n    const {\n        user,\n        capital,\n        trades,\n        livePrices,\n        availableSymbols, // <--- We'll use this directly for the datalist\n        fetchLivePrices,\n        calculatePnL,\n        calculateTotalPortfolioValue,\n        loadingData,\n        watchListSymbols,\n        addToWatchlist,\n        removeFromWatchlist,\n        holdings: contextHoldings,\n        addTrade: contextAddTrade,\n        removeTrade: contextRemoveTrade,\n    } = useTradingData();\n\n    const navigate = useNavigate();\n\n    // --- State for Stock Search ---\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedSymbolDetails, setSelectedSymbolDetails] = useState(null);\n    const [stockSearchError, setStockSearchError] = useState(null);\n\n    // No need for filteredSuggestions, showSuggestions, searchWrapperRef for datalist\n\n    const [quantity, setQuantity] = useState(0);\n    const [orderType, setOrderType] = useState('market'); // market, limit, stop\n    const [limitPrice, setLimitPrice] = useState(0);\n    const [stopPrice, setStopPrice] = useState(0);\n    const [tradeType, setTradeType] = useState('buy'); // buy, sell\n    const [tradeMessage, setTradeMessage] = useState({ text: '', type: '' });\n    const [showBuySellModal, setShowBuySellModal] = useState(false);\n    const [modalSymbol, setModalSymbol] = useState('');\n    const [modalPrice, setModalPrice] = useState(0);\n    const [currentHoldingsTab, setCurrentHoldingsTab] = useState('stocks');\n\n    const { holdings } = useMemo(() => {\n        if (!loadingData) {\n            return calculatePnL();\n        }\n        return { holdings: [], totalRealizedPnl: '0.00', totalUnrealizedPnl: '0.00' };\n    }, [loadingData, calculatePnL]);\n\n    // --- Price Change Calculation ---\n    const calculatePriceChange = useCallback((symbol) => {\n        const holding = holdings.find(h => h.symbol === symbol);\n        if (holding && holding.netQty > 0 && livePrices[symbol] && holding.avgBuyPrice > 0) {\n            const currentPrice = livePrices[symbol];\n            const change = currentPrice - holding.avgBuyPrice;\n            const percentageChange = (change / holding.avgBuyPrice) * 100;\n            return { change: change.toFixed(2), percentageChange: percentageChange.toFixed(2) };\n        }\n        return { change: '0.00', percentageChange: '0.00' };\n    }, [holdings, livePrices]);\n\n    // Function to calculate today's change for the entire portfolio\n    const calculateTodaysChange = useCallback(() => {\n        const initialReferenceValue = 10000;\n        const currentTotalValue = parseFloat(calculateTotalPortfolioValue());\n        const totalChangeAbsolute = currentTotalValue - initialReferenceValue;\n        const totalChangePercentage = (totalChangeAbsolute / initialReferenceValue) * 100;\n\n        return {\n            change: totalChangeAbsolute.toFixed(2),\n            percentageChange: totalChangePercentage.toFixed(2)\n        };\n    }, [calculateTotalPortfolioValue]);\n\n    const { change: todaysChangeAbsolute, percentageChange: todaysChangePercentage } = calculateTodaysChange();\n    const isPositiveChange = todaysChangeAbsolute >= 0;\n\n    // --- Search functionality (Finnhub for symbols) ---\n    // handleSearchChange remains simple\n    const handleSearchChange = (e) => {\n        setSearchTerm(e.target.value.toUpperCase()); // Keep symbol uppercase\n        setStockSearchError(null); // Clear previous search errors\n        setSelectedSymbolDetails(null); // Clear details when typing\n    };\n\n    // New helper function to fetch stock details (extracted from handleSearchSubmit)\n    const triggerSymbolDetailsFetch = useCallback(async (symbolToFetch) => {\n        if (!symbolToFetch.trim()) {\n            setStockSearchError(\"Please enter a stock symbol.\");\n            return;\n        }\n        if (isInvalidApiKey(FINNHUB_API_KEY)) {\n            setStockSearchError(\"Invalid Finnhub API Key. Cannot fetch stock details.\");\n            return;\n        }\n\n        const symbol = symbolToFetch.toUpperCase();\n\n        // It's still good to validate against availableSymbols for better error messages\n        if (!availableSymbols.includes(symbol)) {\n            setStockSearchError(`'${symbol}' is not a valid US stock symbol or not available via Finnhub free tier.`);\n            setSelectedSymbolDetails(null);\n            return;\n        }\n\n        try {\n            const [quoteRes, profileRes] = await Promise.all([\n                axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`),\n                axios.get(`https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`)\n            ]);\n\n            const quote = quoteRes.data;\n            const profile = profileRes.data;\n\n            if (quote && quote.c !== 0 && profile && profile.name) {\n                setSelectedSymbolDetails({\n                    symbol: symbol,\n                    currentPrice: quote.c,\n                    change: quote.d,\n                    percentChange: quote.dp,\n                    high: quote.h,\n                    low: quote.l,\n                    open: quote.o,\n                    previousClose: quote.pc,\n                    companyName: profile.name,\n                    industry: profile.finnhubIndustry,\n                    marketCap: profile.marketCapitalization,\n                    ipo: profile.ipo,\n                    weburl: profile.weburl\n                });\n                fetchLivePrices([symbol]);\n            } else {\n                setStockSearchError(`No real-time data found for ${symbol}. It might be delisted or not available on free tier.`);\n                setSelectedSymbolDetails(null);\n            }\n        } catch (error) {\n            console.error(\"Error fetching stock details:\", error);\n            if (error.response && error.response.status === 429) {\n                 setStockSearchError(\"You've hit Finnhub API rate limits. Please wait a moment and try again.\");\n            } else {\n                 setStockSearchError(`Failed to fetch data for ${symbol}. Please check the symbol and your API key.`);\n            }\n            setSelectedSymbolDetails(null);\n        }\n    }, [availableSymbols, fetchLivePrices, FINNHUB_API_KEY, isInvalidApiKey]);\n\n    // handleSearchSubmit will now trigger the details fetch for the current searchTerm\n    const handleSearchSubmit = useCallback((e) => {\n        e.preventDefault();\n        triggerSymbolDetailsFetch(searchTerm);\n    }, [searchTerm, triggerSymbolDetailsFetch]);\n\n\n    // --- Trade Execution ---\n    const handleTrade = async () => {\n        if (!user) {\n            setTradeMessage({ text: 'Please log in to place a trade.', type: 'error' });\n            return;\n        }\n        if (!modalSymbol || quantity <= 0 || !modalPrice) {\n            setTradeMessage({ text: 'Please enter a valid symbol, quantity, and price.', type: 'error' });\n            return;\n        }\n\n        try {\n            await contextAddTrade({\n                symbol: modalSymbol,\n                quantity: quantity,\n                price: modalPrice,\n                type: tradeType,\n            });\n\n            setTradeMessage({ text: `${modalSymbol} ${tradeType === 'buy' ? 'bought' : 'sold'} successfully!`, type: 'success' });\n\n            setQuantity(0);\n            setShowBuySellModal(false);\n\n        } catch (error) {\n            console.error(\"Error placing trade:\", error);\n            setTradeMessage({ text: `Failed to place trade: ${error.message}`, type: 'error' });\n        }\n    };\n\n    const openBuySellModal = (symbol, price, type) => {\n        setModalSymbol(symbol);\n        setModalPrice(price);\n        setTradeType(type);\n        setQuantity(0);\n        setShowBuySellModal(true);\n        setTradeMessage({ text: '', type: '' });\n    };\n\n    const handleRemoveTrade = async (tradeId) => {\n        if (window.confirm(\"Are you sure you want to remove this trade? This will adjust your capital and holdings.\")) {\n            try {\n                await contextRemoveTrade({ id: tradeId });\n                setTradeMessage({ text: 'Trade successfully removed and capital/holdings adjusted.', type: 'success' });\n            } catch (error) {\n                setTradeMessage({ text: `Failed to remove trade: ${error.message}`, type: 'error' });\n            }\n        }\n    };\n\n    const currentPortfolioValue = parseFloat(calculateTotalPortfolioValue());\n    const initialTotalCapital = 10000;\n    const netProfitLoss = currentPortfolioValue - initialTotalCapital;\n    const netProfitLossPercentage = (netProfitLoss / initialTotalCapital) * 100;\n    const isNetProfit = netProfitLoss >= 0;\n\n    if (loadingData) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading trading data...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"trading-dashboard-container\">\n            <div className=\"dashboard-header\">\n                {user ? (\n                    <h1 className=\"welcome-message\">Welcome, {user.email}!</h1>\n                ) : (\n                    <h1 className=\"welcome-message\">Welcome to Paper Trading!</h1>\n                )}\n            </div>\n\n            {/* Main Dashboard Grid */}\n            <div className=\"dashboard-grid\">\n                {/* Account Value Panel (Top Left) */}\n                <div className=\"dashboard-panel account-value-panel\">\n                    <h2 className=\"panel-title\">Account Value</h2>\n                    <div className=\"account-summary\">\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Account Value</span>\n                            <span className=\"value\">{CURRENCY_SYMBOL}{currentPortfolioValue.toFixed(2)}</span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Today's Change</span>\n                            <span className={`value ${isPositiveChange ? 'text-green' : 'text-red'}`}>\n                                {todaysChangeAbsolute} ({isPositiveChange ? '+' : ''}{todaysChangePercentage}%)\n                            </span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Buying Power</span>\n                            <span className=\"value\">{CURRENCY_SYMBOL}{capital.toFixed(2)}</span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Cash</span>\n                            <span className=\"value\">{CURRENCY_SYMBOL}{capital.toFixed(2)}</span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Net P&L (All Time)</span>\n                            <span className={`value ${isNetProfit ? 'text-green' : 'text-red'}`}>\n                                {CURRENCY_SYMBOL}{netProfitLoss.toFixed(2)} ({isNetProfit ? '+' : ''}{netProfitLossPercentage.toFixed(2)}%)\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Performance Chart Panel (Top Right) */}\n                <div className=\"dashboard-panel performance-chart-panel\">\n                    <h2 className=\"panel-title\">Performance History</h2>\n                    <div className=\"chart-placeholder\">\n                        <p>Your performance chart will update daily starting tomorrow.</p>\n                        <div className=\"button-group-top-right\">\n                            <button className=\"performance-btn active\">1W</button>\n                            <button className=\"performance-btn\">1M</button>\n                            <button className=\"performance-btn\">3M</button>\n                            <button className=\"performance-btn\">6M</button>\n                            <button className=\"performance-btn\">1Y</button>\n                            <button className=\"performance-btn\">5Y</button>\n                            <button className=\"performance-btn\">Max</button>\n                        </div>\n                        <button className=\"btn-performance-history\">Performance History</button>\n                    </div>\n                </div>\n\n                {/* Trade Execution Panel (Search & Place Order - left side, below Account Value) */}\n                <div className=\"dashboard-panel trade-panel\">\n                    <h2 className=\"panel-title\">Place Order</h2>\n                    {/* Removed stock-search-autocomplete-container ref={searchWrapperRef} */}\n                    <form onSubmit={handleSearchSubmit} className=\"stock-search-form\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter stock symbol (e.g., AAPL)\"\n                            value={searchTerm}\n                            onChange={handleSearchChange}\n                            list=\"available-symbols-datalist\" // <--- KEY CHANGE: Link to datalist\n                            className=\"search-input\"\n                        />\n                        <button type=\"submit\" className=\"search-button\">Search</button>\n                    </form>\n\n                    {/* --- DATALIST ELEMENT --- */}\n                    <datalist id=\"available-symbols-datalist\">\n                        {availableSymbols.map((symbol) => (\n                            <option key={symbol} value={symbol} />\n                        ))}\n                    </datalist>\n                    {/* --- END DATALIST ELEMENT --- */}\n\n                    {stockSearchError && <p className=\"error-message\">{stockSearchError}</p>}\n\n                    {selectedSymbolDetails && (\n                        <div className=\"selected-stock-details\">\n                            <h3>{selectedSymbolDetails.companyName} ({selectedSymbolDetails.symbol})</h3>\n                            <p>Current Price: {CURRENCY_SYMBOL}{selectedSymbolDetails.currentPrice.toFixed(2)}</p>\n                            <p className={`price-change-detail ${selectedSymbolDetails.change >= 0 ? 'text-green' : 'text-red'}`}>\n                                {selectedSymbolDetails.change >= 0 ? '+' : ''}{selectedSymbolDetails.change?.toFixed(2)} (\n                                {selectedSymbolDetails.percentChange >= 0 ? '+' : ''}{selectedSymbolDetails.percentChange?.toFixed(2)}%)\n                            </p>\n                            <div className=\"trade-actions\">\n                                <button\n                                    className=\"buy-button\"\n                                    onClick={() => openBuySellModal(selectedSymbolDetails.symbol, selectedSymbolDetails.currentPrice, 'buy')}\n                                >\n                                    Buy\n                                </button>\n                                <button\n                                    className=\"sell-button\"\n                                    onClick={() => openBuySellModal(selectedSymbolDetails.symbol, selectedSymbolDetails.currentPrice, 'sell')}\n                                >\n                                    Sell\n                                </button>\n                                <button\n                                    className=\"view-details-button\"\n                                    onClick={() => navigate(`/stock/${selectedSymbolDetails.symbol}`)}\n                                >\n                                    View Details\n                                </button>\n                                {watchListSymbols.includes(selectedSymbolDetails.symbol) ? (\n                                    <button\n                                        className=\"remove-watchlist-button\"\n                                        onClick={() => removeFromWatchlist(selectedSymbolDetails.symbol)}\n                                    >\n                                        Remove from Watchlist\n                                    </button>\n                                ) : (\n                                    <button\n                                        className=\"add-watchlist-button\"\n                                        onClick={() => addToWatchlist(selectedSymbolDetails.symbol)}\n                                    >\n                                        Add to Watchlist\n                                    </button>\n                                )}\n                            </div>\n                        </div>\n                    )}\n\n                    {showBuySellModal && (\n                        <div className=\"modal-overlay\">\n                            <div className=\"modal-content\">\n                                <h3>{tradeType.toUpperCase()} {modalSymbol} at {CURRENCY_SYMBOL}{modalPrice.toFixed(2)}</h3>\n                                {tradeMessage.text && <p className={`message ${tradeMessage.type}`}>{tradeMessage.text}</p>}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"quantity\">Quantity:</label>\n                                    <input\n                                        id=\"quantity\"\n                                        type=\"number\"\n                                        min=\"1\"\n                                        value={quantity}\n                                        onChange={(e) => setQuantity(parseInt(e.target.value) || 0)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"orderType\">Order Type:</label>\n                                    <select\n                                        id=\"orderType\"\n                                        value={orderType}\n                                        onChange={(e) => setOrderType(e.target.value)}\n                                    >\n                                        <option value=\"market\">Market</option>\n                                        <option value=\"limit\">Limit</option>\n                                        <option value=\"stop\">Stop</option>\n                                    </select>\n                                </div>\n                                {orderType === 'limit' && (\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"limitPrice\">Limit Price:</label>\n                                        <input\n                                            id=\"limitPrice\"\n                                            type=\"number\"\n                                            value={limitPrice}\n                                            onChange={(e) => setLimitPrice(parseFloat(e.target.value) || 0)}\n                                            step=\"0.01\"\n                                        />\n                                    </div>\n                                )}\n                                {orderType === 'stop' && (\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"stopPrice\">Stop Price:</label>\n                                        <input\n                                            id=\"stopPrice\"\n                                            type=\"number\"\n                                            value={stopPrice}\n                                            onChange={(e) => setStopPrice(parseFloat(e.target.value) || 0)}\n                                            step=\"0.01\"\n                                        />\n                                    </div>\n                                )}\n                                <div className=\"modal-actions\">\n                                    <button className=\"confirm-trade-button\" onClick={handleTrade}>\n                                        Confirm {tradeType.toUpperCase()}\n                                    </button>\n                                    <button className=\"cancel-button\" onClick={() => setShowBuySellModal(false)}>\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                {/* Holdings Panel (Bottom Left) */}\n                <div className=\"dashboard-panel holdings-panel\">\n                    <h2 className=\"panel-title\">Holdings</h2>\n                    <div className=\"tab-buttons\">\n                        <button\n                            className={`tab-button ${currentHoldingsTab === 'stocks' ? 'active' : ''}`}\n                            onClick={() => setCurrentHoldingsTab('stocks')}\n                        >\n                            Stocks & ETFs\n                        </button>\n                        <button\n                            className={`tab-button ${currentHoldingsTab === 'options' ? 'active' : ''}`}\n                            onClick={() => setCurrentHoldingsTab('options')}\n                        >\n                            Options\n                        </button>\n                    </div>\n\n                    {currentHoldingsTab === 'stocks' && (\n                        <div className=\"holdings-table-container\">\n                            {holdings.filter(h => h.netQty > 0).length > 0 ? (\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th>Symbol</th>\n                                            <th>Description</th>\n                                            <th>Current Price</th>\n                                            <th>Today's Change</th>\n                                            <th>Purchase Price</th>\n                                            <th>Qty</th>\n                                            <th>Total Value</th>\n                                            <th>Trade Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {holdings.filter(h => h.netQty > 0).map((holding) => {\n                                            const currentPrice = livePrices[holding.symbol] || 0;\n                                            const totalValue = currentPrice * holding.netQty;\n                                            const { change, percentageChange } = calculatePriceChange(holding.symbol);\n                                            const isHoldingPositiveChange = parseFloat(change) >= 0;\n\n                                            return (\n                                                <tr key={holding.symbol}>\n                                                    <td>{holding.symbol}</td>\n                                                    <td>{selectedSymbolDetails?.symbol === holding.symbol ? selectedSymbolDetails?.companyName : 'N/A'}</td>\n                                                    <td>{CURRENCY_SYMBOL}{currentPrice.toFixed(2)}</td>\n                                                    <td className={isHoldingPositiveChange ? 'text-green' : 'text-red'}>\n                                                        {change} ({isHoldingPositiveChange ? '+' : ''}{percentageChange}%)\n                                                    </td>\n                                                    <td>{CURRENCY_SYMBOL}{holding.avgBuyPrice.toFixed(2)}</td>\n                                                    <td>{holding.netQty}</td>\n                                                    <td>{CURRENCY_SYMBOL}{totalValue.toFixed(2)}</td>\n                                                    <td>\n                                                        <button\n                                                            className=\"sell-button-small\"\n                                                            onClick={() => openBuySellModal(holding.symbol, currentPrice, 'sell')}\n                                                        >\n                                                            Sell\n                                                        </button>\n                                                        <button\n                                                            className=\"buy-button-small\"\n                                                            onClick={() => openBuySellModal(holding.symbol, currentPrice, 'buy')}\n                                                        >\n                                                            Buy More\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                <p className=\"message info-message\">You have no stock holdings yet.</p>\n                            )}\n                        </div>\n                    )}\n                    {currentHoldingsTab === 'options' && (\n                        <div className=\"options-holding-placeholder\">\n                            <p className=\"message info-message\">Options trading not implemented yet.</p>\n                        </div>\n                    )}\n                </div>\n\n                {/* Trade History Panel (Bottom Right) */}\n                <div className=\"dashboard-panel trade-history-panel\">\n                    <h2 className=\"panel-title\">Trade History</h2>\n                    <div className=\"trade-history-table-container\">\n                        {trades.length > 0 ? (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Symbol</th>\n                                        <th>Type</th>\n                                        <th>Qty</th>\n                                        <th>Price</th>\n                                        <th>Date</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {trades.map((trade) => (\n                                        <tr key={trade.id}>\n                                            <td>{trade.symbol}</td>\n                                            <td className={trade.type === 'buy' ? 'text-green' : 'text-red'}>{trade.type.toUpperCase()}</td>\n                                            <td>{trade.quantity}</td>\n                                            <td>{CURRENCY_SYMBOL}{trade.price.toFixed(2)}</td>\n                                            <td>{new Date(trade.created_at).toLocaleDateString()}</td>\n                                            <td>\n                                                <button\n                                                    className=\"remove-trade-button\"\n                                                    onClick={() => handleRemoveTrade(trade.id)}\n                                                >\n                                                    Remove\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        ) : (\n                            <p className=\"message info-message\">No trade history yet.</p>\n                        )}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}