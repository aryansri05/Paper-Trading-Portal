{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/Paper-Trading-Portal/src/pages/WatchlistPage.js\",\n  _s = $RefreshSig$();\n// src/pages/WatchlistPage.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient'; // Adjust path if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WatchlistPage = () => {\n  _s();\n  const [watchlist, setWatchlist] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWatchlist = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        if (!session) {\n          setError(\"You must be logged in to view your watchlist.\");\n          setLoading(false);\n          return;\n        }\n        const user = session.user;\n        if (!user) {\n          setError(\"User session not found.\");\n          setLoading(false);\n          return;\n        }\n\n        // Fetch data from the 'watchlists' table for the current user\n        const {\n          data,\n          error\n        } = await supabase.from('watchlists').select('symbol') // Select only the symbol column\n        .eq('user_id', user.id); // Filter by the current user's ID\n\n        if (error) {\n          throw error;\n        }\n        setWatchlist(data || []); // Set the fetched data to state, default to empty array\n      } catch (err) {\n        console.error(\"Error fetching watchlist:\", err);\n        setError(err.message || \"Failed to load watchlist.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWatchlist();\n  }, []); // Empty dependency array means this runs once on mount\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-page\",\n      style: {\n        color: 'white',\n        padding: '20px'\n      },\n      children: \"Loading watchlist...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-page\",\n      style: {\n        color: 'red',\n        padding: '20px'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist-page\",\n    style: {\n      padding: '20px',\n      color: 'white',\n      backgroundColor: '#1a1a1a',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), watchlist.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your watchlist is empty. Add some stocks to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: watchlist.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          padding: '10px',\n          backgroundColor: '#2c2c2c',\n          borderRadius: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: item.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(WatchlistPage, \"cglHK3aUYI9gjy8zybP36HoOoZU=\");\n_c = WatchlistPage;\nexport default WatchlistPage;\nvar _c;\n$RefreshReg$(_c, \"WatchlistPage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","WatchlistPage","_s","watchlist","setWatchlist","loading","setLoading","error","setError","fetchWatchlist","data","session","auth","getSession","user","from","select","eq","id","err","console","message","className","style","color","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","minHeight","length","listStyleType","map","item","index","marginBottom","borderRadius","symbol","_c","$RefreshReg$"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/pages/WatchlistPage.js"],"sourcesContent":["// src/pages/WatchlistPage.js\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient'; // Adjust path if needed\n\nconst WatchlistPage = () => {\n    const [watchlist, setWatchlist] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchWatchlist = async () => {\n            setLoading(true);\n            setError(null);\n            try {\n                const { data: { session } } = await supabase.auth.getSession();\n\n                if (!session) {\n                    setError(\"You must be logged in to view your watchlist.\");\n                    setLoading(false);\n                    return;\n                }\n\n                const user = session.user;\n\n                if (!user) {\n                    setError(\"User session not found.\");\n                    setLoading(false);\n                    return;\n                }\n\n                // Fetch data from the 'watchlists' table for the current user\n                const { data, error } = await supabase\n                    .from('watchlists')\n                    .select('symbol') // Select only the symbol column\n                    .eq('user_id', user.id); // Filter by the current user's ID\n\n                if (error) {\n                    throw error;\n                }\n\n                setWatchlist(data || []); // Set the fetched data to state, default to empty array\n            } catch (err) {\n                console.error(\"Error fetching watchlist:\", err);\n                setError(err.message || \"Failed to load watchlist.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchWatchlist();\n    }, []); // Empty dependency array means this runs once on mount\n\n    if (loading) {\n        return <div className=\"watchlist-page\" style={{ color: 'white', padding: '20px' }}>Loading watchlist...</div>;\n    }\n\n    if (error) {\n        return <div className=\"watchlist-page\" style={{ color: 'red', padding: '20px' }}>Error: {error}</div>;\n    }\n\n    return (\n        <div className=\"watchlist-page\" style={{ padding: '20px', color: 'white', backgroundColor: '#1a1a1a', minHeight: '100vh' }}>\n            <h2>My Watchlist</h2>\n            {watchlist.length === 0 ? (\n                <p>Your watchlist is empty. Add some stocks to get started!</p>\n            ) : (\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\n                    {watchlist.map((item, index) => (\n                        <li key={index} style={{ marginBottom: '10px', padding: '10px', backgroundColor: '#2c2c2c', borderRadius: '5px' }}>\n                            <strong>{item.symbol}</strong>\n                            {/* You can add more details here if your watchlist table stores them,\n                                or fetch current prices using Finnhub for each symbol if desired. */}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default WatchlistPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}