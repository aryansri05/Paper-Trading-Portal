{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/paper-trading-app/src/AuthForm.jsx\";\nimport React, { useState } from \"react\";\n// import { supabase } from \"./supabaseClient\"; // Supabase client is not strictly needed for \"always login\"\n\nfunction AuthForm({\n  onLogin\n}) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSignUp, setIsSignUp] = useState(false); // Kept for UI toggle, but won't affect login\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // Can be removed or kept if you want to simulate errors\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Simulate a short delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // --- MODIFICATION FOR ALWAYS LOGIN ---\n    // Directly call onLogin with a dummy user object, bypassing Supabase\n    const dummyUser = {\n      id: \"dummy-user-id-\" + Date.now(),\n      // Unique ID for the dummy user\n      email: email || \"test@example.com\" // Use entered email or a default\n      // Add any other user properties your application might expect\n      // e.g., app_metadata: {}, user_metadata: {}, aud: \"authenticated\"\n    };\n    onLogin(dummyUser);\n    // --- END MODIFICATION ---\n\n    setLoading(false);\n\n    // Original Supabase logic (commented out or removed)\n    /*\n    let response;\n    if (isSignUp) {\n      // For \"always login\", sign-up doesn't really make sense in this context\n      // but we can simulate it if needed.\n      // response = await supabase.auth.signUp({ email, password });\n      // if (response.error) setError(response.error.message);\n      // else alert(\"Check your email for confirmation link (if enabled)\");\n      alert(\"Sign up functionality is bypassed in 'always login' mode.\");\n      onLogin({ email: email, id: 'dummy-signup-id'}); // Or however you want to handle this\n    } else {\n      // response = await supabase.auth.signInWithPassword({ email, password });\n      // if (response.error) setError(response.error.message);\n      // else if (response.data.user) {\n      //   onLogin(response.data.user);\n      // }\n    }\n    */\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: \"auto\",\n      padding: 20,\n      fontFamily: \"Arial\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, isSignUp ? \"Sign Up\" : \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n    // required // Not strictly required if we bypass auth\n    ,\n    style: {\n      width: \"100%\",\n      padding: 8,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n    // required // Not strictly required if we bypass auth\n    ,\n    style: {\n      width: \"100%\",\n      padding: 8,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    style: {\n      width: \"100%\",\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, loading ? \"Please wait...\" : isSignUp ? \"Sign Up\" : \"Login\")), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, isSignUp ? \"Already have an account?\" : \"Don't have an account?\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setError(null);\n      setIsSignUp(!isSignUp);\n    },\n    style: {\n      color: \"blue\",\n      cursor: \"pointer\",\n      background: \"none\",\n      border: \"none\",\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, isSignUp ? \"Login\" : \"Sign Up\")));\n}\nexport default AuthForm;","map":{"version":3,"names":["React","useState","AuthForm","onLogin","email","setEmail","password","setPassword","isSignUp","setIsSignUp","loading","setLoading","error","setError","handleSubmit","e","preventDefault","Promise","resolve","setTimeout","dummyUser","id","Date","now","createElement","style","maxWidth","margin","padding","fontFamily","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","width","marginBottom","disabled","color","marginTop","onClick","cursor","background","border"],"sources":["/Users/aryansrivastava/projects/paper-trading-app/src/AuthForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n// import { supabase } from \"./supabaseClient\"; // Supabase client is not strictly needed for \"always login\"\n\nfunction AuthForm({ onLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSignUp, setIsSignUp] = useState(false); // Kept for UI toggle, but won't affect login\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // Can be removed or kept if you want to simulate errors\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Simulate a short delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // --- MODIFICATION FOR ALWAYS LOGIN ---\n    // Directly call onLogin with a dummy user object, bypassing Supabase\n    const dummyUser = {\n      id: \"dummy-user-id-\" + Date.now(), // Unique ID for the dummy user\n      email: email || \"test@example.com\", // Use entered email or a default\n      // Add any other user properties your application might expect\n      // e.g., app_metadata: {}, user_metadata: {}, aud: \"authenticated\"\n    };\n    onLogin(dummyUser);\n    // --- END MODIFICATION ---\n\n    setLoading(false);\n\n    // Original Supabase logic (commented out or removed)\n    /*\n    let response;\n    if (isSignUp) {\n      // For \"always login\", sign-up doesn't really make sense in this context\n      // but we can simulate it if needed.\n      // response = await supabase.auth.signUp({ email, password });\n      // if (response.error) setError(response.error.message);\n      // else alert(\"Check your email for confirmation link (if enabled)\");\n      alert(\"Sign up functionality is bypassed in 'always login' mode.\");\n      onLogin({ email: email, id: 'dummy-signup-id'}); // Or however you want to handle this\n    } else {\n      // response = await supabase.auth.signInWithPassword({ email, password });\n      // if (response.error) setError(response.error.message);\n      // else if (response.data.user) {\n      //   onLogin(response.data.user);\n      // }\n    }\n    */\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: \"auto\", padding: 20, fontFamily: \"Arial\" }}>\n      <h2>{isSignUp ? \"Sign Up\" : \"Login\"}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          // required // Not strictly required if we bypass auth\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          // required // Not strictly required if we bypass auth\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\n        />\n        <button type=\"submit\" disabled={loading} style={{ width: \"100%\", padding: 10 }}>\n          {loading ? \"Please wait...\" : isSignUp ? \"Sign Up\" : \"Login\"}\n        </button>\n      </form>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <p style={{ marginTop: 15 }}>\n        {isSignUp ? \"Already have an account?\" : \"Don't have an account?\"}{\" \"}\n        <button\n          onClick={() => {\n            setError(null);\n            setIsSignUp(!isSignUp);\n          }}\n          style={{ color: \"blue\", cursor: \"pointer\", background: \"none\", border: \"none\", padding: 0 }}\n        >\n          {isSignUp ? \"Login\" : \"Sign Up\"}\n        </button>\n      </p>\n    </div>\n  );\n}\n\nexport default AuthForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}