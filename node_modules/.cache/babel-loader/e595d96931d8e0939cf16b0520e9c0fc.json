{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/paper-trading-app/src/TradingDashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { supabase } from \"./supabaseClient\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from \"recharts\";\n\n// Replace with your actual Finnhub API Key after getting it from finnhub.io\nconst FINNHUB_API_KEY = \"d0uv0tpr01qmg3uj77qgd0uv0tpr01qmg3uj77r0\"; // <--- IMPORTANT: Replace this!\n\nfunction TradingDashboard({\n  user\n}) {\n  const [trades, setTrades] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [form, setForm] = useState({\n    symbol: \"\",\n    quantity: \"\",\n    type: \"buy\"\n  });\n  const [capital, setCapital] = useState(() => {\n    const saved = localStorage.getItem(\"capital_\" + user.id);\n    return saved ? Number(saved) : 100000;\n  });\n  const [availableSymbols, setAvailableSymbols] = useState([]); // To store symbols from Finnhub\n  const [symbolError, setSymbolError] = useState(\"\"); // To display symbol-related errors\n\n  // Fetch available symbols from Finnhub on component mount\n  useEffect(() => {\n    const fetchAvailableSymbols = async () => {\n      try {\n        // Fetching NSE symbols. You might want to combine NSE and BSE if needed.\n        const res = await axios.get(`https://finnhub.io/api/v1/stock/symbol?exchange=NSE&token=${FINNHUB_API_KEY}`);\n        // Filter for common stock types or sort as needed\n        const symbols = res.data.filter(s => s.type === \"Common Stock\" && s.displaySymbol && s.symbol.includes(\".NS\") // Often Finnhub symbols for NSE include .NS\n        ).map(s => s.displaySymbol); // Use displaySymbol for user readability\n        setAvailableSymbols(symbols);\n      } catch (err) {\n        console.error(\"Error fetching available symbols:\", err.message);\n        setSymbolError(\"Could not fetch available symbols. Please check your API key and network.\");\n      }\n    };\n    fetchAvailableSymbols();\n  }, []); // Run only once on mount\n\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n  useEffect(() => {\n    // Only fetch prices for symbols present in trades or the form, and only if a valid API key exists\n    if (!FINNHUB_API_KEY || FINNHUB_API_KEY === \"YOUR_FINNHUB_API_KEY\") {\n      setSymbolError(\"Please set a valid Finnhub API Key.\");\n      return;\n    }\n    const symbolsToFetch = [...new Set(trades.map(t => t.symbol.toUpperCase()).concat([form.symbol.toUpperCase()]))].filter(s => s); // Filter out empty strings\n\n    const fetchPrices = async () => {\n      const prices = {};\n      for (const sym of symbolsToFetch) {\n        try {\n          // Use the exact symbol as provided by Finnhub, which might include .NS\n          // If you fetched availableSymbols, you could ensure the sym is in that list.\n          const res = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${sym}&token=${FINNHUB_API_KEY}`);\n          if (res.data && res.data.c) {\n            prices[sym] = res.data.c;\n            setSymbolError(\"\"); // Clear any previous symbol errors if a price is fetched\n          } else {\n            console.warn(`No valid price data for ${sym}. Check symbol and API key.`);\n            setSymbolError(`No live price for ${sym}. Check symbol or API limits.`);\n          }\n        } catch (err) {\n          console.error(\"Error fetching price for\", sym, err.message);\n          setSymbolError(`Failed to fetch price for ${sym}: ${err.message}.`);\n        }\n      }\n      setLivePrices(prevPrices => ({\n        ...prevPrices,\n        ...prices\n      })); // Merge new prices\n    };\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 10000);\n    return () => clearInterval(interval);\n  }, [trades, form.symbol, FINNHUB_API_KEY]); // Depend on API_KEY as well\n\n  useEffect(() => {\n    localStorage.setItem(\"capital_\" + user.id, capital);\n  }, [capital, user.id]);\n  const fetchTrades = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"trades\").select(\"*\").eq(\"user_id\", user.id).order(\"created_at\", {\n      ascending: true\n    });\n    if (!error) setTrades(data);else console.error(\"Error fetching trades:\", error.message);\n  };\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value.toUpperCase()\n  });\n  const handleBuy = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n    if (!FINNHUB_API_KEY || FINNHUB_API_KEY === \"YOUR_FINNHUB_API_KEY\") {\n      alert(\"Please set a valid Finnhub API Key to perform trades.\");\n      return;\n    }\n    if (!sym || !qty || qty <= 0 || !price) {\n      alert(\"Invalid input or live price unavailable for \" + sym);\n      return;\n    }\n    if (!availableSymbols.includes(sym) && !sym.endsWith(\".NS\")) {\n      // Basic check, better to use API validation\n      alert(`Symbol ${sym} might not be a valid Indian stock on Finnhub.`);\n      // Consider a more robust check if `availableSymbols` is fully populated\n    }\n    const cost = qty * price;\n    if (cost > capital) return alert(\"Not enough capital\");\n    const trade = {\n      user_id: user.id,\n      symbol: sym,\n      quantity: qty,\n      price,\n      type: \"buy\"\n    };\n    const {\n      error\n    } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n    setCapital(c => c - cost);\n    setForm({\n      ...form,\n      quantity: \"\"\n    });\n    fetchTrades();\n  };\n  const handleSell = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n    if (!FINNHUB_API_KEY || FINNHUB_API_KEY === \"YOUR_FINNHUB_API_KEY\") {\n      alert(\"Please set a valid Finnhub API Key to perform trades.\");\n      return;\n    }\n    if (!sym || !qty || qty <= 0 || !price) {\n      alert(\"Invalid input or live price unavailable for \" + sym);\n      return;\n    }\n\n    // Basic check for net quantity owned before selling\n    const pnlSummary = calculatePnL(trades);\n    const heldStock = pnlSummary.find(s => s.symbol === sym);\n    if (!heldStock || heldStock.netQty < qty) {\n      alert(`You only hold ${heldStock ? heldStock.netQty : 0} of ${sym}. Cannot sell ${qty}.`);\n      return;\n    }\n    const trade = {\n      user_id: user.id,\n      symbol: sym,\n      quantity: qty,\n      price,\n      type: \"sell\"\n    };\n    const {\n      error\n    } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n    setCapital(c => c + qty * price);\n    setForm({\n      ...form,\n      quantity: \"\"\n    });\n    fetchTrades();\n  };\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    window.location.reload();\n  };\n  const calculatePnL = trades => {\n    const summary = {};\n    trades.forEach(({\n      symbol,\n      quantity,\n      price,\n      type\n    }) => {\n      if (!summary[symbol]) {\n        summary[symbol] = {\n          buyQty: 0,\n          buyTotal: 0,\n          sellQty: 0,\n          sellTotal: 0\n        };\n      }\n      const q = Number(quantity),\n        p = Number(price);\n      if (type === \"buy\") {\n        summary[symbol].buyQty += q;\n        summary[symbol].buyTotal += q * p;\n      } else {\n        summary[symbol].sellQty += q;\n        summary[symbol].sellTotal += q * p;\n      }\n    });\n    return Object.entries(summary).map(([symbol, {\n      buyQty,\n      buyTotal,\n      sellQty,\n      sellTotal\n    }]) => {\n      const avgBuy = buyQty ? buyTotal / buyQty : 0;\n      const profit = sellTotal - avgBuy * sellQty;\n      return {\n        symbol,\n        netQty: buyQty - sellQty,\n        avgBuyPrice: avgBuy.toFixed(2),\n        profit: profit.toFixed(2)\n      };\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\",\n      maxWidth: 900,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCC8 Paper Trading Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, \"Capital: \\u20B9\", capital.toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      marginTop: \"1rem\",\n      display: \"flex\",\n      gap: \"0.5rem\",\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"symbol\",\n    placeholder: \"Symbol (e.g., RELIANCE.NS)\",\n    value: form.symbol,\n    onChange: handleChange,\n    required: true,\n    style: {\n      width: \"150px\",\n      textTransform: \"uppercase\"\n    }\n    // Example of using datalist for suggested symbols\n    ,\n    list: \"symbols-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"symbols-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, availableSymbols.map(sym => /*#__PURE__*/React.createElement(\"option\", {\n    key: sym,\n    value: sym,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"quantity\",\n    type: \"number\",\n    placeholder: \"Qty\",\n    value: form.quantity,\n    onChange: e => setForm({\n      ...form,\n      quantity: e.target.value\n    }),\n    required: true,\n    min: \"1\",\n    style: {\n      width: \"80px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleBuy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, \"Sell\")), symbolError && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      marginTop: \"0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 23\n    }\n  }, symbolError), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, \"Live Prices\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, Object.entries(livePrices).map(([sym, price]) => {\n    var _price$toFixed;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: sym,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, sym, \": \\u20B9\", (_price$toFixed = price === null || price === void 0 ? void 0 : price.toFixed(2)) !== null && _price$toFixed !== void 0 ? _price$toFixed : \"Loading...\");\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"Trade History\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    cellPadding: \"8\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, trades.map(t => /*#__PURE__*/React.createElement(\"tr\", {\n    key: t.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, t.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, t.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", Number(t.price).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, t.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, new Date(t.created_at).toLocaleString()))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, \"Profit & Loss\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    cellPadding: \"8\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"Net Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Avg Buy\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"P&L\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, calculatePnL(trades).map(row => /*#__PURE__*/React.createElement(\"tr\", {\n    key: row.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, row.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 15\n    }\n  }, row.netQty), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", row.avgBuyPrice), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      color: row.profit >= 0 ? \"green\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", row.profit))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, \"P&L Chart\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: calculatePnL(trades),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"profit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, calculatePnL(trades).map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.profit >= 0 ? \"#4caf50\" : \"#f44336\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }))))));\n}\nexport default TradingDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","supabase","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","FINNHUB_API_KEY","TradingDashboard","user","trades","setTrades","livePrices","setLivePrices","form","setForm","symbol","quantity","type","capital","setCapital","saved","localStorage","getItem","id","Number","availableSymbols","setAvailableSymbols","symbolError","setSymbolError","fetchAvailableSymbols","res","get","symbols","data","filter","s","displaySymbol","includes","map","err","console","error","message","fetchTrades","symbolsToFetch","Set","t","toUpperCase","concat","fetchPrices","prices","sym","c","warn","prevPrices","interval","setInterval","clearInterval","setItem","from","select","eq","order","ascending","handleChange","e","target","name","value","handleBuy","qty","price","alert","endsWith","cost","trade","user_id","insert","handleSell","pnlSummary","calculatePnL","heldStock","find","netQty","handleLogout","auth","signOut","window","location","reload","summary","forEach","buyQty","buyTotal","sellQty","sellTotal","q","p","Object","entries","avgBuy","profit","avgBuyPrice","toFixed","createElement","style","padding","fontFamily","maxWidth","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","display","gap","flexWrap","placeholder","onChange","required","width","textTransform","list","key","min","color","_price$toFixed","border","cellPadding","Date","created_at","toLocaleString","row","height","strokeDasharray","dataKey","entry","index","fill"],"sources":["/Users/aryansrivastava/projects/paper-trading-app/src/TradingDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { supabase } from \"./supabaseClient\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell,\n} from \"recharts\";\n\n// Replace with your actual Finnhub API Key after getting it from finnhub.io\nconst FINNHUB_API_KEY = \"d0uv0tpr01qmg3uj77qgd0uv0tpr01qmg3uj77r0\"; // <--- IMPORTANT: Replace this!\n\nfunction TradingDashboard({ user }) {\n  const [trades, setTrades] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [form, setForm] = useState({ symbol: \"\", quantity: \"\", type: \"buy\" });\n  const [capital, setCapital] = useState(() => {\n    const saved = localStorage.getItem(\"capital_\" + user.id);\n    return saved ? Number(saved) : 100000;\n  });\n  const [availableSymbols, setAvailableSymbols] = useState([]); // To store symbols from Finnhub\n  const [symbolError, setSymbolError] = useState(\"\"); // To display symbol-related errors\n\n  // Fetch available symbols from Finnhub on component mount\n  useEffect(() => {\n    const fetchAvailableSymbols = async () => {\n      try {\n        // Fetching NSE symbols. You might want to combine NSE and BSE if needed.\n        const res = await axios.get(\n          `https://finnhub.io/api/v1/stock/symbol?exchange=NSE&token=${FINNHUB_API_KEY}`\n        );\n        // Filter for common stock types or sort as needed\n        const symbols = res.data\n          .filter(\n            (s) =>\n              s.type === \"Common Stock\" &&\n              s.displaySymbol &&\n              s.symbol.includes(\".NS\") // Often Finnhub symbols for NSE include .NS\n          )\n          .map((s) => s.displaySymbol); // Use displaySymbol for user readability\n        setAvailableSymbols(symbols);\n      } catch (err) {\n        console.error(\"Error fetching available symbols:\", err.message);\n        setSymbolError(\n          \"Could not fetch available symbols. Please check your API key and network.\"\n        );\n      }\n    };\n    fetchAvailableSymbols();\n  }, []); // Run only once on mount\n\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n\n  useEffect(() => {\n    // Only fetch prices for symbols present in trades or the form, and only if a valid API key exists\n    if (!FINNHUB_API_KEY || FINNHUB_API_KEY === \"YOUR_FINNHUB_API_KEY\") {\n      setSymbolError(\"Please set a valid Finnhub API Key.\");\n      return;\n    }\n\n    const symbolsToFetch = [\n      ...new Set(trades.map((t) => t.symbol.toUpperCase()).concat([form.symbol.toUpperCase()])),\n    ].filter((s) => s); // Filter out empty strings\n\n    const fetchPrices = async () => {\n      const prices = {};\n      for (const sym of symbolsToFetch) {\n        try {\n          // Use the exact symbol as provided by Finnhub, which might include .NS\n          // If you fetched availableSymbols, you could ensure the sym is in that list.\n          const res = await axios.get(\n            `https://finnhub.io/api/v1/quote?symbol=${sym}&token=${FINNHUB_API_KEY}`\n          );\n          if (res.data && res.data.c) {\n            prices[sym] = res.data.c;\n            setSymbolError(\"\"); // Clear any previous symbol errors if a price is fetched\n          } else {\n            console.warn(`No valid price data for ${sym}. Check symbol and API key.`);\n            setSymbolError(`No live price for ${sym}. Check symbol or API limits.`);\n          }\n        } catch (err) {\n          console.error(\"Error fetching price for\", sym, err.message);\n          setSymbolError(`Failed to fetch price for ${sym}: ${err.message}.`);\n        }\n      }\n      setLivePrices((prevPrices) => ({ ...prevPrices, ...prices })); // Merge new prices\n    };\n\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 10000);\n    return () => clearInterval(interval);\n  }, [trades, form.symbol, FINNHUB_API_KEY]); // Depend on API_KEY as well\n\n  useEffect(() => {\n    localStorage.setItem(\"capital_\" + user.id, capital);\n  }, [capital, user.id]);\n\n  const fetchTrades = async () => {\n    const { data, error } = await supabase\n      .from(\"trades\")\n      .select(\"*\")\n      .eq(\"user_id\", user.id)\n      .order(\"created_at\", { ascending: true });\n\n    if (!error) setTrades(data);\n    else console.error(\"Error fetching trades:\", error.message);\n  };\n\n  const handleChange = (e) =>\n    setForm({ ...form, [e.target.name]: e.target.value.toUpperCase() });\n\n  const handleBuy = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n\n    if (!FINNHUB_API_KEY || FINNHUB_API_KEY === \"YOUR_FINNHUB_API_KEY\") {\n        alert(\"Please set a valid Finnhub API Key to perform trades.\");\n        return;\n    }\n\n    if (!sym || !qty || qty <= 0 || !price) {\n      alert(\"Invalid input or live price unavailable for \" + sym);\n      return;\n    }\n\n    if (!availableSymbols.includes(sym) && !sym.endsWith(\".NS\")) { // Basic check, better to use API validation\n        alert(`Symbol ${sym} might not be a valid Indian stock on Finnhub.`);\n        // Consider a more robust check if `availableSymbols` is fully populated\n    }\n\n    const cost = qty * price;\n    if (cost > capital) return alert(\"Not enough capital\");\n\n    const trade = { user_id: user.id, symbol: sym, quantity: qty, price, type: \"buy\" };\n    const { error } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n\n    setCapital((c) => c - cost);\n    setForm({ ...form, quantity: \"\" });\n    fetchTrades();\n  };\n\n  const handleSell = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n\n    if (!FINNHUB_API_KEY || FINNHUB_API_KEY === \"YOUR_FINNHUB_API_KEY\") {\n        alert(\"Please set a valid Finnhub API Key to perform trades.\");\n        return;\n    }\n\n    if (!sym || !qty || qty <= 0 || !price) {\n      alert(\"Invalid input or live price unavailable for \" + sym);\n      return;\n    }\n\n    // Basic check for net quantity owned before selling\n    const pnlSummary = calculatePnL(trades);\n    const heldStock = pnlSummary.find(s => s.symbol === sym);\n    if (!heldStock || heldStock.netQty < qty) {\n        alert(`You only hold ${heldStock ? heldStock.netQty : 0} of ${sym}. Cannot sell ${qty}.`);\n        return;\n    }\n\n\n    const trade = { user_id: user.id, symbol: sym, quantity: qty, price, type: \"sell\" };\n    const { error } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n\n    setCapital((c) => c + qty * price);\n    setForm({ ...form, quantity: \"\" });\n    fetchTrades();\n  };\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    window.location.reload();\n  };\n\n  const calculatePnL = (trades) => {\n    const summary = {};\n    trades.forEach(({ symbol, quantity, price, type }) => {\n      if (!summary[symbol]) {\n        summary[symbol] = { buyQty: 0, buyTotal: 0, sellQty: 0, sellTotal: 0 };\n      }\n      const q = Number(quantity), p = Number(price);\n      if (type === \"buy\") {\n        summary[symbol].buyQty += q;\n        summary[symbol].buyTotal += q * p;\n      } else {\n        summary[symbol].sellQty += q;\n        summary[symbol].sellTotal += q * p;\n      }\n    });\n\n    return Object.entries(summary).map(([symbol, { buyQty, buyTotal, sellQty, sellTotal }]) => {\n      const avgBuy = buyQty ? buyTotal / buyQty : 0;\n      const profit = sellTotal - avgBuy * sellQty;\n      return {\n        symbol,\n        netQty: buyQty - sellQty,\n        avgBuyPrice: avgBuy.toFixed(2),\n        profit: profit.toFixed(2),\n      };\n    });\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\", maxWidth: 900, margin: \"auto\" }}>\n      <h1>📈 Paper Trading Dashboard</h1>\n      <p>Capital: ₹{capital.toFixed(2)}</p>\n      <button onClick={handleLogout}>Logout</button>\n\n      <form style={{ marginTop: \"1rem\", display: \"flex\", gap: \"0.5rem\", flexWrap: \"wrap\" }}>\n        <input\n          name=\"symbol\"\n          placeholder=\"Symbol (e.g., RELIANCE.NS)\"\n          value={form.symbol}\n          onChange={handleChange}\n          required\n          style={{ width: \"150px\", textTransform: \"uppercase\" }}\n          // Example of using datalist for suggested symbols\n          list=\"symbols-list\"\n        />\n        <datalist id=\"symbols-list\">\n            {availableSymbols.map((sym) => (\n                <option key={sym} value={sym} />\n            ))}\n        </datalist>\n\n        <input\n          name=\"quantity\"\n          type=\"number\"\n          placeholder=\"Qty\"\n          value={form.quantity}\n          onChange={(e) => setForm({ ...form, quantity: e.target.value })}\n          required\n          min=\"1\"\n          style={{ width: \"80px\" }}\n        />\n        <button type=\"button\" onClick={handleBuy}>Buy</button>\n        <button type=\"button\" onClick={handleSell}>Sell</button>\n      </form>\n\n      {symbolError && <p style={{ color: \"red\", marginTop: \"0.5rem\" }}>{symbolError}</p>}\n\n\n      <h2>Live Prices</h2>\n      <ul>\n        {Object.entries(livePrices).map(([sym, price]) => (\n          <li key={sym}>{sym}: ₹{price?.toFixed(2) ?? \"Loading...\"}</li>\n        ))}\n      </ul>\n\n      <h2>Trade History</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Qty</th>\n            <th>Price</th>\n            <th>Type</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {trades.map((t) => (\n            <tr key={t.id}>\n              <td>{t.symbol}</td>\n              <td>{t.quantity}</td>\n              <td>₹{Number(t.price).toFixed(2)}</td>\n              <td>{t.type}</td>\n              <td>{new Date(t.created_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>Profit & Loss</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Net Qty</th>\n            <th>Avg Buy</th>\n            <th>P&L</th>\n          </tr>\n        </thead>\n        <tbody>\n          {calculatePnL(trades).map((row) => (\n            <tr key={row.symbol}>\n              <td>{row.symbol}</td>\n              <td>{row.netQty}</td>\n              <td>₹{row.avgBuyPrice}</td>\n              <td style={{ color: row.profit >= 0 ? \"green\" : \"red\" }}>₹{row.profit}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>P&L Chart</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={calculatePnL(trades)}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"symbol\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"profit\">\n            {calculatePnL(trades).map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.profit >= 0 ? \"#4caf50\" : \"#f44336\"} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default TradingDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}