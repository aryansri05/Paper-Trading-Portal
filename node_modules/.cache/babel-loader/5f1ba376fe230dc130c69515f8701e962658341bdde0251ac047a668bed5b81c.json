{"ast":null,"code":"import React,{useState}from\"react\";import{supabase}from'../supabaseClient';// Correct, goes up to src/\nimport'./Auth.css';// Correct, now it's a sibling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AuthForm(){const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[isSignUp,setIsSignUp]=useState(false);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[successMessage,setSuccessMessage]=useState(null);// New state for success messages\nconst handleSubmit=async e=>{e.preventDefault();setLoading(true);setError(null);setSuccessMessage(null);// Clear previous success messages\ntry{let response;if(isSignUp){response=await supabase.auth.signUp({email,password});if(response.error){setError(response.error.message);}else if(response.data.user&&!response.data.user.confirmed_at){// User created but not confirmed\nsetSuccessMessage(\"Sign up successful! Please check your email for a confirmation link to verify your account.\");// Clear form fields after successful signup prompt\nsetEmail('');setPassword('');}else if(response.data.user){// User created and already confirmed (e.g., if email confirmation is off)\nsetSuccessMessage(\"Sign up successful! You are now logged in.\");}else{// Fallback for unexpected successful signup\nsetSuccessMessage(\"Sign up initiated! Please check your email to confirm your account.\");setEmail('');setPassword('');}}else{response=await supabase.auth.signInWithPassword({email,password});if(response.error){// Provide more user-friendly login error messages\nif(response.error.message.includes(\"Invalid login credentials\")||response.error.message.includes(\"Email not confirmed\")){setError(\"Incorrect email or password, or email not confirmed.\");}else{setError(response.error.message);}}else if(response.data.user){console.log(\"Login successful:\",response.data.user);// App.js will handle redirect on successful login via onAuthStateChange\n}}}catch(err){setError(err.message||\"An unexpected error occurred during authentication.\");console.error(\"Authentication error during handleSubmit:\",err);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form-container\",children:[\" \",/*#__PURE__*/_jsx(\"h2\",{className:\"auth-form-title\",children:isSignUp?\"Create Your Account\":\"Login to Your Portal\"}),\" \",/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"auth-form\",children:[\" \",/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?\"Please wait...\":isSignUp?\"Sign Up\":\"Login\"})]}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"auth-form-success\",style:{color:'green',marginTop:'15px',textAlign:'center'},children:successMessage}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"auth-form-error\",children:error}),/*#__PURE__*/_jsxs(\"p\",{className:\"auth-form-toggle-text\",children:[isSignUp?\"Already have an account?\":\"Don't have an account?\",\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setError(null);// Clear errors when switching form type\nsetSuccessMessage(null);// Clear success messages\nsetIsSignUp(!isSignUp);setEmail('');// Clear fields when switching\nsetPassword('');},className:\"auth-form-toggle-button\",children:isSignUp?\"Login\":\"Sign Up\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"auth-form-toggle-text\",children:/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{const userEmail=prompt(\"Please enter your email to reset password:\");if(userEmail){setLoading(true);setError(null);setSuccessMessage(null);try{const{error:resetError}=await supabase.auth.resetPasswordForEmail(userEmail,{redirectTo:window.location.origin+'/login?reset=true'// Redirect back to login after reset\n});if(resetError){setError(resetError.message);}else{setSuccessMessage(\"Password reset email sent! Check your inbox.\");}}catch(err){setError(err.message||\"Failed to send reset email.\");}finally{setLoading(false);}}},className:\"auth-form-toggle-button\",children:\"Forgot Password?\"})})]});}export default AuthForm;","map":{"version":3,"names":["React","useState","supabase","jsx","_jsx","jsxs","_jsxs","AuthForm","email","setEmail","password","setPassword","isSignUp","setIsSignUp","loading","setLoading","error","setError","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","auth","signUp","message","data","user","confirmed_at","signInWithPassword","includes","console","log","err","className","children","onSubmit","type","placeholder","value","onChange","target","required","disabled","style","color","marginTop","textAlign","onClick","userEmail","prompt","resetError","resetPasswordForEmail","redirectTo","window","location","origin"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/Auth.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { supabase } from '../supabaseClient'; // Correct, goes up to src/\nimport './Auth.css'; // Correct, now it's a sibling\nfunction AuthForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null); // New state for success messages\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccessMessage(null); // Clear previous success messages\n\n    try {\n      let response;\n      if (isSignUp) {\n        response = await supabase.auth.signUp({ email, password });\n        \n        if (response.error) {\n          setError(response.error.message);\n        } else if (response.data.user && !response.data.user.confirmed_at) { // User created but not confirmed\n          setSuccessMessage(\"Sign up successful! Please check your email for a confirmation link to verify your account.\");\n          // Clear form fields after successful signup prompt\n          setEmail('');\n          setPassword('');\n        } else if (response.data.user) { // User created and already confirmed (e.g., if email confirmation is off)\n          setSuccessMessage(\"Sign up successful! You are now logged in.\");\n        } else { // Fallback for unexpected successful signup\n          setSuccessMessage(\"Sign up initiated! Please check your email to confirm your account.\");\n          setEmail('');\n          setPassword('');\n        }\n      } else {\n        response = await supabase.auth.signInWithPassword({ email, password });\n        \n        if (response.error) {\n          // Provide more user-friendly login error messages\n          if (response.error.message.includes(\"Invalid login credentials\") || response.error.message.includes(\"Email not confirmed\")) {\n            setError(\"Incorrect email or password, or email not confirmed.\");\n          } else {\n            setError(response.error.message);\n          }\n        } else if (response.data.user) {\n          console.log(\"Login successful:\", response.data.user);\n          // App.js will handle redirect on successful login via onAuthStateChange\n        }\n      }\n    } catch (err) {\n      setError(err.message || \"An unexpected error occurred during authentication.\");\n      console.error(\"Authentication error during handleSubmit:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-form-container\"> {/* Apply container class */}\n      <h2 className=\"auth-form-title\">{isSignUp ? \"Create Your Account\" : \"Login to Your Portal\"}</h2> {/* Updated titles */}\n      <form onSubmit={handleSubmit} className=\"auth-form\"> {/* Apply form class */}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Please wait...\" : isSignUp ? \"Sign Up\" : \"Login\"}\n        </button>\n      </form>\n\n      {/* Display success messages */}\n      {successMessage && <p className=\"auth-form-success\" style={{ color: 'green', marginTop: '15px', textAlign: 'center' }}>{successMessage}</p>}\n      {/* Display error messages */}\n      {error && <p className=\"auth-form-error\">{error}</p>}\n\n      <p className=\"auth-form-toggle-text\">\n        {isSignUp ? \"Already have an account?\" : \"Don't have an account?\"}{\" \"}\n        <button\n          onClick={() => {\n            setError(null); // Clear errors when switching form type\n            setSuccessMessage(null); // Clear success messages\n            setIsSignUp(!isSignUp);\n            setEmail(''); // Clear fields when switching\n            setPassword('');\n          }}\n          className=\"auth-form-toggle-button\"\n        >\n          {isSignUp ? \"Login\" : \"Sign Up\"}\n        </button>\n      </p>\n\n      {/* Optionally, add a \"Forgot Password\" link here */}\n      <p className=\"auth-form-toggle-text\">\n        <button\n          onClick={async () => {\n            const userEmail = prompt(\"Please enter your email to reset password:\");\n            if (userEmail) {\n              setLoading(true);\n              setError(null);\n              setSuccessMessage(null);\n              try {\n                const { error: resetError } = await supabase.auth.resetPasswordForEmail(userEmail, {\n                  redirectTo: window.location.origin + '/login?reset=true', // Redirect back to login after reset\n                });\n                if (resetError) {\n                  setError(resetError.message);\n                } else {\n                  setSuccessMessage(\"Password reset email sent! Check your inbox.\");\n                }\n              } catch (err) {\n                setError(err.message || \"Failed to send reset email.\");\n              } finally {\n                setLoading(false);\n              }\n            }\n          }}\n          className=\"auth-form-toggle-button\"\n        >\n          Forgot Password?\n        </button>\n      </p>\n    </div>\n  );\n}\n\nexport default AuthForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}