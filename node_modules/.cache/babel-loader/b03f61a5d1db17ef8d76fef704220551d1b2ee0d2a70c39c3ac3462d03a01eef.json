{"ast":null,"code":"import _objectSpread from\"/Users/aryansrivastava/projects/Paper-Trading-Portal/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/components/StockChart.js\nimport React,{useState,useEffect,useCallback}from'react';import axios from'axios';import Chart from'react-apexcharts';import{ALPHA_VANTAGE_API_KEY,isInvalidApiKey,CURRENCY_SYMBOL}from'../TradingDataContext';// Define options for the chart (LINE CHART)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultChartOptions={chart:{type:'line',height:350,foreColor:'#333333',toolbar:{show:true,tools:{download:true,selection:true,zoom:true,zoomin:true,zoomout:true,pan:true,reset:true},autoSelected:'zoom'}},title:{text:'Price Chart',align:'left',style:{color:'#333333'}},xaxis:{type:'datetime',labels:{formatter:function(val){return new Date(val).toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'});},style:{colors:'#555555'}},axisBorder:{show:false},axisTicks:{show:false}},yaxis:{tooltip:{enabled:true},labels:{formatter:value=>\"\".concat(CURRENCY_SYMBOL).concat(value?value.toFixed(2):''),style:{colors:'#555555'}},axisBorder:{show:false},axisTicks:{show:false}},grid:{show:true,borderColor:'#e0e0e0',strokeDashArray:2,position:'back',xaxis:{lines:{show:false}},yaxis:{lines:{show:true}},padding:{right:20,left:5}},stroke:{curve:'smooth',width:2,colors:['#007bff']},tooltip:{theme:'light',x:{// Modified: Use a locale-aware date format for the tooltip\nformatter:function(val){return new Date(val).toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'});}},y:{formatter:function(val){return\"\".concat(CURRENCY_SYMBOL).concat(val?val.toFixed(2):'');}}}};function StockChart(_ref){var _series$;let{symbol}=_ref;const[series,setSeries]=useState([{data:[]}]);const[loading,setLoading]=useState(true);const[chartError,setChartError]=useState(null);const[chartOptions,setChartOptions]=useState(defaultChartOptions);// Updated default timeframe to '6m' (6 Months)\nconst[timeframe,setTimeframe]=useState('6m');const fetchHistoricalData=useCallback(async(stockSymbol,selectedTimeframe)=>{if(!stockSymbol||isInvalidApiKey(ALPHA_VANTAGE_API_KEY)){setChartError(\"Invalid symbol or Alpha Vantage API Key. Please ensure it's correct and active.\");setLoading(false);setSeries([{data:[]}]);return;}setLoading(true);setChartError(null);setSeries([{data:[]}]);let outputSize='compact';let daysToFilter=0;let chartTitlePeriod=\"\";switch(selectedTimeframe){case'5d':daysToFilter=5;chartTitlePeriod=\"Last 5 Days\";break;case'30d':// CHANGED: Renamed from '1m' to '30d' internally for clarity\ndaysToFilter=30;chartTitlePeriod=\"Last 30 Days\";// CHANGED: Title\nbreak;case'6m':daysToFilter=180;// Approximately 6 months\nchartTitlePeriod=\"Last 6 Months\";// CHANGED: Title\nbreak;case'ytd':outputSize='full';chartTitlePeriod=\"Year-to-Date\";break;case'3y':outputSize='full';daysToFilter=3*365;// Approx 3 years\nchartTitlePeriod=\"Last 3 Years\";// CHANGED: Title\nbreak;case'max':outputSize='full';chartTitlePeriod=\"Max Available\";break;default:daysToFilter=100;chartTitlePeriod=\"Recent Data\";}try{const response=await axios.get(\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\".concat(stockSymbol,\"&outputsize=\").concat(outputSize,\"&apikey=\").concat(ALPHA_VANTAGE_API_KEY));if(response.data[\"Error Message\"]){setChartError(\"Alpha Vantage API Error: \".concat(response.data[\"Error Message\"],\". Check your symbol and API key. You might have hit the free tier rate limit (5 calls/minute, 500 calls/day).\"));setSeries([{data:[]}]);return;}if(response.data[\"Note\"]){setChartError(\"Alpha Vantage API Note: \".concat(response.data[\"Note\"],\". You've likely hit the free tier rate limit (5 calls/minute, 500 calls/day) or requested 'full' data which is often restricted on free tier.\"));setSeries([{data:[]}]);return;}const timeSeries=response.data['Time Series (Daily)'];if(!timeSeries||Object.keys(timeSeries).length===0){setChartError(\"No historical (daily) data found for \".concat(stockSymbol,\" from Alpha Vantage for the \").concat(chartTitlePeriod,\" period. This could be due to an invalid symbol or data not being available.\"));setSeries([{data:[]}]);return;}let formattedData=Object.keys(timeSeries).sort((a,b)=>new Date(a)-new Date(b)).map(date=>({x:new Date(date),y:parseFloat(timeSeries[date]['4. close'])}));const now=new Date();let startDateFilter=null;if(selectedTimeframe==='ytd'){startDateFilter=new Date(now.getFullYear(),0,1);}else if(daysToFilter>0){if(formattedData.length>daysToFilter){formattedData=formattedData.slice(-daysToFilter);}}if(startDateFilter){formattedData=formattedData.filter(item=>item.x>=startDateFilter);}setSeries([{data:formattedData}]);setChartOptions(prevOptions=>_objectSpread(_objectSpread({},prevOptions),{},{title:{text:\"\".concat(stockSymbol,\" Price Chart (\").concat(chartTitlePeriod,\" - Data from Alpha Vantage)\")}}));}catch(err){console.error(\"Error fetching historical data from Alpha Vantage:\",err);setChartError(\"Failed to load chart for \".concat(stockSymbol,\" from Alpha Vantage. Please verify your API key and check your internet connection.\"));setSeries([{data:[]}]);}finally{setLoading(false);}},[]);useEffect(()=>{fetchHistoricalData(symbol,timeframe);},[symbol,timeframe,fetchHistoricalData]);if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading chart data from Alpha Vantage...\"})]});}if(chartError){return/*#__PURE__*/_jsx(\"p\",{className:\"message error-message\",children:chartError});}if(((_series$=series[0])===null||_series$===void 0?void 0:_series$.data.length)===0){return/*#__PURE__*/_jsxs(\"p\",{className:\"message info-message\",children:[\"No chart data available for \",symbol,\" from Alpha Vantage for the requested period. This is likely due to API limitations or the symbol not having data.\"]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"stock-chart-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timeframe-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeframe('5d'),className:timeframe==='5d'?'active':'',children:\"5 Days\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeframe('30d')// CHANGED: Button label and onClick value\n,className:timeframe==='30d'?'active':'',children:\"30 Days\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeframe('6m'),className:timeframe==='6m'?'active':'',children:\"6 Months\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeframe('ytd'),className:timeframe==='ytd'?'active':'',children:\"YTD\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeframe('3y'),className:timeframe==='3y'?'active':'',children:\"3 Years\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeframe('max'),className:timeframe==='max'?'active':'',children:\"Max\"})]}),/*#__PURE__*/_jsx(Chart,{options:chartOptions,series:series,type:\"line\",height:350})]});}export default StockChart;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Chart","ALPHA_VANTAGE_API_KEY","isInvalidApiKey","CURRENCY_SYMBOL","jsx","_jsx","jsxs","_jsxs","defaultChartOptions","chart","type","height","foreColor","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","autoSelected","title","text","align","style","color","xaxis","labels","formatter","val","Date","toLocaleDateString","month","day","year","colors","axisBorder","axisTicks","yaxis","tooltip","enabled","value","concat","toFixed","grid","borderColor","strokeDashArray","position","lines","padding","right","left","stroke","curve","width","theme","x","y","StockChart","_ref","_series$","symbol","series","setSeries","data","loading","setLoading","chartError","setChartError","chartOptions","setChartOptions","timeframe","setTimeframe","fetchHistoricalData","stockSymbol","selectedTimeframe","outputSize","daysToFilter","chartTitlePeriod","response","get","timeSeries","Object","keys","length","formattedData","sort","a","b","map","date","parseFloat","now","startDateFilter","getFullYear","slice","filter","item","prevOptions","_objectSpread","err","console","error","className","children","onClick","options"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/StockChart.js"],"sourcesContent":["// src/components/StockChart.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { ALPHA_VANTAGE_API_KEY, isInvalidApiKey, CURRENCY_SYMBOL } from '../TradingDataContext'; \n\n// Define options for the chart (LINE CHART)\nconst defaultChartOptions = {\n    chart: {\n        type: 'line', \n        height: 350,\n        foreColor: '#333333',  \n        toolbar: {\n            show: true,\n            tools: {\n                download: true,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n            },\n            autoSelected: 'zoom' \n        },\n    },\n    title: {\n        text: 'Price Chart', \n        align: 'left',\n        style: {\n            color: '#333333' \n        }\n    },\n    xaxis: {\n        type: 'datetime',\n        labels: {\n            formatter: function(val) {\n                return new Date(val).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\n            },\n            style: {\n                colors: '#555555', \n            }\n        },\n        axisBorder: {\n            show: false \n        },\n        axisTicks: {\n            show: false \n        }\n    },\n    yaxis: {\n        tooltip: {\n            enabled: true\n        },\n        labels: {\n            formatter: (value) => `${CURRENCY_SYMBOL}${value ? value.toFixed(2) : ''}`,\n            style: {\n                colors: '#555555', \n            }\n        },\n        axisBorder: {\n            show: false \n        },\n        axisTicks: {\n            show: false \n        }\n    },\n    grid: {\n        show: true, \n        borderColor: '#e0e0e0', \n        strokeDashArray: 2, \n        position: 'back',\n        xaxis: {\n            lines: {\n                show: false \n            }\n        },\n        yaxis: {\n            lines: {\n                show: true \n            }\n        },\n        padding: {\n            right: 20, \n            left: 5 \n        }\n    },\n    stroke: { \n        curve: 'smooth', \n        width: 2,        \n        colors: ['#007bff'] \n    },\n    tooltip: {\n        theme: 'light', \n        x: {\n            // Modified: Use a locale-aware date format for the tooltip\n            formatter: function(val) {\n                return new Date(val).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\n            } \n        },\n        y: {\n            formatter: function(val) {\n                return `${CURRENCY_SYMBOL}${val ? val.toFixed(2) : ''}`;\n            }\n        }\n    }\n};\n\nfunction StockChart({ symbol }) {\n    const [series, setSeries] = useState([{ data: [] }]);\n    const [loading, setLoading] = useState(true);\n    const [chartError, setChartError] = useState(null);\n    const [chartOptions, setChartOptions] = useState(defaultChartOptions);\n    // Updated default timeframe to '6m' (6 Months)\n    const [timeframe, setTimeframe] = useState('6m'); \n\n    const fetchHistoricalData = useCallback(async (stockSymbol, selectedTimeframe) => {\n        if (!stockSymbol || isInvalidApiKey(ALPHA_VANTAGE_API_KEY)) {\n            setChartError(\"Invalid symbol or Alpha Vantage API Key. Please ensure it's correct and active.\");\n            setLoading(false);\n            setSeries([{ data: [] }]);\n            return;\n        }\n\n        setLoading(true);\n        setChartError(null);\n        setSeries([{ data: [] }]); \n\n        let outputSize = 'compact'; \n        let daysToFilter = 0;\n        let chartTitlePeriod = \"\";\n\n        switch (selectedTimeframe) {\n            case '5d':\n                daysToFilter = 5;\n                chartTitlePeriod = \"Last 5 Days\";\n                break;\n            case '30d': // CHANGED: Renamed from '1m' to '30d' internally for clarity\n                daysToFilter = 30; \n                chartTitlePeriod = \"Last 30 Days\"; // CHANGED: Title\n                break;\n            case '6m':\n                daysToFilter = 180; // Approximately 6 months\n                chartTitlePeriod = \"Last 6 Months\"; // CHANGED: Title\n                break;\n            case 'ytd': \n                outputSize = 'full'; \n                chartTitlePeriod = \"Year-to-Date\";\n                break;\n            case '3y': \n                outputSize = 'full'; \n                daysToFilter = 3 * 365; // Approx 3 years\n                chartTitlePeriod = \"Last 3 Years\"; // CHANGED: Title\n                break;\n            case 'max': \n                outputSize = 'full';\n                chartTitlePeriod = \"Max Available\";\n                break;\n            default:\n                daysToFilter = 100; \n                chartTitlePeriod = \"Recent Data\";\n        }\n\n        try {\n            const response = await axios.get(\n                `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${stockSymbol}&outputsize=${outputSize}&apikey=${ALPHA_VANTAGE_API_KEY}`\n            );\n\n            if (response.data[\"Error Message\"]) {\n                setChartError(`Alpha Vantage API Error: ${response.data[\"Error Message\"]}. Check your symbol and API key. You might have hit the free tier rate limit (5 calls/minute, 500 calls/day).`);\n                setSeries([{ data: [] }]);\n                return;\n            }\n            if (response.data[\"Note\"]) {\n                 setChartError(`Alpha Vantage API Note: ${response.data[\"Note\"]}. You've likely hit the free tier rate limit (5 calls/minute, 500 calls/day) or requested 'full' data which is often restricted on free tier.`);\n                 setSeries([{ data: [] }]);\n                 return;\n            }\n\n            const timeSeries = response.data['Time Series (Daily)'];\n\n            if (!timeSeries || Object.keys(timeSeries).length === 0) {\n                setChartError(`No historical (daily) data found for ${stockSymbol} from Alpha Vantage for the ${chartTitlePeriod} period. This could be due to an invalid symbol or data not being available.`);\n                setSeries([{ data: [] }]);\n                return;\n            }\n\n            let formattedData = Object.keys(timeSeries)\n                .sort((a, b) => new Date(a) - new Date(b)) \n                .map(date => ({\n                    x: new Date(date), \n                    y: parseFloat(timeSeries[date]['4. close']) \n                }));\n            \n            const now = new Date();\n            let startDateFilter = null;\n\n            if (selectedTimeframe === 'ytd') {\n                startDateFilter = new Date(now.getFullYear(), 0, 1); \n            } else if (daysToFilter > 0) {\n                if (formattedData.length > daysToFilter) {\n                    formattedData = formattedData.slice(-daysToFilter);\n                }\n            }\n            \n            if (startDateFilter) {\n                formattedData = formattedData.filter(item => item.x >= startDateFilter);\n            }\n\n            setSeries([{ data: formattedData }]);\n            setChartOptions(prevOptions => ({\n                ...prevOptions,\n                title: { text: `${stockSymbol} Price Chart (${chartTitlePeriod} - Data from Alpha Vantage)` } \n            }));\n\n        } catch (err) {\n            console.error(\"Error fetching historical data from Alpha Vantage:\", err);\n            setChartError(`Failed to load chart for ${stockSymbol} from Alpha Vantage. Please verify your API key and check your internet connection.`);\n            setSeries([{ data: [] }]);\n        } finally {\n            setLoading(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchHistoricalData(symbol, timeframe);\n    }, [symbol, timeframe, fetchHistoricalData]); \n\n    if (loading) {\n        return (\n            <div className=\"chart-loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading chart data from Alpha Vantage...</p>\n            </div>\n        );\n    }\n\n    if (chartError) {\n        return <p className=\"message error-message\">{chartError}</p>;\n    }\n\n    if (series[0]?.data.length === 0) {\n        return <p className=\"message info-message\">No chart data available for {symbol} from Alpha Vantage for the requested period. This is likely due to API limitations or the symbol not having data.</p>;\n    }\n\n    return (\n        <div className=\"stock-chart-wrapper\">\n            <div className=\"timeframe-buttons\">\n                <button \n                    onClick={() => setTimeframe('5d')} \n                    className={timeframe === '5d' ? 'active' : ''}\n                >\n                    5 Days\n                </button>\n                <button \n                    onClick={() => setTimeframe('30d')} // CHANGED: Button label and onClick value\n                    className={timeframe === '30d' ? 'active' : ''}\n                >\n                    30 Days\n                </button>\n                <button \n                    onClick={() => setTimeframe('6m')} \n                    className={timeframe === '6m' ? 'active' : ''}\n                >\n                    6 Months\n                </button>\n                <button \n                    onClick={() => setTimeframe('ytd')} \n                    className={timeframe === 'ytd' ? 'active' : ''}\n                >\n                    YTD\n                </button>\n                <button \n                    onClick={() => setTimeframe('3y')} \n                    className={timeframe === '3y' ? 'active' : ''}\n                >\n                    3 Years\n                </button>\n                <button \n                    onClick={() => setTimeframe('max')} \n                    className={timeframe === 'max' ? 'active' : ''}\n                >\n                    Max\n                </button>\n            </div>\n            <Chart\n                options={chartOptions}\n                series={series}\n                type=\"line\" \n                height={350}\n            />\n        </div>\n    );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}