{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/paper-trading-app/src/TradingDashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { supabase } from \"./supabaseClient\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from \"recharts\";\nconst API_KEY = \"d0uaoehr01qn5fk47mdgd0uaoehr01qn5fk47me0\";\nfunction TradingDashboard({\n  user\n}) {\n  const [trades, setTrades] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [form, setForm] = useState({\n    symbol: \"\",\n    quantity: \"\",\n    type: \"buy\"\n  });\n  const [capital, setCapital] = useState(() => {\n    const saved = localStorage.getItem(\"capital_\" + user.id);\n    return saved ? Number(saved) : 100000;\n  });\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n  useEffect(() => {\n    const symbols = [...new Set(trades.map(t => t.symbol.toUpperCase()).concat([form.symbol.toUpperCase()]))].filter(s => s);\n    const fetchPrices = async () => {\n      const prices = {};\n      for (const sym of symbols) {\n        try {\n          const res = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${sym}.NS&token=${API_KEY}`);\n          prices[sym] = res.data.c;\n        } catch (err) {\n          console.error(\"Error fetching price for\", sym, err.message);\n        }\n      }\n      setLivePrices(prices);\n    };\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 10000);\n    return () => clearInterval(interval);\n  }, [trades, form.symbol]);\n  useEffect(() => {\n    localStorage.setItem(\"capital_\" + user.id, capital);\n  }, [capital, user.id]);\n  const fetchTrades = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"trades\").select(\"*\").eq(\"user_id\", user.id).order(\"created_at\", {\n      ascending: true\n    });\n    if (!error) setTrades(data);\n  };\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value.toUpperCase()\n  });\n  const handleBuy = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n    if (!sym || !qty || !price) return alert(\"Invalid input or price unavailable\");\n    const cost = qty * price;\n    if (cost > capital) return alert(\"Not enough capital\");\n    const trade = {\n      user_id: user.id,\n      symbol: sym,\n      quantity: qty,\n      price,\n      type: \"buy\"\n    };\n    const {\n      error\n    } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n    setCapital(c => c - cost);\n    setForm({\n      ...form,\n      quantity: \"\"\n    });\n    fetchTrades();\n  };\n  const handleSell = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n    if (!sym || !qty || !price) return alert(\"Invalid input or price unavailable\");\n    const trade = {\n      user_id: user.id,\n      symbol: sym,\n      quantity: qty,\n      price,\n      type: \"sell\"\n    };\n    const {\n      error\n    } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n    setCapital(c => c + qty * price);\n    setForm({\n      ...form,\n      quantity: \"\"\n    });\n    fetchTrades();\n  };\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    window.location.reload();\n  };\n  const calculatePnL = trades => {\n    const summary = {};\n    trades.forEach(({\n      symbol,\n      quantity,\n      price,\n      type\n    }) => {\n      if (!summary[symbol]) {\n        summary[symbol] = {\n          buyQty: 0,\n          buyTotal: 0,\n          sellQty: 0,\n          sellTotal: 0\n        };\n      }\n      const q = Number(quantity),\n        p = Number(price);\n      if (type === \"buy\") {\n        summary[symbol].buyQty += q;\n        summary[symbol].buyTotal += q * p;\n      } else {\n        summary[symbol].sellQty += q;\n        summary[symbol].sellTotal += q * p;\n      }\n    });\n    return Object.entries(summary).map(([symbol, {\n      buyQty,\n      buyTotal,\n      sellQty,\n      sellTotal\n    }]) => {\n      const avgBuy = buyQty ? buyTotal / buyQty : 0;\n      const profit = sellTotal - avgBuy * sellQty;\n      return {\n        symbol,\n        netQty: buyQty - sellQty,\n        avgBuyPrice: avgBuy.toFixed(2),\n        profit: profit.toFixed(2)\n      };\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\",\n      maxWidth: 900,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCC8 Paper Trading Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Capital: \\u20B9\", capital.toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      marginTop: \"1rem\",\n      display: \"flex\",\n      gap: \"0.5rem\",\n      flexWrap: \"wrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"symbol\",\n    placeholder: \"Symbol\",\n    value: form.symbol,\n    onChange: handleChange,\n    required: true,\n    style: {\n      width: \"100px\",\n      textTransform: \"uppercase\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"quantity\",\n    type: \"number\",\n    placeholder: \"Qty\",\n    value: form.quantity,\n    onChange: e => setForm({\n      ...form,\n      quantity: e.target.value\n    }),\n    required: true,\n    style: {\n      width: \"80px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleBuy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Sell\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"Live Prices\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, Object.entries(livePrices).map(([sym, price]) => {\n    var _price$toFixed;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: sym,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, sym, \": \\u20B9\", (_price$toFixed = price === null || price === void 0 ? void 0 : price.toFixed(2)) !== null && _price$toFixed !== void 0 ? _price$toFixed : \"-\");\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"Trade History\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    cellPadding: \"8\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, trades.map(t => /*#__PURE__*/React.createElement(\"tr\", {\n    key: t.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, t.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, t.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", Number(t.price).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, t.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, new Date(t.created_at).toLocaleString()))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, \"Profit & Loss\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    cellPadding: \"8\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Net Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Avg Buy\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"P&L\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, calculatePnL(trades).map(row => /*#__PURE__*/React.createElement(\"tr\", {\n    key: row.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, row.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, row.netQty), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", row.avgBuyPrice), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      color: row.profit >= 0 ? \"green\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", row.profit))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \"P&L Chart\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: calculatePnL(trades),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"profit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, calculatePnL(trades).map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.profit >= 0 ? \"#4caf50\" : \"#f44336\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }))))));\n}\nexport default TradingDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","supabase","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","API_KEY","TradingDashboard","user","trades","setTrades","livePrices","setLivePrices","form","setForm","symbol","quantity","type","capital","setCapital","saved","localStorage","getItem","id","Number","fetchTrades","symbols","Set","map","t","toUpperCase","concat","filter","s","fetchPrices","prices","sym","res","get","data","c","err","console","error","message","interval","setInterval","clearInterval","setItem","from","select","eq","order","ascending","handleChange","e","target","name","value","handleBuy","qty","price","alert","cost","trade","user_id","insert","handleSell","handleLogout","auth","signOut","window","location","reload","calculatePnL","summary","forEach","buyQty","buyTotal","sellQty","sellTotal","q","p","Object","entries","avgBuy","profit","netQty","avgBuyPrice","toFixed","createElement","style","padding","fontFamily","maxWidth","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","display","gap","flexWrap","placeholder","onChange","required","width","textTransform","_price$toFixed","key","border","cellPadding","Date","created_at","toLocaleString","row","color","height","strokeDasharray","dataKey","entry","index","fill"],"sources":["/Users/aryansrivastava/projects/paper-trading-app/src/TradingDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { supabase } from \"./supabaseClient\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell,\n} from \"recharts\";\n\nconst API_KEY = \"d0uaoehr01qn5fk47mdgd0uaoehr01qn5fk47me0\";\n\nfunction TradingDashboard({ user }) {\n  const [trades, setTrades] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [form, setForm] = useState({ symbol: \"\", quantity: \"\", type: \"buy\" });\n  const [capital, setCapital] = useState(() => {\n    const saved = localStorage.getItem(\"capital_\" + user.id);\n    return saved ? Number(saved) : 100000;\n  });\n\n  useEffect(() => {\n    fetchTrades();\n  }, []);\n\n  useEffect(() => {\n    const symbols = [\n      ...new Set(trades.map((t) => t.symbol.toUpperCase()).concat([form.symbol.toUpperCase()])),\n    ].filter((s) => s);\n\n    const fetchPrices = async () => {\n      const prices = {};\n      for (const sym of symbols) {\n        try {\n          const res = await axios.get(\n            `https://finnhub.io/api/v1/quote?symbol=${sym}.NS&token=${API_KEY}`\n          );\n          prices[sym] = res.data.c;\n        } catch (err) {\n          console.error(\"Error fetching price for\", sym, err.message);\n        }\n      }\n      setLivePrices(prices);\n    };\n\n    fetchPrices();\n    const interval = setInterval(fetchPrices, 10000);\n    return () => clearInterval(interval);\n  }, [trades, form.symbol]);\n\n  useEffect(() => {\n    localStorage.setItem(\"capital_\" + user.id, capital);\n  }, [capital, user.id]);\n\n  const fetchTrades = async () => {\n    const { data, error } = await supabase\n      .from(\"trades\")\n      .select(\"*\")\n      .eq(\"user_id\", user.id)\n      .order(\"created_at\", { ascending: true });\n\n    if (!error) setTrades(data);\n  };\n\n  const handleChange = (e) =>\n    setForm({ ...form, [e.target.name]: e.target.value.toUpperCase() });\n\n  const handleBuy = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n    if (!sym || !qty || !price) return alert(\"Invalid input or price unavailable\");\n\n    const cost = qty * price;\n    if (cost > capital) return alert(\"Not enough capital\");\n\n    const trade = { user_id: user.id, symbol: sym, quantity: qty, price, type: \"buy\" };\n    const { error } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n\n    setCapital((c) => c - cost);\n    setForm({ ...form, quantity: \"\" });\n    fetchTrades();\n  };\n\n  const handleSell = async () => {\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n    const price = livePrices[sym];\n    if (!sym || !qty || !price) return alert(\"Invalid input or price unavailable\");\n\n    const trade = { user_id: user.id, symbol: sym, quantity: qty, price, type: \"sell\" };\n    const { error } = await supabase.from(\"trades\").insert([trade]);\n    if (error) return alert(\"Error: \" + error.message);\n\n    setCapital((c) => c + qty * price);\n    setForm({ ...form, quantity: \"\" });\n    fetchTrades();\n  };\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    window.location.reload();\n  };\n\n  const calculatePnL = (trades) => {\n    const summary = {};\n    trades.forEach(({ symbol, quantity, price, type }) => {\n      if (!summary[symbol]) {\n        summary[symbol] = { buyQty: 0, buyTotal: 0, sellQty: 0, sellTotal: 0 };\n      }\n      const q = Number(quantity), p = Number(price);\n      if (type === \"buy\") {\n        summary[symbol].buyQty += q;\n        summary[symbol].buyTotal += q * p;\n      } else {\n        summary[symbol].sellQty += q;\n        summary[symbol].sellTotal += q * p;\n      }\n    });\n\n    return Object.entries(summary).map(([symbol, { buyQty, buyTotal, sellQty, sellTotal }]) => {\n      const avgBuy = buyQty ? buyTotal / buyQty : 0;\n      const profit = sellTotal - avgBuy * sellQty;\n      return {\n        symbol,\n        netQty: buyQty - sellQty,\n        avgBuyPrice: avgBuy.toFixed(2),\n        profit: profit.toFixed(2),\n      };\n    });\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\", maxWidth: 900, margin: \"auto\" }}>\n      <h1>📈 Paper Trading Dashboard</h1>\n      <p>Capital: ₹{capital.toFixed(2)}</p>\n      <button onClick={handleLogout}>Logout</button>\n\n      <form style={{ marginTop: \"1rem\", display: \"flex\", gap: \"0.5rem\", flexWrap: \"wrap\" }}>\n        <input\n          name=\"symbol\"\n          placeholder=\"Symbol\"\n          value={form.symbol}\n          onChange={handleChange}\n          required\n          style={{ width: \"100px\", textTransform: \"uppercase\" }}\n        />\n        <input\n          name=\"quantity\"\n          type=\"number\"\n          placeholder=\"Qty\"\n          value={form.quantity}\n          onChange={(e) => setForm({ ...form, quantity: e.target.value })}\n          required\n          style={{ width: \"80px\" }}\n        />\n        <button type=\"button\" onClick={handleBuy}>Buy</button>\n        <button type=\"button\" onClick={handleSell}>Sell</button>\n      </form>\n\n      <h2>Live Prices</h2>\n      <ul>\n        {Object.entries(livePrices).map(([sym, price]) => (\n          <li key={sym}>{sym}: ₹{price?.toFixed(2) ?? \"-\"}</li>\n        ))}\n      </ul>\n\n      <h2>Trade History</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Qty</th>\n            <th>Price</th>\n            <th>Type</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {trades.map((t) => (\n            <tr key={t.id}>\n              <td>{t.symbol}</td>\n              <td>{t.quantity}</td>\n              <td>₹{Number(t.price).toFixed(2)}</td>\n              <td>{t.type}</td>\n              <td>{new Date(t.created_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>Profit & Loss</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Net Qty</th>\n            <th>Avg Buy</th>\n            <th>P&L</th>\n          </tr>\n        </thead>\n        <tbody>\n          {calculatePnL(trades).map((row) => (\n            <tr key={row.symbol}>\n              <td>{row.symbol}</td>\n              <td>{row.netQty}</td>\n              <td>₹{row.avgBuyPrice}</td>\n              <td style={{ color: row.profit >= 0 ? \"green\" : \"red\" }}>₹{row.profit}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>P&L Chart</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={calculatePnL(trades)}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"symbol\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"profit\">\n            {calculatePnL(trades).map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.profit >= 0 ? \"#4caf50\" : \"#f44336\"} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default TradingDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}