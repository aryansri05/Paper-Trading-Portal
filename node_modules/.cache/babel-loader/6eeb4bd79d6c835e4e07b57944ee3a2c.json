{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/paper-trading-app/src/App.js\";\n// src/AuthForm.js\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient'; // Make sure this path is correct\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginMode, setIsLoginMode] = useState(true); // To toggle between Login and Sign Up\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(''); // For displaying success/error messages\n\n  // Your handleLogin function, adapted for component state\n  const handleLogin = async () => {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) {\n      setMessage(\"Login failed: \" + error.message); // Using setMessage instead of alert\n    } else {\n      // Login was successful.\n      // App.js's onAuthStateChange listener will detect this and update the user state.\n      console.log(\"Login successful in AuthForm, user:\", data.user);\n      // No props.onLogin() call is needed here.\n      // You might want to clear the form or show a success message if not redirecting immediately.\n    }\n  };\n  const handleSignUp = async () => {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) {\n      setMessage(\"Sign up failed: \" + error.message);\n    } else {\n      // Sign up successful.\n      // App.js's onAuthStateChange listener will detect this.\n      // Supabase might require email confirmation depending on your project settings.\n      console.log(\"Sign up successful in AuthForm, user:\", data.user);\n      setMessage(\"Sign up successful! Please check your email for a confirmation link if required by your setup.\");\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setMessage(''); // Clear previous messages\n\n    if (isLoginMode) {\n      await handleLogin();\n    } else {\n      await handleSignUp();\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '2rem auto',\n      padding: '2rem',\n      border: '1px solid #ccc',\n      borderRadius: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, isLoginMode ? 'Login' : 'Sign Up'), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      display: 'block',\n      marginBottom: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    style: {\n      width: '100%',\n      padding: '0.5rem',\n      boxSizing: 'border-box'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    style: {\n      display: 'block',\n      marginBottom: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    style: {\n      width: '100%',\n      padding: '0.5rem',\n      boxSizing: 'border-box'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), message && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: message.includes('failed') ? 'red' : 'green',\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, message), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    style: {\n      width: '100%',\n      padding: '0.75rem',\n      backgroundColor: '#007bff',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, loading ? 'Processing...' : isLoginMode ? 'Login' : 'Sign Up')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setIsLoginMode(!isLoginMode);\n      setMessage(''); // Clear messages when switching mode\n      setEmail(''); // Optionally clear form fields\n      setPassword('');\n    },\n    disabled: loading,\n    style: {\n      width: '100%',\n      padding: '0.75rem',\n      marginTop: '1rem',\n      backgroundColor: 'transparent',\n      color: '#007bff',\n      border: '1px solid #007bff',\n      borderRadius: '4px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, isLoginMode ? 'Need an account? Sign Up' : 'Already have an account? Login'));\n};\nexport default AuthForm;","map":{"version":3,"names":["React","useState","supabase","AuthForm","email","setEmail","password","setPassword","isLoginMode","setIsLoginMode","loading","setLoading","message","setMessage","handleLogin","data","error","auth","signInWithPassword","console","log","user","handleSignUp","signUp","handleSubmit","event","preventDefault","createElement","style","maxWidth","margin","padding","border","borderRadius","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","htmlFor","display","id","type","value","onChange","e","target","required","width","boxSizing","color","includes","disabled","backgroundColor","cursor","onClick","marginTop"],"sources":["/Users/aryansrivastava/projects/paper-trading-app/src/App.js"],"sourcesContent":["// src/AuthForm.js\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient'; // Make sure this path is correct\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoginMode, setIsLoginMode] = useState(true); // To toggle between Login and Sign Up\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(''); // For displaying success/error messages\n\n  // Your handleLogin function, adapted for component state\n  const handleLogin = async () => {\n    const { data, error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) {\n      setMessage(\"Login failed: \" + error.message); // Using setMessage instead of alert\n    } else {\n      // Login was successful.\n      // App.js's onAuthStateChange listener will detect this and update the user state.\n      console.log(\"Login successful in AuthForm, user:\", data.user);\n      // No props.onLogin() call is needed here.\n      // You might want to clear the form or show a success message if not redirecting immediately.\n    }\n  };\n\n  const handleSignUp = async () => {\n    const { data, error } = await supabase.auth.signUp({ email, password });\n    if (error) {\n      setMessage(\"Sign up failed: \" + error.message);\n    } else {\n      // Sign up successful.\n      // App.js's onAuthStateChange listener will detect this.\n      // Supabase might require email confirmation depending on your project settings.\n      console.log(\"Sign up successful in AuthForm, user:\", data.user);\n      setMessage(\"Sign up successful! Please check your email for a confirmation link if required by your setup.\");\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setMessage(''); // Clear previous messages\n\n    if (isLoginMode) {\n      await handleLogin();\n    } else {\n      await handleSignUp();\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ maxWidth: '400px', margin: '2rem auto', padding: '2rem', border: '1px solid #ccc', borderRadius: '8px' }}>\n      <h2>{isLoginMode ? 'Login' : 'Sign Up'}</h2>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: '1rem' }}>\n          <label htmlFor=\"email\" style={{ display: 'block', marginBottom: '0.5rem' }}>Email:</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            style={{ width: '100%', padding: '0.5rem', boxSizing: 'border-box' }}\n          />\n        </div>\n        <div style={{ marginBottom: '1rem' }}>\n          <label htmlFor=\"password\" style={{ display: 'block', marginBottom: '0.5rem' }}>Password:</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            style={{ width: '100%', padding: '0.5rem', boxSizing: 'border-box' }}\n          />\n        </div>\n        {message && <p style={{ color: message.includes('failed') ? 'red' : 'green', marginBottom: '1rem' }}>{message}</p>}\n        <button type=\"submit\" disabled={loading} style={{ width: '100%', padding: '0.75rem', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}>\n          {loading ? 'Processing...' : (isLoginMode ? 'Login' : 'Sign Up')}\n        </button>\n      </form>\n      <button\n        onClick={() => {\n          setIsLoginMode(!isLoginMode);\n          setMessage(''); // Clear messages when switching mode\n          setEmail('');   // Optionally clear form fields\n          setPassword('');\n        }}\n        disabled={loading}\n        style={{ width: '100%', padding: '0.75rem', marginTop: '1rem', backgroundColor: 'transparent', color: '#007bff', border: '1px solid #007bff', borderRadius: '4px', cursor: 'pointer' }}\n      >\n        {isLoginMode ? 'Need an account? Sign Up' : 'Already have an account? Login'}\n      </button>\n    </div>\n  );\n};\n\nexport default AuthForm;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAACC,kBAAkB,CAAC;MAAEd,KAAK;MAAEE;IAAS,CAAC,CAAC;IACnF,IAAIU,KAAK,EAAE;MACTH,UAAU,CAAC,gBAAgB,GAAGG,KAAK,CAACJ,OAAO,CAAC,CAAC,CAAC;IAChD,CAAC,MAAM;MACL;MACA;MACAO,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEL,IAAI,CAACM,IAAI,CAAC;MAC7D;MACA;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAEP,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAACM,MAAM,CAAC;MAAEnB,KAAK;MAAEE;IAAS,CAAC,CAAC;IACvE,IAAIU,KAAK,EAAE;MACTH,UAAU,CAAC,kBAAkB,GAAGG,KAAK,CAACJ,OAAO,CAAC;IAChD,CAAC,MAAM;MACL;MACA;MACA;MACAO,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEL,IAAI,CAACM,IAAI,CAAC;MAC/DR,UAAU,CAAC,gGAAgG,CAAC;IAC9G;EACF,CAAC;EAED,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBf,UAAU,CAAC,IAAI,CAAC;IAChBE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEhB,IAAIL,WAAW,EAAE;MACf,MAAMM,WAAW,CAAC,CAAC;IACrB,CAAC,MAAM;MACL,MAAMQ,YAAY,CAAC,CAAC;IACtB;IACAX,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEX,KAAA,CAAA2B,aAAA;IAAKC,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,WAAW;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrHvC,KAAA,CAAA2B,aAAA;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK/B,WAAW,GAAG,OAAO,GAAG,SAAc,CAAC,eAC5CR,KAAA,CAAA2B,aAAA;IAAMa,QAAQ,EAAEhB,YAAa;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BvC,KAAA,CAAA2B,aAAA;IAAKC,KAAK,EAAE;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnCvC,KAAA,CAAA2B,aAAA;IAAOe,OAAO,EAAC,OAAO;IAACd,KAAK,EAAE;MAAEe,OAAO,EAAE,OAAO;MAAEF,YAAY,EAAE;IAAS,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAa,CAAC,eAC1FvC,KAAA,CAAA2B,aAAA;IACEiB,EAAE,EAAC,OAAO;IACVC,IAAI,EAAC,OAAO;IACZC,KAAK,EAAE1C,KAAM;IACb2C,QAAQ,EAAGC,CAAC,IAAK3C,QAAQ,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC1CI,QAAQ;IACRtB,KAAK,EAAE;MAAEuB,KAAK,EAAE,MAAM;MAAEpB,OAAO,EAAE,QAAQ;MAAEqB,SAAS,EAAE;IAAa,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtE,CACE,CAAC,eACNvC,KAAA,CAAA2B,aAAA;IAAKC,KAAK,EAAE;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnCvC,KAAA,CAAA2B,aAAA;IAAOe,OAAO,EAAC,UAAU;IAACd,KAAK,EAAE;MAAEe,OAAO,EAAE,OAAO;MAAEF,YAAY,EAAE;IAAS,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAAgB,CAAC,eAChGvC,KAAA,CAAA2B,aAAA;IACEiB,EAAE,EAAC,UAAU;IACbC,IAAI,EAAC,UAAU;IACfC,KAAK,EAAExC,QAAS;IAChByC,QAAQ,EAAGC,CAAC,IAAKzC,WAAW,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC7CI,QAAQ;IACRtB,KAAK,EAAE;MAAEuB,KAAK,EAAE,MAAM;MAAEpB,OAAO,EAAE,QAAQ;MAAEqB,SAAS,EAAE;IAAa,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtE,CACE,CAAC,EACL3B,OAAO,iBAAIZ,KAAA,CAAA2B,aAAA;IAAGC,KAAK,EAAE;MAAEyB,KAAK,EAAEzC,OAAO,CAAC0C,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,OAAO;MAAEb,YAAY,EAAE;IAAO,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE3B,OAAW,CAAC,eAClHZ,KAAA,CAAA2B,aAAA;IAAQkB,IAAI,EAAC,QAAQ;IAACU,QAAQ,EAAE7C,OAAQ;IAACkB,KAAK,EAAE;MAAEuB,KAAK,EAAE,MAAM;MAAEpB,OAAO,EAAE,SAAS;MAAEyB,eAAe,EAAE,SAAS;MAAEH,KAAK,EAAE,OAAO;MAAErB,MAAM,EAAE,MAAM;MAAEC,YAAY,EAAE,KAAK;MAAEwB,MAAM,EAAE;IAAU,CAAE;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvL7B,OAAO,GAAG,eAAe,GAAIF,WAAW,GAAG,OAAO,GAAG,SAChD,CACJ,CAAC,eACPR,KAAA,CAAA2B,aAAA;IACE+B,OAAO,EAAEA,CAAA,KAAM;MACbjD,cAAc,CAAC,CAACD,WAAW,CAAC;MAC5BK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAChBR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAG;MAChBE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAE;IACFgD,QAAQ,EAAE7C,OAAQ;IAClBkB,KAAK,EAAE;MAAEuB,KAAK,EAAE,MAAM;MAAEpB,OAAO,EAAE,SAAS;MAAE4B,SAAS,EAAE,MAAM;MAAEH,eAAe,EAAE,aAAa;MAAEH,KAAK,EAAE,SAAS;MAAErB,MAAM,EAAE,mBAAmB;MAAEC,YAAY,EAAE,KAAK;MAAEwB,MAAM,EAAE;IAAU,CAAE;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEtL/B,WAAW,GAAG,0BAA0B,GAAG,gCACtC,CACL,CAAC;AAEV,CAAC;AAED,eAAeL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}