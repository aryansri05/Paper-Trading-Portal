{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useCallback, useMemo, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useTradingData, isInvalidApiKey, FINNHUB_API_KEY, CURRENCY_SYMBOL } from '../TradingDataContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\n\n// --- Helper for Caching API Responses ---\n// You might consider moving these helper functions to a separate utils/cache.js file\n// if you plan to use them across different components.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCachedData = (key, durationMs) => {\n  try {\n    const cachedItem = localStorage.getItem(key);\n    if (cachedItem) {\n      const {\n        data,\n        timestamp\n      } = JSON.parse(cachedItem);\n      // Check if the cached data is still fresh\n      if (Date.now() - timestamp < durationMs) {\n        // console.log(`[Cache] Using cached data for: ${key}`); // For debugging\n        return data;\n      }\n    }\n  } catch (e) {\n    console.error(`[Cache Error] Failed to retrieve or parse cached data for ${key}:`, e);\n    // Clear corrupted cache entry\n    localStorage.removeItem(key);\n  }\n  return null;\n};\nconst setCachedData = (key, data) => {\n  try {\n    localStorage.setItem(key, JSON.stringify({\n      data,\n      timestamp: Date.now()\n    }));\n    // console.log(`[Cache] Stored data for: ${key}`); // For debugging\n  } catch (e) {\n    console.error(`[Cache Error] Failed to set cached data for ${key}:`, e);\n  }\n};\n\n// --- Cache Durations (Adjust these values based on API limits and data freshness needs) ---\nconst QUOTE_CACHE_DURATION = 30 * 1000; // 30 seconds for real-time quotes (Finnhub free tier is 60 calls/min)\nconst PROFILE_CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours for company profiles (they rarely change)\n\nfunction Dashboard() {\n  _s();\n  var _selectedSymbolDetail, _selectedSymbolDetail2;\n  const {\n    user,\n    capital,\n    trades,\n    livePrices,\n    availableSymbols,\n    fetchLivePrices,\n    // This function in TradingDataContext.js also needs optimization (caching, throttling/debouncing for multiple symbols)\n    calculatePnL,\n    calculateTotalPortfolioValue,\n    loadingData,\n    watchListSymbols,\n    addToWatchlist,\n    removeFromWatchlist,\n    holdings: contextHoldings,\n    addTrade: contextAddTrade,\n    removeTrade: contextRemoveTrade\n  } = useTradingData();\n  const navigate = useNavigate();\n\n  // --- State for Stock Search ---\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSymbolDetails, setSelectedSymbolDetails] = useState(null);\n  const [stockSearchError, setStockSearchError] = useState(null);\n  const [isSearchingStock, setIsSearchingStock] = useState(false); // New: Loading state for search\n\n  const [quantity, setQuantity] = useState(0);\n  const [orderType, setOrderType] = useState('market'); // market, limit, stop\n  const [limitPrice, setLimitPrice] = useState(0);\n  const [stopPrice, setStopPrice] = useState(0);\n  const [tradeType, setTradeType] = useState('buy'); // buy, sell\n  const [tradeMessage, setTradeMessage] = useState({\n    text: '',\n    type: ''\n  });\n  const [showBuySellModal, setShowBuySellModal] = useState(false);\n  const [modalSymbol, setModalSymbol] = useState('');\n  const [modalPrice, setModalPrice] = useState(0);\n  const [currentHoldingsTab, setCurrentHoldingsTab] = useState('stocks');\n  const {\n    holdings\n  } = useMemo(() => {\n    if (!loadingData) {\n      return calculatePnL();\n    }\n    return {\n      holdings: [],\n      totalRealizedPnl: '0.00',\n      totalUnrealizedPnl: '0.00'\n    };\n  }, [loadingData, calculatePnL]);\n\n  // --- Price Change Calculation ---\n  const calculatePriceChange = useCallback(symbol => {\n    const holding = holdings.find(h => h.symbol === symbol);\n    if (holding && holding.netQty > 0 && livePrices[symbol] && holding.avgBuyPrice > 0) {\n      const currentPrice = livePrices[symbol];\n      const change = currentPrice - holding.avgBuyPrice;\n      const percentageChange = change / holding.avgBuyPrice * 100;\n      return {\n        change: change.toFixed(2),\n        percentageChange: percentageChange.toFixed(2)\n      };\n    }\n    return {\n      change: '0.00',\n      percentageChange: '0.00'\n    };\n  }, [holdings, livePrices]);\n\n  // Function to calculate today's change for the entire portfolio\n  const calculateTodaysChange = useCallback(() => {\n    const initialReferenceValue = 10000;\n    const currentTotalValue = parseFloat(calculateTotalPortfolioValue());\n    const totalChangeAbsolute = currentTotalValue - initialReferenceValue;\n    const totalChangePercentage = totalChangeAbsolute / initialReferenceValue * 100;\n    return {\n      change: totalChangeAbsolute.toFixed(2),\n      percentageChange: totalChangePercentage.toFixed(2)\n    };\n  }, [calculateTotalPortfolioValue]);\n  const {\n    change: todaysChangeAbsolute,\n    percentageChange: todaysChangePercentage\n  } = calculateTodaysChange();\n  const isPositiveChange = todaysChangeAbsolute >= 0;\n\n  // --- Search functionality (Finnhub for symbols) ---\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value.toUpperCase());\n    setStockSearchError(null);\n    setSelectedSymbolDetails(null); // Clear details when typing\n  };\n\n  // New helper function to fetch stock details (extracted from handleSearchSubmit)\n  const triggerSymbolDetailsFetch = useCallback(async symbolToFetch => {\n    if (!symbolToFetch.trim()) {\n      setStockSearchError(\"Please enter a stock symbol.\");\n      setSelectedSymbolDetails(null); // Clear previous details\n      return;\n    }\n    if (isInvalidApiKey(FINNHUB_API_KEY)) {\n      setStockSearchError(\"Invalid Finnhub API Key. Cannot fetch stock details.\");\n      setSelectedSymbolDetails(null); // Clear previous details\n      return;\n    }\n    const symbol = symbolToFetch.toUpperCase();\n    setIsSearchingStock(true); // Set loading state for search\n\n    // Validate against availableSymbols only if it's already loaded\n    // This is a client-side check and doesn't replace backend validation or API errors.\n    if (availableSymbols.length > 0 && !availableSymbols.includes(symbol)) {\n      setStockSearchError(`'${symbol}' is not a valid US stock symbol or not available via Finnhub free tier.`);\n      setSelectedSymbolDetails(null);\n      setIsSearchingStock(false);\n      return;\n    }\n    try {\n      // --- Attempt to get from cache first for both quote and profile ---\n      let quote = getCachedData(`finnhub_quote_${symbol}`, QUOTE_CACHE_DURATION);\n      let profile = getCachedData(`finnhub_profile_${symbol}`, PROFILE_CACHE_DURATION);\n      let fetchedNewData = false; // Flag to indicate if new data was fetched from API\n\n      // Fetch quote if not cached or cache is stale\n      if (!quote) {\n        const quoteRes = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n        quote = quoteRes.data;\n        setCachedData(`finnhub_quote_${symbol}`, quote);\n        fetchedNewData = true;\n      }\n\n      // Fetch profile if not cached or cache is stale\n      if (!profile) {\n        const profileRes = await axios.get(`https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n        profile = profileRes.data;\n        setCachedData(`finnhub_profile_${symbol}`, profile);\n        fetchedNewData = true;\n      }\n      if (quote && quote.c !== 0 && profile && profile.name) {\n        setSelectedSymbolDetails({\n          symbol: symbol,\n          currentPrice: quote.c,\n          change: quote.d,\n          percentChange: quote.dp,\n          high: quote.h,\n          low: quote.l,\n          open: quote.o,\n          previousClose: quote.pc,\n          companyName: profile.name,\n          industry: profile.finnhubIndustry,\n          marketCap: profile.marketCapitalization,\n          ipo: profile.ipo,\n          weburl: profile.weburl\n        });\n\n        // Only trigger fetchLivePrices for this specific symbol if new data was fetched or it's missing from livePrices\n        // This prevents unnecessary calls if it's already being updated by the TradingDataContext's interval\n        if (fetchedNewData || !livePrices[symbol]) {\n          fetchLivePrices([symbol]); // Ensure fetchLivePrices can take an array of symbols for specific updates\n        }\n      } else {\n        setStockSearchError(`No real-time data found for ${symbol}. It might be delisted or not available on free tier.`);\n        setSelectedSymbolDetails(null);\n      }\n    } catch (error) {\n      console.error(\"Error fetching stock details:\", error);\n      if (axios.isAxiosError(error) && error.response) {\n        if (error.response.status === 429) {\n          setStockSearchError(\"You've hit Finnhub API rate limits. Please wait a moment and try again.\");\n        } else {\n          setStockSearchError(`Failed to fetch data for ${symbol}: ${error.response.status} - ${error.response.statusText}`);\n        }\n      } else if (error.message === 'Network Error') {\n        // Axios specific network error\n        setStockSearchError(`Network error: Could not connect to Finnhub. Check your internet connection.`);\n      } else {\n        setStockSearchError(`Failed to fetch data for ${symbol}. Please check the symbol and your API key.`);\n      }\n      setSelectedSymbolDetails(null);\n    } finally {\n      setIsSearchingStock(false); // Reset loading state regardless of success or failure\n    }\n  }, [availableSymbols, fetchLivePrices, FINNHUB_API_KEY, isInvalidApiKey, livePrices]);\n\n  // handleSearchSubmit will now trigger the details fetch for the current searchTerm\n  const handleSearchSubmit = useCallback(e => {\n    e.preventDefault();\n    triggerSymbolDetailsFetch(searchTerm);\n  }, [searchTerm, triggerSymbolDetailsFetch]);\n\n  // --- Trade Execution ---\n  const handleTrade = async () => {\n    if (!user) {\n      setTradeMessage({\n        text: 'Please log in to place a trade.',\n        type: 'error'\n      });\n      return;\n    }\n    if (!modalSymbol || quantity <= 0 || !modalPrice) {\n      setTradeMessage({\n        text: 'Please enter a valid symbol, quantity, and price.',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      await contextAddTrade({\n        symbol: modalSymbol,\n        quantity: quantity,\n        price: modalPrice,\n        type: tradeType\n      });\n      setTradeMessage({\n        text: `${modalSymbol} ${tradeType === 'buy' ? 'bought' : 'sold'} successfully!`,\n        type: 'success'\n      });\n      setQuantity(0);\n      setShowBuySellModal(false);\n    } catch (error) {\n      console.error(\"Error placing trade:\", error);\n      setTradeMessage({\n        text: `Failed to place trade: ${error.message}`,\n        type: 'error'\n      });\n    }\n  };\n  const openBuySellModal = (symbol, price, type) => {\n    setModalSymbol(symbol);\n    setModalPrice(price);\n    setTradeType(type);\n    setQuantity(0);\n    setShowBuySellModal(true);\n    setTradeMessage({\n      text: '',\n      type: ''\n    });\n  };\n  const handleRemoveTrade = async tradeId => {\n    if (window.confirm(\"Are you sure you want to remove this trade? This will adjust your capital and holdings.\")) {\n      try {\n        await contextRemoveTrade({\n          id: tradeId\n        });\n        setTradeMessage({\n          text: 'Trade successfully removed and capital/holdings adjusted.',\n          type: 'success'\n        });\n      } catch (error) {\n        setTradeMessage({\n          text: `Failed to remove trade: ${error.message}`,\n          type: 'error'\n        });\n      }\n    }\n  };\n  const currentPortfolioValue = parseFloat(calculateTotalPortfolioValue());\n  const initialTotalCapital = 10000;\n  const netProfitLoss = currentPortfolioValue - initialTotalCapital;\n  const netProfitLossPercentage = netProfitLoss / initialTotalCapital * 100;\n  const isNetProfit = netProfitLoss >= 0;\n  if (loadingData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading trading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trading-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: user ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome-message\",\n        children: [\"Welcome, \", user.email, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome-message\",\n        children: \"Welcome to Paper Trading!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-panel account-value-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"Account Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Account Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [CURRENCY_SYMBOL, currentPortfolioValue.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Today's Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `value ${isPositiveChange ? 'text-green' : 'text-red'}`,\n              children: [todaysChangeAbsolute, \" (\", isPositiveChange ? '+' : '', todaysChangePercentage, \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Buying Power\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [CURRENCY_SYMBOL, capital.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"value\",\n              children: [CURRENCY_SYMBOL, capital.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Net P&L (All Time)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `value ${isNetProfit ? 'text-green' : 'text-red'}`,\n              children: [CURRENCY_SYMBOL, netProfitLoss.toFixed(2), \" (\", isNetProfit ? '+' : '', netProfitLossPercentage.toFixed(2), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-panel performance-chart-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"Performance History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your performance chart will update daily starting tomorrow.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group-top-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn active\",\n              children: \"1W\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn\",\n              children: \"1M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn\",\n              children: \"3M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn\",\n              children: \"6M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn\",\n              children: \"1Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn\",\n              children: \"5Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"performance-btn\",\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-performance-history\",\n            children: \"Performance History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-panel trade-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearchSubmit,\n          className: \"stock-search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter stock symbol (e.g., AAPL)\",\n            value: searchTerm,\n            onChange: handleSearchChange,\n            list: \"available-symbols-datalist\",\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            disabled: isSearchingStock,\n            children: isSearchingStock ? 'Searching...' : 'Search'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"available-symbols-datalist\",\n          children: availableSymbols.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: symbol\n          }, symbol, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), stockSearchError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: stockSearchError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 42\n        }, this), selectedSymbolDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-stock-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [selectedSymbolDetails.companyName, \" (\", selectedSymbolDetails.symbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Price: \", CURRENCY_SYMBOL, selectedSymbolDetails.currentPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `price-change-detail ${selectedSymbolDetails.change >= 0 ? 'text-green' : 'text-red'}`,\n            children: [selectedSymbolDetails.change >= 0 ? '+' : '', (_selectedSymbolDetail = selectedSymbolDetails.change) === null || _selectedSymbolDetail === void 0 ? void 0 : _selectedSymbolDetail.toFixed(2), \" (\", selectedSymbolDetails.percentChange >= 0 ? '+' : '', (_selectedSymbolDetail2 = selectedSymbolDetails.percentChange) === null || _selectedSymbolDetail2 === void 0 ? void 0 : _selectedSymbolDetail2.toFixed(2), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trade-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"buy-button\",\n              onClick: () => openBuySellModal(selectedSymbolDetails.symbol, selectedSymbolDetails.currentPrice, 'buy'),\n              children: \"Buy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sell-button\",\n              onClick: () => openBuySellModal(selectedSymbolDetails.symbol, selectedSymbolDetails.currentPrice, 'sell'),\n              children: \"Sell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"view-details-button\",\n              onClick: () => navigate(`/stock/${selectedSymbolDetails.symbol}`),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 33\n            }, this), watchListSymbols.includes(selectedSymbolDetails.symbol) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-watchlist-button\",\n              onClick: () => removeFromWatchlist(selectedSymbolDetails.symbol),\n              children: \"Remove from Watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-watchlist-button\",\n              onClick: () => addToWatchlist(selectedSymbolDetails.symbol),\n              children: \"Add to Watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this), showBuySellModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [tradeType.toUpperCase(), \" \", modalSymbol, \" at \", CURRENCY_SYMBOL, modalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this), tradeMessage.text && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `message ${tradeMessage.type}`,\n              children: tradeMessage.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 55\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"quantity\",\n                children: \"Quantity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"quantity\",\n                type: \"number\",\n                min: \"1\",\n                value: quantity,\n                onChange: e => setQuantity(parseInt(e.target.value) || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"orderType\",\n                children: \"Order Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"orderType\",\n                value: orderType,\n                onChange: e => setOrderType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"market\",\n                  children: \"Market\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"limit\",\n                  children: \"Limit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"stop\",\n                  children: \"Stop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 33\n            }, this), orderType === 'limit' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"limitPrice\",\n                children: \"Limit Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"limitPrice\",\n                type: \"number\",\n                value: limitPrice,\n                onChange: e => setLimitPrice(parseFloat(e.target.value) || 0),\n                step: \"0.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 37\n            }, this), orderType === 'stop' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"stopPrice\",\n                children: \"Stop Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"stopPrice\",\n                type: \"number\",\n                value: stopPrice,\n                onChange: e => setStopPrice(parseFloat(e.target.value) || 0),\n                step: \"0.01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"confirm-trade-button\",\n                onClick: handleTrade,\n                children: [\"Confirm \", tradeType.toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel-button\",\n                onClick: () => setShowBuySellModal(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-panel holdings-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"Holdings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${currentHoldingsTab === 'stocks' ? 'active' : ''}`,\n            onClick: () => setCurrentHoldingsTab('stocks'),\n            children: \"Stocks & ETFs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${currentHoldingsTab === 'options' ? 'active' : ''}`,\n            onClick: () => setCurrentHoldingsTab('options'),\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), currentHoldingsTab === 'stocks' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"holdings-table-container\",\n          children: holdings.filter(h => h.netQty > 0).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Symbol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Current Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Today's Change\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Purchase Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Total Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Trade Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: holdings.filter(h => h.netQty > 0).map(holding => {\n                const currentPrice = livePrices[holding.symbol] || 0;\n                const totalValue = currentPrice * holding.netQty;\n                const {\n                  change,\n                  percentageChange\n                } = calculatePriceChange(holding.symbol);\n                const isHoldingPositiveChange = parseFloat(change) >= 0;\n\n                // To display company name here, you'd ideally either:\n                // 1. Store companyName in your Supabase holdings table when a trade occurs.\n                // 2. Fetch all company profiles for current holdings on Dashboard load and cache them.\n                // Fetching it per row here would cause too many API calls.\n                // For now, it will only show if it matches the currently selectedSymbolDetails\n                // which is primarily for the search result.\n                const holdingCompanyName = selectedSymbolDetails && selectedSymbolDetails.symbol === holding.symbol ? selectedSymbolDetails.companyName : 'Loading...'; // Or 'N/A', or a lookup from a wider cache of profiles\n\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: holding.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: holdingCompanyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [CURRENCY_SYMBOL, currentPrice.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: isHoldingPositiveChange ? 'text-green' : 'text-red',\n                    children: [change, \" (\", isHoldingPositiveChange ? '+' : '', percentageChange, \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [CURRENCY_SYMBOL, holding.avgBuyPrice.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: holding.netQty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [CURRENCY_SYMBOL, totalValue.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"sell-button-small\",\n                      onClick: () => openBuySellModal(holding.symbol, currentPrice, 'sell'),\n                      children: \"Sell\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"buy-button-small\",\n                      onClick: () => openBuySellModal(holding.symbol, currentPrice, 'buy'),\n                      children: \"Buy More\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 53\n                  }, this)]\n                }, holding.symbol, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message info-message\",\n            children: \"You have no stock holdings yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }, this), currentHoldingsTab === 'options' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-holding-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message info-message\",\n            children: \"Options trading not implemented yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-panel trade-history-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"panel-title\",\n          children: \"Trade History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trade-history-table-container\",\n          children: trades.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Symbol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: trades.map(trade => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: trade.symbol\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: trade.type === 'buy' ? 'text-green' : 'text-red',\n                  children: trade.type.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: trade.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [CURRENCY_SYMBOL, trade.price.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(trade.created_at).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"remove-trade-button\",\n                    onClick: () => handleRemoveTrade(trade.id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 45\n                }, this)]\n              }, trade.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message info-message\",\n            children: \"No trade history yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"OX4ZT7BN0f5TgOsk7KNhBaxa0lk=\", false, function () {\n  return [useTradingData, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useEffect","useRef","axios","useTradingData","isInvalidApiKey","FINNHUB_API_KEY","CURRENCY_SYMBOL","useNavigate","jsxDEV","_jsxDEV","getCachedData","key","durationMs","cachedItem","localStorage","getItem","data","timestamp","JSON","parse","Date","now","e","console","error","removeItem","setCachedData","setItem","stringify","QUOTE_CACHE_DURATION","PROFILE_CACHE_DURATION","Dashboard","_s","_selectedSymbolDetail","_selectedSymbolDetail2","user","capital","trades","livePrices","availableSymbols","fetchLivePrices","calculatePnL","calculateTotalPortfolioValue","loadingData","watchListSymbols","addToWatchlist","removeFromWatchlist","holdings","contextHoldings","addTrade","contextAddTrade","removeTrade","contextRemoveTrade","navigate","searchTerm","setSearchTerm","selectedSymbolDetails","setSelectedSymbolDetails","stockSearchError","setStockSearchError","isSearchingStock","setIsSearchingStock","quantity","setQuantity","orderType","setOrderType","limitPrice","setLimitPrice","stopPrice","setStopPrice","tradeType","setTradeType","tradeMessage","setTradeMessage","text","type","showBuySellModal","setShowBuySellModal","modalSymbol","setModalSymbol","modalPrice","setModalPrice","currentHoldingsTab","setCurrentHoldingsTab","totalRealizedPnl","totalUnrealizedPnl","calculatePriceChange","symbol","holding","find","h","netQty","avgBuyPrice","currentPrice","change","percentageChange","toFixed","calculateTodaysChange","initialReferenceValue","currentTotalValue","parseFloat","totalChangeAbsolute","totalChangePercentage","todaysChangeAbsolute","todaysChangePercentage","isPositiveChange","handleSearchChange","target","value","toUpperCase","triggerSymbolDetailsFetch","symbolToFetch","trim","length","includes","quote","profile","fetchedNewData","quoteRes","get","profileRes","c","name","d","percentChange","dp","high","low","l","open","o","previousClose","pc","companyName","industry","finnhubIndustry","marketCap","marketCapitalization","ipo","weburl","isAxiosError","response","status","statusText","message","handleSearchSubmit","preventDefault","handleTrade","price","openBuySellModal","handleRemoveTrade","tradeId","window","confirm","id","currentPortfolioValue","initialTotalCapital","netProfitLoss","netProfitLossPercentage","isNetProfit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","email","onSubmit","placeholder","onChange","list","disabled","map","onClick","htmlFor","min","parseInt","step","filter","totalValue","isHoldingPositiveChange","holdingCompanyName","trade","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport React, { useState, useCallback, useMemo, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useTradingData, isInvalidApiKey, FINNHUB_API_KEY, CURRENCY_SYMBOL } from '../TradingDataContext';\nimport { useNavigate } from 'react-router-dom';\n\nimport './Dashboard.css';\n\n// --- Helper for Caching API Responses ---\n// You might consider moving these helper functions to a separate utils/cache.js file\n// if you plan to use them across different components.\nconst getCachedData = (key, durationMs) => {\n    try {\n        const cachedItem = localStorage.getItem(key);\n        if (cachedItem) {\n            const { data, timestamp } = JSON.parse(cachedItem);\n            // Check if the cached data is still fresh\n            if (Date.now() - timestamp < durationMs) {\n                // console.log(`[Cache] Using cached data for: ${key}`); // For debugging\n                return data;\n            }\n        }\n    } catch (e) {\n        console.error(`[Cache Error] Failed to retrieve or parse cached data for ${key}:`, e);\n        // Clear corrupted cache entry\n        localStorage.removeItem(key);\n    }\n    return null;\n};\n\nconst setCachedData = (key, data) => {\n    try {\n        localStorage.setItem(key, JSON.stringify({ data, timestamp: Date.now() }));\n        // console.log(`[Cache] Stored data for: ${key}`); // For debugging\n    } catch (e) {\n        console.error(`[Cache Error] Failed to set cached data for ${key}:`, e);\n    }\n};\n\n// --- Cache Durations (Adjust these values based on API limits and data freshness needs) ---\nconst QUOTE_CACHE_DURATION = 30 * 1000; // 30 seconds for real-time quotes (Finnhub free tier is 60 calls/min)\nconst PROFILE_CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours for company profiles (they rarely change)\n\n\nfunction Dashboard() {\n    const {\n        user,\n        capital,\n        trades,\n        livePrices,\n        availableSymbols,\n        fetchLivePrices, // This function in TradingDataContext.js also needs optimization (caching, throttling/debouncing for multiple symbols)\n        calculatePnL,\n        calculateTotalPortfolioValue,\n        loadingData,\n        watchListSymbols,\n        addToWatchlist,\n        removeFromWatchlist,\n        holdings: contextHoldings,\n        addTrade: contextAddTrade,\n        removeTrade: contextRemoveTrade,\n    } = useTradingData();\n\n    const navigate = useNavigate();\n\n    // --- State for Stock Search ---\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedSymbolDetails, setSelectedSymbolDetails] = useState(null);\n    const [stockSearchError, setStockSearchError] = useState(null);\n    const [isSearchingStock, setIsSearchingStock] = useState(false); // New: Loading state for search\n\n\n    const [quantity, setQuantity] = useState(0);\n    const [orderType, setOrderType] = useState('market'); // market, limit, stop\n    const [limitPrice, setLimitPrice] = useState(0);\n    const [stopPrice, setStopPrice] = useState(0);\n    const [tradeType, setTradeType] = useState('buy'); // buy, sell\n    const [tradeMessage, setTradeMessage] = useState({ text: '', type: '' });\n    const [showBuySellModal, setShowBuySellModal] = useState(false);\n    const [modalSymbol, setModalSymbol] = useState('');\n    const [modalPrice, setModalPrice] = useState(0);\n    const [currentHoldingsTab, setCurrentHoldingsTab] = useState('stocks');\n\n    const { holdings } = useMemo(() => {\n        if (!loadingData) {\n            return calculatePnL();\n        }\n        return { holdings: [], totalRealizedPnl: '0.00', totalUnrealizedPnl: '0.00' };\n    }, [loadingData, calculatePnL]);\n\n    // --- Price Change Calculation ---\n    const calculatePriceChange = useCallback((symbol) => {\n        const holding = holdings.find(h => h.symbol === symbol);\n        if (holding && holding.netQty > 0 && livePrices[symbol] && holding.avgBuyPrice > 0) {\n            const currentPrice = livePrices[symbol];\n            const change = currentPrice - holding.avgBuyPrice;\n            const percentageChange = (change / holding.avgBuyPrice) * 100;\n            return { change: change.toFixed(2), percentageChange: percentageChange.toFixed(2) };\n        }\n        return { change: '0.00', percentageChange: '0.00' };\n    }, [holdings, livePrices]);\n\n    // Function to calculate today's change for the entire portfolio\n    const calculateTodaysChange = useCallback(() => {\n        const initialReferenceValue = 10000;\n        const currentTotalValue = parseFloat(calculateTotalPortfolioValue());\n        const totalChangeAbsolute = currentTotalValue - initialReferenceValue;\n        const totalChangePercentage = (totalChangeAbsolute / initialReferenceValue) * 100;\n\n        return {\n            change: totalChangeAbsolute.toFixed(2),\n            percentageChange: totalChangePercentage.toFixed(2)\n        };\n    }, [calculateTotalPortfolioValue]);\n\n    const { change: todaysChangeAbsolute, percentageChange: todaysChangePercentage } = calculateTodaysChange();\n    const isPositiveChange = todaysChangeAbsolute >= 0;\n\n    // --- Search functionality (Finnhub for symbols) ---\n    const handleSearchChange = (e) => {\n        setSearchTerm(e.target.value.toUpperCase());\n        setStockSearchError(null);\n        setSelectedSymbolDetails(null); // Clear details when typing\n    };\n\n    // New helper function to fetch stock details (extracted from handleSearchSubmit)\n    const triggerSymbolDetailsFetch = useCallback(async (symbolToFetch) => {\n        if (!symbolToFetch.trim()) {\n            setStockSearchError(\"Please enter a stock symbol.\");\n            setSelectedSymbolDetails(null); // Clear previous details\n            return;\n        }\n        if (isInvalidApiKey(FINNHUB_API_KEY)) {\n            setStockSearchError(\"Invalid Finnhub API Key. Cannot fetch stock details.\");\n            setSelectedSymbolDetails(null); // Clear previous details\n            return;\n        }\n\n        const symbol = symbolToFetch.toUpperCase();\n        setIsSearchingStock(true); // Set loading state for search\n\n        // Validate against availableSymbols only if it's already loaded\n        // This is a client-side check and doesn't replace backend validation or API errors.\n        if (availableSymbols.length > 0 && !availableSymbols.includes(symbol)) {\n            setStockSearchError(`'${symbol}' is not a valid US stock symbol or not available via Finnhub free tier.`);\n            setSelectedSymbolDetails(null);\n            setIsSearchingStock(false);\n            return;\n        }\n\n        try {\n            // --- Attempt to get from cache first for both quote and profile ---\n            let quote = getCachedData(`finnhub_quote_${symbol}`, QUOTE_CACHE_DURATION);\n            let profile = getCachedData(`finnhub_profile_${symbol}`, PROFILE_CACHE_DURATION);\n            let fetchedNewData = false; // Flag to indicate if new data was fetched from API\n\n            // Fetch quote if not cached or cache is stale\n            if (!quote) {\n                const quoteRes = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n                quote = quoteRes.data;\n                setCachedData(`finnhub_quote_${symbol}`, quote);\n                fetchedNewData = true;\n            }\n\n            // Fetch profile if not cached or cache is stale\n            if (!profile) {\n                const profileRes = await axios.get(`https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n                profile = profileRes.data;\n                setCachedData(`finnhub_profile_${symbol}`, profile);\n                fetchedNewData = true;\n            }\n\n            if (quote && quote.c !== 0 && profile && profile.name) {\n                setSelectedSymbolDetails({\n                    symbol: symbol,\n                    currentPrice: quote.c,\n                    change: quote.d,\n                    percentChange: quote.dp,\n                    high: quote.h,\n                    low: quote.l,\n                    open: quote.o,\n                    previousClose: quote.pc,\n                    companyName: profile.name,\n                    industry: profile.finnhubIndustry,\n                    marketCap: profile.marketCapitalization,\n                    ipo: profile.ipo,\n                    weburl: profile.weburl\n                });\n\n                // Only trigger fetchLivePrices for this specific symbol if new data was fetched or it's missing from livePrices\n                // This prevents unnecessary calls if it's already being updated by the TradingDataContext's interval\n                if (fetchedNewData || !livePrices[symbol]) {\n                    fetchLivePrices([symbol]); // Ensure fetchLivePrices can take an array of symbols for specific updates\n                }\n            } else {\n                setStockSearchError(`No real-time data found for ${symbol}. It might be delisted or not available on free tier.`);\n                setSelectedSymbolDetails(null);\n            }\n        } catch (error) {\n            console.error(\"Error fetching stock details:\", error);\n            if (axios.isAxiosError(error) && error.response) {\n                if (error.response.status === 429) {\n                    setStockSearchError(\"You've hit Finnhub API rate limits. Please wait a moment and try again.\");\n                } else {\n                    setStockSearchError(`Failed to fetch data for ${symbol}: ${error.response.status} - ${error.response.statusText}`);\n                }\n            } else if (error.message === 'Network Error') { // Axios specific network error\n                setStockSearchError(`Network error: Could not connect to Finnhub. Check your internet connection.`);\n            }\n            else {\n                 setStockSearchError(`Failed to fetch data for ${symbol}. Please check the symbol and your API key.`);\n            }\n            setSelectedSymbolDetails(null);\n        } finally {\n            setIsSearchingStock(false); // Reset loading state regardless of success or failure\n        }\n    }, [availableSymbols, fetchLivePrices, FINNHUB_API_KEY, isInvalidApiKey, livePrices]);\n\n\n    // handleSearchSubmit will now trigger the details fetch for the current searchTerm\n    const handleSearchSubmit = useCallback((e) => {\n        e.preventDefault();\n        triggerSymbolDetailsFetch(searchTerm);\n    }, [searchTerm, triggerSymbolDetailsFetch]);\n\n\n    // --- Trade Execution ---\n    const handleTrade = async () => {\n        if (!user) {\n            setTradeMessage({ text: 'Please log in to place a trade.', type: 'error' });\n            return;\n        }\n        if (!modalSymbol || quantity <= 0 || !modalPrice) {\n            setTradeMessage({ text: 'Please enter a valid symbol, quantity, and price.', type: 'error' });\n            return;\n        }\n\n        try {\n            await contextAddTrade({\n                symbol: modalSymbol,\n                quantity: quantity,\n                price: modalPrice,\n                type: tradeType,\n            });\n\n            setTradeMessage({ text: `${modalSymbol} ${tradeType === 'buy' ? 'bought' : 'sold'} successfully!`, type: 'success' });\n\n            setQuantity(0);\n            setShowBuySellModal(false);\n\n        } catch (error) {\n            console.error(\"Error placing trade:\", error);\n            setTradeMessage({ text: `Failed to place trade: ${error.message}`, type: 'error' });\n        }\n    };\n\n    const openBuySellModal = (symbol, price, type) => {\n        setModalSymbol(symbol);\n        setModalPrice(price);\n        setTradeType(type);\n        setQuantity(0);\n        setShowBuySellModal(true);\n        setTradeMessage({ text: '', type: '' });\n    };\n\n    const handleRemoveTrade = async (tradeId) => {\n        if (window.confirm(\"Are you sure you want to remove this trade? This will adjust your capital and holdings.\")) {\n            try {\n                await contextRemoveTrade({ id: tradeId });\n                setTradeMessage({ text: 'Trade successfully removed and capital/holdings adjusted.', type: 'success' });\n            } catch (error) {\n                setTradeMessage({ text: `Failed to remove trade: ${error.message}`, type: 'error' });\n            }\n        }\n    };\n\n    const currentPortfolioValue = parseFloat(calculateTotalPortfolioValue());\n    const initialTotalCapital = 10000;\n    const netProfitLoss = currentPortfolioValue - initialTotalCapital;\n    const netProfitLossPercentage = (netProfitLoss / initialTotalCapital) * 100;\n    const isNetProfit = netProfitLoss >= 0;\n\n    if (loadingData) {\n        return (\n            <div className=\"dashboard-loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading trading data...</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"trading-dashboard-container\">\n            <div className=\"dashboard-header\">\n                {user ? (\n                    <h1 className=\"welcome-message\">Welcome, {user.email}!</h1>\n                ) : (\n                    <h1 className=\"welcome-message\">Welcome to Paper Trading!</h1>\n                )}\n            </div>\n\n            {/* Main Dashboard Grid */}\n            <div className=\"dashboard-grid\">\n                {/* Account Value Panel (Top Left) */}\n                <div className=\"dashboard-panel account-value-panel\">\n                    <h2 className=\"panel-title\">Account Value</h2>\n                    <div className=\"account-summary\">\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Account Value</span>\n                            <span className=\"value\">{CURRENCY_SYMBOL}{currentPortfolioValue.toFixed(2)}</span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Today's Change</span>\n                            <span className={`value ${isPositiveChange ? 'text-green' : 'text-red'}`}>\n                                {todaysChangeAbsolute} ({isPositiveChange ? '+' : ''}{todaysChangePercentage}%)\n                            </span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Buying Power</span>\n                            <span className=\"value\">{CURRENCY_SYMBOL}{capital.toFixed(2)}</span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Cash</span>\n                            <span className=\"value\">{CURRENCY_SYMBOL}{capital.toFixed(2)}</span>\n                        </div>\n                        <div className=\"summary-item\">\n                            <span className=\"label\">Net P&L (All Time)</span>\n                            <span className={`value ${isNetProfit ? 'text-green' : 'text-red'}`}>\n                                {CURRENCY_SYMBOL}{netProfitLoss.toFixed(2)} ({isNetProfit ? '+' : ''}{netProfitLossPercentage.toFixed(2)}%)\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Performance Chart Panel (Top Right) */}\n                <div className=\"dashboard-panel performance-chart-panel\">\n                    <h2 className=\"panel-title\">Performance History</h2>\n                    <div className=\"chart-placeholder\">\n                        <p>Your performance chart will update daily starting tomorrow.</p>\n                        <div className=\"button-group-top-right\">\n                            <button className=\"performance-btn active\">1W</button>\n                            <button className=\"performance-btn\">1M</button>\n                            <button className=\"performance-btn\">3M</button>\n                            <button className=\"performance-btn\">6M</button>\n                            <button className=\"performance-btn\">1Y</button>\n                            <button className=\"performance-btn\">5Y</button>\n                            <button className=\"performance-btn\">Max</button>\n                        </div>\n                        <button className=\"btn-performance-history\">Performance History</button>\n                    </div>\n                </div>\n\n                {/* Trade Execution Panel (Search & Place Order - left side, below Account Value) */}\n                <div className=\"dashboard-panel trade-panel\">\n                    <h2 className=\"panel-title\">Place Order</h2>\n                    <form onSubmit={handleSearchSubmit} className=\"stock-search-form\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter stock symbol (e.g., AAPL)\"\n                            value={searchTerm}\n                            onChange={handleSearchChange}\n                            list=\"available-symbols-datalist\"\n                            className=\"search-input\"\n                        />\n                        <button type=\"submit\" className=\"search-button\" disabled={isSearchingStock}>\n                            {isSearchingStock ? 'Searching...' : 'Search'}\n                        </button>\n                    </form>\n\n                    {/* --- DATALIST ELEMENT --- */}\n                    <datalist id=\"available-symbols-datalist\">\n                        {availableSymbols.map((symbol) => (\n                            <option key={symbol} value={symbol} />\n                        ))}\n                    </datalist>\n                    {/* --- END DATALIST ELEMENT --- */}\n\n                    {stockSearchError && <p className=\"error-message\">{stockSearchError}</p>}\n\n                    {selectedSymbolDetails && (\n                        <div className=\"selected-stock-details\">\n                            <h3>{selectedSymbolDetails.companyName} ({selectedSymbolDetails.symbol})</h3>\n                            <p>Current Price: {CURRENCY_SYMBOL}{selectedSymbolDetails.currentPrice.toFixed(2)}</p>\n                            <p className={`price-change-detail ${selectedSymbolDetails.change >= 0 ? 'text-green' : 'text-red'}`}>\n                                {selectedSymbolDetails.change >= 0 ? '+' : ''}{selectedSymbolDetails.change?.toFixed(2)} (\n                                {selectedSymbolDetails.percentChange >= 0 ? '+' : ''}{selectedSymbolDetails.percentChange?.toFixed(2)}%)\n                            </p>\n                            <div className=\"trade-actions\">\n                                <button\n                                    className=\"buy-button\"\n                                    onClick={() => openBuySellModal(selectedSymbolDetails.symbol, selectedSymbolDetails.currentPrice, 'buy')}\n                                >\n                                    Buy\n                                </button>\n                                <button\n                                    className=\"sell-button\"\n                                    onClick={() => openBuySellModal(selectedSymbolDetails.symbol, selectedSymbolDetails.currentPrice, 'sell')}\n                                >\n                                    Sell\n                                </button>\n                                <button\n                                    className=\"view-details-button\"\n                                    onClick={() => navigate(`/stock/${selectedSymbolDetails.symbol}`)}\n                                >\n                                    View Details\n                                </button>\n                                {watchListSymbols.includes(selectedSymbolDetails.symbol) ? (\n                                    <button\n                                        className=\"remove-watchlist-button\"\n                                        onClick={() => removeFromWatchlist(selectedSymbolDetails.symbol)}\n                                    >\n                                        Remove from Watchlist\n                                    </button>\n                                ) : (\n                                    <button\n                                        className=\"add-watchlist-button\"\n                                        onClick={() => addToWatchlist(selectedSymbolDetails.symbol)}\n                                    >\n                                        Add to Watchlist\n                                    </button>\n                                )}\n                            </div>\n                        </div>\n                    )}\n\n                    {showBuySellModal && (\n                        <div className=\"modal-overlay\">\n                            <div className=\"modal-content\">\n                                <h3>{tradeType.toUpperCase()} {modalSymbol} at {CURRENCY_SYMBOL}{modalPrice.toFixed(2)}</h3>\n                                {tradeMessage.text && <p className={`message ${tradeMessage.type}`}>{tradeMessage.text}</p>}\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"quantity\">Quantity:</label>\n                                    <input\n                                        id=\"quantity\"\n                                        type=\"number\"\n                                        min=\"1\"\n                                        value={quantity}\n                                        onChange={(e) => setQuantity(parseInt(e.target.value) || 0)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"orderType\">Order Type:</label>\n                                    <select\n                                        id=\"orderType\"\n                                        value={orderType}\n                                        onChange={(e) => setOrderType(e.target.value)}\n                                    >\n                                        <option value=\"market\">Market</option>\n                                        <option value=\"limit\">Limit</option>\n                                        <option value=\"stop\">Stop</option>\n                                    </select>\n                                </div>\n                                {orderType === 'limit' && (\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"limitPrice\">Limit Price:</label>\n                                        <input\n                                            id=\"limitPrice\"\n                                            type=\"number\"\n                                            value={limitPrice}\n                                            onChange={(e) => setLimitPrice(parseFloat(e.target.value) || 0)}\n                                            step=\"0.01\"\n                                        />\n                                    </div>\n                                )}\n                                {orderType === 'stop' && (\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"stopPrice\">Stop Price:</label>\n                                        <input\n                                            id=\"stopPrice\"\n                                            type=\"number\"\n                                            value={stopPrice}\n                                            onChange={(e) => setStopPrice(parseFloat(e.target.value) || 0)}\n                                            step=\"0.01\"\n                                        />\n                                    </div>\n                                )}\n                                <div className=\"modal-actions\">\n                                    <button className=\"confirm-trade-button\" onClick={handleTrade}>\n                                        Confirm {tradeType.toUpperCase()}\n                                    </button>\n                                    <button className=\"cancel-button\" onClick={() => setShowBuySellModal(false)}>\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                {/* Holdings Panel (Bottom Left) */}\n                <div className=\"dashboard-panel holdings-panel\">\n                    <h2 className=\"panel-title\">Holdings</h2>\n                    <div className=\"tab-buttons\">\n                        <button\n                            className={`tab-button ${currentHoldingsTab === 'stocks' ? 'active' : ''}`}\n                            onClick={() => setCurrentHoldingsTab('stocks')}\n                        >\n                            Stocks & ETFs\n                        </button>\n                        <button\n                            className={`tab-button ${currentHoldingsTab === 'options' ? 'active' : ''}`}\n                            onClick={() => setCurrentHoldingsTab('options')}\n                        >\n                            Options\n                        </button>\n                    </div>\n\n                    {currentHoldingsTab === 'stocks' && (\n                        <div className=\"holdings-table-container\">\n                            {holdings.filter(h => h.netQty > 0).length > 0 ? (\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th>Symbol</th>\n                                            <th>Description</th>\n                                            <th>Current Price</th>\n                                            <th>Today's Change</th>\n                                            <th>Purchase Price</th>\n                                            <th>Qty</th>\n                                            <th>Total Value</th>\n                                            <th>Trade Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {holdings.filter(h => h.netQty > 0).map((holding) => {\n                                            const currentPrice = livePrices[holding.symbol] || 0;\n                                            const totalValue = currentPrice * holding.netQty;\n                                            const { change, percentageChange } = calculatePriceChange(holding.symbol);\n                                            const isHoldingPositiveChange = parseFloat(change) >= 0;\n\n                                            // To display company name here, you'd ideally either:\n                                            // 1. Store companyName in your Supabase holdings table when a trade occurs.\n                                            // 2. Fetch all company profiles for current holdings on Dashboard load and cache them.\n                                            // Fetching it per row here would cause too many API calls.\n                                            // For now, it will only show if it matches the currently selectedSymbolDetails\n                                            // which is primarily for the search result.\n                                            const holdingCompanyName = selectedSymbolDetails && selectedSymbolDetails.symbol === holding.symbol\n                                                ? selectedSymbolDetails.companyName\n                                                : 'Loading...'; // Or 'N/A', or a lookup from a wider cache of profiles\n\n                                            return (\n                                                <tr key={holding.symbol}>\n                                                    <td>{holding.symbol}</td>\n                                                    <td>{holdingCompanyName}</td>\n                                                    <td>{CURRENCY_SYMBOL}{currentPrice.toFixed(2)}</td>\n                                                    <td className={isHoldingPositiveChange ? 'text-green' : 'text-red'}>\n                                                        {change} ({isHoldingPositiveChange ? '+' : ''}{percentageChange}%)\n                                                    </td>\n                                                    <td>{CURRENCY_SYMBOL}{holding.avgBuyPrice.toFixed(2)}</td>\n                                                    <td>{holding.netQty}</td>\n                                                    <td>{CURRENCY_SYMBOL}{totalValue.toFixed(2)}</td>\n                                                    <td>\n                                                        <button\n                                                            className=\"sell-button-small\"\n                                                            onClick={() => openBuySellModal(holding.symbol, currentPrice, 'sell')}\n                                                        >\n                                                            Sell\n                                                        </button>\n                                                        <button\n                                                            className=\"buy-button-small\"\n                                                            onClick={() => openBuySellModal(holding.symbol, currentPrice, 'buy')}\n                                                        >\n                                                            Buy More\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                            );\n                                        })}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                <p className=\"message info-message\">You have no stock holdings yet.</p>\n                            )}\n                        </div>\n                    )}\n                    {currentHoldingsTab === 'options' && (\n                        <div className=\"options-holding-placeholder\">\n                            <p className=\"message info-message\">Options trading not implemented yet.</p>\n                        </div>\n                    )}\n                </div>\n\n                {/* Trade History Panel (Bottom Right) */}\n                <div className=\"dashboard-panel trade-history-panel\">\n                    <h2 className=\"panel-title\">Trade History</h2>\n                    <div className=\"trade-history-table-container\">\n                        {trades.length > 0 ? (\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th>Symbol</th>\n                                        <th>Type</th>\n                                        <th>Qty</th>\n                                        <th>Price</th>\n                                        <th>Date</th>\n                                        <th>Action</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {trades.map((trade) => (\n                                        <tr key={trade.id}>\n                                            <td>{trade.symbol}</td>\n                                            <td className={trade.type === 'buy' ? 'text-green' : 'text-red'}>{trade.type.toUpperCase()}</td>\n                                            <td>{trade.quantity}</td>\n                                            <td>{CURRENCY_SYMBOL}{trade.price.toFixed(2)}</td>\n                                            <td>{new Date(trade.created_at).toLocaleDateString()}</td>\n                                            <td>\n                                                <button\n                                                    className=\"remove-trade-button\"\n                                                    onClick={() => handleRemoveTrade(trade.id)}\n                                                >\n                                                    Remove\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        ) : (\n                            <p className=\"message info-message\">No trade history yet.</p>\n                        )}\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}