{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/paper-trading-app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { supabase } from './supabaseClient';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';\nfunction App() {\n  const [trades, setTrades] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [form, setForm] = useState({\n    symbol: '',\n    quantity: '',\n    price: '',\n    type: 'buy'\n  });\n  const [capital, setCapital] = useState(100000); // starting capital\n  const [symbol, setSymbol] = useState(\"TCS\");\n  const apiKey = 'd0uaoehr01qn5fk47mdgd0uaoehr01qn5fk47me0';\n  useEffect(() => {\n    const fetchTrades = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('trades').select('*').order('created_at', {\n        ascending: true\n      });\n      if (!error) setTrades(data);\n    };\n    fetchTrades();\n  }, []);\n  useEffect(() => {\n    const symbols = [...new Set(trades.map(trade => trade.symbol))];\n    const fetchLivePrices = async () => {\n      const newPrices = {};\n      for (const sym of symbols) {\n        try {\n          const res = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${sym}.NS&token=${apiKey}`);\n          newPrices[sym] = res.data.c;\n        } catch (err) {\n          console.error(`Error fetching price for ${sym}`, err);\n        }\n      }\n      setLivePrices(newPrices);\n    };\n    fetchLivePrices();\n    const interval = setInterval(fetchLivePrices, 10000);\n    return () => clearInterval(interval);\n  }, [trades]);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      data,\n      error\n    } = await supabase.from('trades').insert([form]);\n    if (!error) {\n      setForm({\n        symbol: '',\n        quantity: '',\n        price: '',\n        type: 'buy'\n      });\n      const updated = await supabase.from('trades').select('*').order('created_at', {\n        ascending: true\n      });\n      setTrades(updated.data);\n    }\n  };\n  const handleBuy = async () => {\n    const qty = Number(form.quantity);\n    const currentPrice = livePrices[form.symbol];\n    if (!currentPrice || !qty) return;\n    const cost = qty * currentPrice;\n    if (cost > capital) return alert('❌ Not enough capital!');\n    setCapital(capital - cost);\n    const trade = {\n      symbol: form.symbol,\n      quantity: qty,\n      price: currentPrice,\n      type: 'buy',\n      timestamp: new Date().toISOString()\n    };\n    await supabase.from('trades').insert([trade]);\n    setTrades([...trades, trade]);\n  };\n  const handleSell = async () => {\n    const qty = Number(form.quantity);\n    const currentPrice = livePrices[form.symbol];\n    if (!currentPrice || !qty) return;\n    const saleAmount = qty * currentPrice;\n    setCapital(capital + saleAmount);\n    const trade = {\n      symbol: form.symbol,\n      quantity: qty,\n      price: currentPrice,\n      type: 'sell',\n      timestamp: new Date().toISOString()\n    };\n    await supabase.from('trades').insert([trade]);\n    setTrades([...trades, trade]);\n  };\n  const calculatePnL = trades => {\n    const summary = {};\n    trades.forEach(({\n      symbol,\n      quantity,\n      price,\n      type\n    }) => {\n      if (!summary[symbol]) {\n        summary[symbol] = {\n          totalBuyQty: 0,\n          totalBuyCost: 0,\n          totalSellQty: 0,\n          totalSellRevenue: 0\n        };\n      }\n      const qty = Number(quantity),\n        pr = Number(price);\n      if (type === 'buy') {\n        summary[symbol].totalBuyQty += qty;\n        summary[symbol].totalBuyCost += qty * pr;\n      } else {\n        summary[symbol].totalSellQty += qty;\n        summary[symbol].totalSellRevenue += qty * pr;\n      }\n    });\n    return Object.entries(summary).map(([symbol, data]) => {\n      const avgBuy = data.totalBuyQty ? data.totalBuyCost / data.totalBuyQty : 0;\n      const profit = data.totalSellRevenue - avgBuy * data.totalSellQty;\n      return {\n        symbol,\n        netQty: data.totalBuyQty - data.totalSellQty,\n        avgBuyPrice: avgBuy.toFixed(2),\n        profit: profit.toFixed(2)\n      };\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '2rem',\n      fontFamily: 'Arial'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCCA Paper Trading App\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCBC Capital: \\u20B9\", capital.toFixed(2)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"symbol\",\n    placeholder: \"Symbol\",\n    value: form.symbol,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"quantity\",\n    type: \"number\",\n    placeholder: \"Qty\",\n    value: form.quantity,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"price\",\n    type: \"number\",\n    placeholder: \"Price\",\n    value: form.price,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"type\",\n    value: form.type,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"buy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Sell\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCBE Add Trade\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleBuy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDFE2 Buy at Live Price\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDD34 Sell at Live Price\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCC8 Live Prices\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, Object.entries(livePrices).map(([sym, price]) => /*#__PURE__*/React.createElement(\"li\", {\n    key: sym,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, sym), \": \\u20B9\", price === null || price === void 0 ? void 0 : price.toFixed(2)))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCDC Trade History\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    cellPadding: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 30\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 42\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 56\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 69\n    }\n  }, \"Time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, trades.map(t => /*#__PURE__*/React.createElement(\"tr\", {\n    key: t.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, t.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, t.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, t.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, t.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, new Date(t.created_at).toLocaleString()))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCCA Profit & Loss\"), /*#__PURE__*/React.createElement(\"table\", {\n    border: \"1\",\n    cellPadding: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 20\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 35\n    }\n  }, \"Net Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 51\n    }\n  }, \"Avg Buy\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 67\n    }\n  }, \"P&L\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, calculatePnL(trades).map(row => /*#__PURE__*/React.createElement(\"tr\", {\n    key: row.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, row.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, row.netQty), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, row.avgBuyPrice), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      color: row.profit >= 0 ? 'green' : 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"\\u20B9\", row.profit))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCCA P&L Chart\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: calculatePnL(trades),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"profit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, calculatePnL(trades).map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: entry.profit >= 0 ? \"#4caf50\" : \"#f44336\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }))))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","supabase","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","App","trades","setTrades","livePrices","setLivePrices","form","setForm","symbol","quantity","price","type","capital","setCapital","setSymbol","apiKey","fetchTrades","data","error","from","select","order","ascending","symbols","Set","map","trade","fetchLivePrices","newPrices","sym","res","get","c","err","console","interval","setInterval","clearInterval","handleChange","e","target","name","value","handleSubmit","preventDefault","insert","updated","handleBuy","qty","Number","currentPrice","cost","alert","timestamp","Date","toISOString","handleSell","saleAmount","calculatePnL","summary","forEach","totalBuyQty","totalBuyCost","totalSellQty","totalSellRevenue","pr","Object","entries","avgBuy","profit","netQty","avgBuyPrice","toFixed","createElement","style","padding","fontFamily","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","marginTop","onClick","key","border","cellPadding","t","id","created_at","toLocaleString","row","color","width","height","strokeDasharray","dataKey","entry","index","fill"],"sources":["/Users/aryansrivastava/projects/paper-trading-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { supabase } from './supabaseClient';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell\n} from 'recharts';\n\nfunction App() {\n  const [trades, setTrades] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [form, setForm] = useState({ symbol: '', quantity: '', price: '', type: 'buy' });\n  const [capital, setCapital] = useState(100000); // starting capital\n  const [symbol, setSymbol] = useState(\"TCS\");\n\n  const apiKey = 'd0uaoehr01qn5fk47mdgd0uaoehr01qn5fk47me0';\n\n  useEffect(() => {\n    const fetchTrades = async () => {\n      const { data, error } = await supabase.from('trades').select('*').order('created_at', { ascending: true });\n      if (!error) setTrades(data);\n    };\n    fetchTrades();\n  }, []);\n\n  useEffect(() => {\n    const symbols = [...new Set(trades.map((trade) => trade.symbol))];\n    const fetchLivePrices = async () => {\n      const newPrices = {};\n      for (const sym of symbols) {\n        try {\n          const res = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${sym}.NS&token=${apiKey}`);\n          newPrices[sym] = res.data.c;\n        } catch (err) {\n          console.error(`Error fetching price for ${sym}`, err);\n        }\n      }\n      setLivePrices(newPrices);\n    };\n    fetchLivePrices();\n    const interval = setInterval(fetchLivePrices, 10000);\n    return () => clearInterval(interval);\n  }, [trades]);\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data, error } = await supabase.from('trades').insert([form]);\n    if (!error) {\n      setForm({ symbol: '', quantity: '', price: '', type: 'buy' });\n      const updated = await supabase.from('trades').select('*').order('created_at', { ascending: true });\n      setTrades(updated.data);\n    }\n  };\n\n  const handleBuy = async () => {\n    const qty = Number(form.quantity);\n    const currentPrice = livePrices[form.symbol];\n    if (!currentPrice || !qty) return;\n    const cost = qty * currentPrice;\n    if (cost > capital) return alert('❌ Not enough capital!');\n    setCapital(capital - cost);\n\n    const trade = {\n      symbol: form.symbol,\n      quantity: qty,\n      price: currentPrice,\n      type: 'buy',\n      timestamp: new Date().toISOString(),\n    };\n    await supabase.from('trades').insert([trade]);\n    setTrades([...trades, trade]);\n  };\n\n  const handleSell = async () => {\n    const qty = Number(form.quantity);\n    const currentPrice = livePrices[form.symbol];\n    if (!currentPrice || !qty) return;\n    const saleAmount = qty * currentPrice;\n    setCapital(capital + saleAmount);\n\n    const trade = {\n      symbol: form.symbol,\n      quantity: qty,\n      price: currentPrice,\n      type: 'sell',\n      timestamp: new Date().toISOString(),\n    };\n    await supabase.from('trades').insert([trade]);\n    setTrades([...trades, trade]);\n  };\n\n  const calculatePnL = (trades) => {\n    const summary = {};\n    trades.forEach(({ symbol, quantity, price, type }) => {\n      if (!summary[symbol]) {\n        summary[symbol] = { totalBuyQty: 0, totalBuyCost: 0, totalSellQty: 0, totalSellRevenue: 0 };\n      }\n      const qty = Number(quantity), pr = Number(price);\n      if (type === 'buy') {\n        summary[symbol].totalBuyQty += qty;\n        summary[symbol].totalBuyCost += qty * pr;\n      } else {\n        summary[symbol].totalSellQty += qty;\n        summary[symbol].totalSellRevenue += qty * pr;\n      }\n    });\n\n    return Object.entries(summary).map(([symbol, data]) => {\n      const avgBuy = data.totalBuyQty ? data.totalBuyCost / data.totalBuyQty : 0;\n      const profit = data.totalSellRevenue - (avgBuy * data.totalSellQty);\n      return {\n        symbol,\n        netQty: data.totalBuyQty - data.totalSellQty,\n        avgBuyPrice: avgBuy.toFixed(2),\n        profit: profit.toFixed(2),\n      };\n    });\n  };\n\n  return (\n    <div style={{ padding: '2rem', fontFamily: 'Arial' }}>\n      <h1>📊 Paper Trading App</h1>\n      <h2>💼 Capital: ₹{capital.toFixed(2)}</h2>\n\n      <form onSubmit={handleSubmit}>\n        <input name=\"symbol\" placeholder=\"Symbol\" value={form.symbol} onChange={handleChange} required />\n        <input name=\"quantity\" type=\"number\" placeholder=\"Qty\" value={form.quantity} onChange={handleChange} required />\n        <input name=\"price\" type=\"number\" placeholder=\"Price\" value={form.price} onChange={handleChange} required />\n        <select name=\"type\" value={form.type} onChange={handleChange}>\n          <option value=\"buy\">Buy</option>\n          <option value=\"sell\">Sell</option>\n        </select>\n        <button type=\"submit\">💾 Add Trade</button>\n      </form>\n\n      <div style={{ marginTop: '1rem' }}>\n        <button onClick={handleBuy}>🟢 Buy at Live Price</button>\n        <button onClick={handleSell}>🔴 Sell at Live Price</button>\n      </div>\n\n      <h2>📈 Live Prices</h2>\n      <ul>\n        {Object.entries(livePrices).map(([sym, price]) => (\n          <li key={sym}><strong>{sym}</strong>: ₹{price?.toFixed(2)}</li>\n        ))}\n      </ul>\n\n      <h2>📜 Trade History</h2>\n      <table border=\"1\" cellPadding=\"8\">\n        <thead>\n          <tr><th>Symbol</th><th>Qty</th><th>Price</th><th>Type</th><th>Time</th></tr>\n        </thead>\n        <tbody>\n          {trades.map((t) => (\n            <tr key={t.id}>\n              <td>{t.symbol}</td>\n              <td>{t.quantity}</td>\n              <td>{t.price}</td>\n              <td>{t.type}</td>\n              <td>{new Date(t.created_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>📊 Profit & Loss</h2>\n      <table border=\"1\" cellPadding=\"8\">\n        <thead><tr><th>Symbol</th><th>Net Qty</th><th>Avg Buy</th><th>P&L</th></tr></thead>\n        <tbody>\n          {calculatePnL(trades).map((row) => (\n            <tr key={row.symbol}>\n              <td>{row.symbol}</td>\n              <td>{row.netQty}</td>\n              <td>{row.avgBuyPrice}</td>\n              <td style={{ color: row.profit >= 0 ? 'green' : 'red' }}>₹{row.profit}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <h2>📊 P&L Chart</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={calculatePnL(trades)}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"symbol\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"profit\">\n            {calculatePnL(trades).map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.profit >= 0 ? \"#4caf50\" : \"#f44336\"} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}