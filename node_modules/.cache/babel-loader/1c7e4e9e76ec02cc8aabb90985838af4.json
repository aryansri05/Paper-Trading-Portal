{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/Paper-Trading-Portal/src/App.js\";\n// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Redirect } from 'react-router-dom';\nimport { supabase } from \"./supabaseClient\";\nimport AuthForm from \"./AuthForm\";\nimport TradingDashboard from \"./TradingDashboard\";\nimport PortfolioPage from \"./PortfolioPage\";\nimport { TradingDataProvider } from \"./TradingDataContext\"; // Assuming this is set up\nimport './App.css';\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    console.log(\"App.js: useEffect started, setting up auth listener.\");\n    setLoading(true);\n\n    // onAuthStateChange is our single source of truth for the user's session.\n    // It fires immediately with the current session and then listens for changes.\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      var _session$user;\n      console.log(`App.js: onAuthStateChange event fired: ${event}`);\n      const currentUser = (_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null;\n      setUser(currentUser);\n      setLoading(false); // We now know the auth state, so we can stop loading.\n\n      if (currentUser) {\n        console.log(\"App.js: User state set to:\", currentUser.email);\n      } else {\n        console.log(\"App.js: User state cleared (logged out).\");\n      }\n    });\n\n    // Cleanup function to unsubscribe when the App component unmounts\n    return () => {\n      if (subscription) {\n        console.log(\"App.js: Unsubscribing from auth listener.\");\n        subscription.unsubscribe();\n      }\n    };\n  }, []); // The empty array ensures this effect runs only once on mount.\n\n  // 1. Show a loading indicator until we have confirmed the user's session status.\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '50px',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, \"Loading Session...\");\n  }\n\n  // 2. Render the application based on whether a user is logged in.\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, user ?\n  /*#__PURE__*/\n  // --- Authenticated Routes ---\n  // If a user object exists, allow access to these pages\n  React.createElement(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/React.createElement(TradingDataProvider, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/dashboard\",\n      element: /*#__PURE__*/React.createElement(TradingDashboard, {\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 55\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/portfolio\",\n      element: /*#__PURE__*/React.createElement(PortfolioPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 55\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard\",\n        replace: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 46\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) :\n  /*#__PURE__*/\n  // --- Unauthenticated Route ---\n  // If no user, all paths lead to the login form\n  React.createElement(Route, {\n    path: \"*\",\n    element: /*#__PURE__*/React.createElement(AuthForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 38\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Redirect","supabase","AuthForm","TradingDashboard","PortfolioPage","TradingDataProvider","App","user","setUser","loading","setLoading","console","log","data","subscription","auth","onAuthStateChange","event","session","_session$user","currentUser","email","unsubscribe","createElement","style","textAlign","marginTop","fontSize","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","to","replace"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Redirect } from 'react-router-dom';\nimport { supabase } from \"./supabaseClient\";\n\nimport AuthForm from \"./AuthForm\";\nimport TradingDashboard from \"./TradingDashboard\";\nimport PortfolioPage from \"./PortfolioPage\";\nimport { TradingDataProvider } from \"./TradingDataContext\"; // Assuming this is set up\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(\"App.js: useEffect started, setting up auth listener.\");\n    setLoading(true);\n\n    // onAuthStateChange is our single source of truth for the user's session.\n    // It fires immediately with the current session and then listens for changes.\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n      console.log(`App.js: onAuthStateChange event fired: ${event}`);\n      \n      const currentUser = session?.user ?? null;\n      setUser(currentUser);\n      setLoading(false); // We now know the auth state, so we can stop loading.\n\n      if (currentUser) {\n        console.log(\"App.js: User state set to:\", currentUser.email);\n      } else {\n        console.log(\"App.js: User state cleared (logged out).\");\n      }\n    });\n\n    // Cleanup function to unsubscribe when the App component unmounts\n    return () => {\n      if (subscription) {\n        console.log(\"App.js: Unsubscribing from auth listener.\");\n        subscription.unsubscribe();\n      }\n    };\n  }, []); // The empty array ensures this effect runs only once on mount.\n\n  // 1. Show a loading indicator until we have confirmed the user's session status.\n  if (loading) {\n    return (\n      <div style={{ textAlign: 'center', marginTop: '50px', fontSize: '20px' }}>\n        Loading Session...\n      </div>\n    );\n  }\n\n  // 2. Render the application based on whether a user is logged in.\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          {user ? (\n            // --- Authenticated Routes ---\n            // If a user object exists, allow access to these pages\n            <Route\n              path=\"*\"\n              element={\n                <TradingDataProvider user={user}>\n                  <Routes>\n                    <Route path=\"/dashboard\" element={<TradingDashboard user={user} />} />\n                    <Route path=\"/portfolio\" element={<PortfolioPage />} />\n                    {/* Redirect any other authenticated path to the dashboard */}\n                    <Route path=\"*\" element={<Redirect to=\"/dashboard\" replace />} />\n                  </Routes>\n                </TradingDataProvider>\n              }\n            />\n          ) : (\n            // --- Unauthenticated Route ---\n            // If no user, all paths lead to the login form\n            <Route path=\"*\" element={<AuthForm />} />\n          )}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}