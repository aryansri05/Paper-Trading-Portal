{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/Paper-Trading-Portal/src/pages/StockDetailsPage.js\",\n  _s = $RefreshSig$();\n// src/components/StockChart.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { FINNHUB_API_KEY, isInvalidApiKey, CURRENCY_SYMBOL } from '../TradingDataContext'; // Import FINNHUB_API_KEY and helper\n\n// Define options for the chart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultChartOptions = {\n  chart: {\n    type: 'candlestick',\n    height: 350,\n    toolbar: {\n      show: true,\n      tools: {\n        download: true,\n        selection: true,\n        zoom: true,\n        zoomin: true,\n        zoomout: true,\n        pan: true,\n        reset: true\n      }\n    }\n  },\n  title: {\n    text: 'Candlestick Chart',\n    align: 'left'\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      formatter: function (val) {\n        return new Date(val).toLocaleDateString();\n      }\n    }\n  },\n  yaxis: {\n    tooltip: {\n      enabled: true\n    },\n    labels: {\n      formatter: value => `<span class=\"math-inline\">\\{CURRENCY\\_SYMBOL\\}</span>{value ? value.toFixed(2) : ''}`\n    }\n  },\n  plotOptions: {\n    candlestick: {\n      colors: {\n        up: '#00B746',\n        // Green for up candles\n        down: '#EF403C' // Red for down candles\n      }\n    }\n  },\n  tooltip: {\n    x: {\n      format: 'dd MMM yyyy'\n    },\n    y: {\n      formatter: function (val) {\n        return `<span class=\"math-inline\">\\{CURRENCY\\_SYMBOL\\}</span>{val ? val.toFixed(2) : ''}`;\n      }\n    }\n  }\n};\nfunction StockChart({\n  symbol\n}) {\n  _s();\n  var _series$;\n  const [series, setSeries] = useState([{\n    data: []\n  }]);\n  const [loading, setLoading] = useState(true);\n  const [chartError, setChartError] = useState(null);\n  const [chartOptions, setChartOptions] = useState(defaultChartOptions);\n  const fetchHistoricalData = useCallback(async stockSymbol => {\n    if (!stockSymbol || isInvalidApiKey(FINNHUB_API_KEY)) {\n      setChartError(\"Invalid symbol or Finnhub API Key.\");\n      setLoading(false);\n      setSeries([{\n        data: []\n      }]);\n      return;\n    }\n    setLoading(true);\n    setChartError(null);\n    setSeries([{\n      data: []\n    }]); // Clear previous data\n\n    const now = Math.floor(Date.now() / 1000); // Current timestamp in seconds\n    const threeMonthsAgo = now - 90 * 24 * 60 * 60; // 90 days (approx 3 months) in seconds\n    // Use 'D' for daily candles. Finnhub free tier usually allows daily for a limited period.\n    const resolution = 'D'; // 'D' for daily, 'W' for weekly, 'M' for monthly\n\n    try {\n      const response = await axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=<span class=\"math-inline\">\\{stockSymbol\\}&resolution\\=</span>{resolution}&from=<span class=\"math-inline\">\\{threeMonthsAgo\\}&to\\=</span>{now}&token=${FINNHUB_API_KEY}`);\n      const {\n        c,\n        h,\n        l,\n        o,\n        t\n      } = response.data; // c: close, h: high, l: low, o: open, t: timestamp\n\n      if (response.data.s === 'no_data' || !c || c.length === 0) {\n        setChartError(`No historical data found for ${stockSymbol}. This might be due to an invalid symbol, API restrictions, or no data for the requested period.`);\n        setSeries([{\n          data: []\n        }]);\n        return;\n      }\n      const formattedData = t.map((timestamp, index) => ({\n        x: new Date(timestamp * 1000),\n        // Convert timestamp to milliseconds\n        y: [o[index], h[index], l[index], c[index]] // [Open, High, Low, Close]\n      }));\n      setSeries([{\n        data: formattedData\n      }]);\n      setChartOptions(prevOptions => ({\n        ...prevOptions,\n        title: {\n          text: `${stockSymbol} Candlestick Chart`\n        }\n      }));\n    } catch (err) {\n      console.error(\"Error fetching historical data:\", err);\n      setChartError(`Failed to load chart for ${stockSymbol}. Please check your Finnhub API key and try again. Free tier often has limited historical data access (e.g., last 3 months daily, or only 1 month daily).`);\n      setSeries([{\n        data: []\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  }, [isInvalidApiKey, FINNHUB_API_KEY, CURRENCY_SYMBOL]);\n  useEffect(() => {\n    fetchHistoricalData(symbol);\n  }, [symbol, fetchHistoricalData]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n  if (chartError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message error-message\",\n      children: chartError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 16\n    }, this);\n  }\n  if (((_series$ = series[0]) === null || _series$ === void 0 ? void 0 : _series$.data.length) === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message info-message\",\n      children: [\"No chart data available for \", symbol, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-chart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartOptions,\n      series: series,\n      type: \"candlestick\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s(StockChart, \"I3SdLQefiMxMtsoxSRvWU6Fp21c=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Chart","FINNHUB_API_KEY","isInvalidApiKey","CURRENCY_SYMBOL","jsxDEV","_jsxDEV","defaultChartOptions","chart","type","height","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","title","text","align","xaxis","labels","formatter","val","Date","toLocaleDateString","yaxis","tooltip","enabled","value","plotOptions","candlestick","colors","up","down","x","format","y","StockChart","symbol","_s","_series$","series","setSeries","data","loading","setLoading","chartError","setChartError","chartOptions","setChartOptions","fetchHistoricalData","stockSymbol","now","Math","floor","threeMonthsAgo","resolution","response","get","c","h","l","o","t","s","length","formattedData","map","timestamp","index","prevOptions","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/pages/StockDetailsPage.js"],"sourcesContent":["// src/components/StockChart.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { FINNHUB_API_KEY, isInvalidApiKey, CURRENCY_SYMBOL } from '../TradingDataContext'; // Import FINNHUB_API_KEY and helper\n\n// Define options for the chart\nconst defaultChartOptions = {\n    chart: {\n        type: 'candlestick',\n        height: 350,\n        toolbar: {\n            show: true,\n            tools: {\n                download: true,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n            },\n        },\n    },\n    title: {\n        text: 'Candlestick Chart',\n        align: 'left'\n    },\n    xaxis: {\n        type: 'datetime',\n        labels: {\n            formatter: function(val) {\n                return new Date(val).toLocaleDateString();\n            }\n        }\n    },\n    yaxis: {\n        tooltip: {\n            enabled: true\n        },\n        labels: {\n            formatter: (value) => `<span class=\"math-inline\">\\{CURRENCY\\_SYMBOL\\}</span>{value ? value.toFixed(2) : ''}`\n        }\n    },\n    plotOptions: {\n        candlestick: {\n            colors: {\n                up: '#00B746', // Green for up candles\n                down: '#EF403C' // Red for down candles\n            }\n        }\n    },\n    tooltip: {\n        x: {\n            format: 'dd MMM yyyy'\n        },\n        y: {\n            formatter: function(val) {\n                return `<span class=\"math-inline\">\\{CURRENCY\\_SYMBOL\\}</span>{val ? val.toFixed(2) : ''}`;\n            }\n        }\n    }\n};\n\nfunction StockChart({ symbol }) {\n    const [series, setSeries] = useState([{ data: [] }]);\n    const [loading, setLoading] = useState(true);\n    const [chartError, setChartError] = useState(null);\n    const [chartOptions, setChartOptions] = useState(defaultChartOptions);\n\n    const fetchHistoricalData = useCallback(async (stockSymbol) => {\n        if (!stockSymbol || isInvalidApiKey(FINNHUB_API_KEY)) {\n            setChartError(\"Invalid symbol or Finnhub API Key.\");\n            setLoading(false);\n            setSeries([{ data: [] }]);\n            return;\n        }\n\n        setLoading(true);\n        setChartError(null);\n        setSeries([{ data: [] }]); // Clear previous data\n\n        const now = Math.floor(Date.now() / 1000); // Current timestamp in seconds\n        const threeMonthsAgo = now - (90 * 24 * 60 * 60); // 90 days (approx 3 months) in seconds\n        // Use 'D' for daily candles. Finnhub free tier usually allows daily for a limited period.\n        const resolution = 'D'; // 'D' for daily, 'W' for weekly, 'M' for monthly\n\n        try {\n            const response = await axios.get(\n                `https://finnhub.io/api/v1/stock/candle?symbol=<span class=\"math-inline\">\\{stockSymbol\\}&resolution\\=</span>{resolution}&from=<span class=\"math-inline\">\\{threeMonthsAgo\\}&to\\=</span>{now}&token=${FINNHUB_API_KEY}`\n            );\n\n            const { c, h, l, o, t } = response.data; // c: close, h: high, l: low, o: open, t: timestamp\n\n            if (response.data.s === 'no_data' || !c || c.length === 0) {\n                setChartError(`No historical data found for ${stockSymbol}. This might be due to an invalid symbol, API restrictions, or no data for the requested period.`);\n                setSeries([{ data: [] }]);\n                return;\n            }\n\n            const formattedData = t.map((timestamp, index) => ({\n                x: new Date(timestamp * 1000), // Convert timestamp to milliseconds\n                y: [o[index], h[index], l[index], c[index]] // [Open, High, Low, Close]\n            }));\n\n            setSeries([{ data: formattedData }]);\n            setChartOptions(prevOptions => ({\n                ...prevOptions,\n                title: { text: `${stockSymbol} Candlestick Chart` }\n            }));\n\n        } catch (err) {\n            console.error(\"Error fetching historical data:\", err);\n            setChartError(`Failed to load chart for ${stockSymbol}. Please check your Finnhub API key and try again. Free tier often has limited historical data access (e.g., last 3 months daily, or only 1 month daily).`);\n            setSeries([{ data: [] }]);\n        } finally {\n            setLoading(false);\n        }\n    }, [isInvalidApiKey, FINNHUB_API_KEY, CURRENCY_SYMBOL]);\n\n    useEffect(() => {\n        fetchHistoricalData(symbol);\n    }, [symbol, fetchHistoricalData]);\n\n    if (loading) {\n        return (\n            <div className=\"chart-loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading chart data...</p>\n            </div>\n        );\n    }\n\n    if (chartError) {\n        return <p className=\"message error-message\">{chartError}</p>;\n    }\n\n    if (series[0]?.data.length === 0) {\n        return <p className=\"message info-message\">No chart data available for {symbol}.</p>;\n    }\n\n    return (\n        <div className=\"stock-chart-wrapper\">\n            <Chart\n                options={chartOptions}\n                series={series}\n                type=\"candlestick\"\n                height={350}\n            />\n        </div>\n    );\n}\n\nexport default StockChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}