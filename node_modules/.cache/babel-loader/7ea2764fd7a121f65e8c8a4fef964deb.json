{"ast":null,"code":"var _jsxFileName = \"/Users/aryansrivastava/projects/Paper-Trading-Portal/src/TradingDashboard.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { supabase } from \"./supabaseClient\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell, LineChart, Line } from \"recharts\";\nimport { useTradingData } from \"./TradingDataContext\"; // Import the custom hook\n\n// Import the new CSS file for Dashboard\nimport './TradingDashboard.css';\nfunction TradingDashboard() {\n  // Destructure states and functions from the custom context hook\n  const {\n    user,\n    // User object from context\n    trades,\n    livePrices,\n    capital,\n    setCapital,\n    availableSymbols,\n    symbolError,\n    setSymbolError,\n    fetchTrades,\n    fetchLivePrices,\n    calculatePnL,\n    isInvalidApiKey,\n    FINNHUB_API_KEY,\n    CURRENCY_SYMBOL,\n    loadingData,\n    removeTrade // <-- NEW: The function to remove a trade\n  } = useTradingData();\n  const [form, setForm] = useState({\n    symbol: \"\",\n    quantity: \"\",\n    type: \"buy\"\n  });\n  const [tradeMessage, setTradeMessage] = useState(null); // For trade success messages\n  const [tradeError, setTradeError] = useState(null); // For trade error messages\n\n  // --- States for detailed stock information section ---\n  const [companyProfile, setCompanyProfile] = useState(null);\n  const [quoteDetails, setQuoteDetails] = useState(null);\n  const [historicalChartData, setHistoricalChartData] = useState([]);\n  const [stockInfoLoading, setStockInfoLoading] = useState(false);\n  const [stockInfoError, setStockInfoError] = useState(null);\n  // --- END States for detailed stock information section ---\n\n  // Effect to fetch live prices for the symbol in the form input\n  useEffect(() => {\n    // Only fetch if symbol is entered, not already in livePrices, not globally loading, and valid API key\n    if (form.symbol && !livePrices[form.symbol.toUpperCase()] && !loadingData && !isInvalidApiKey(FINNHUB_API_KEY)) {\n      const handler = setTimeout(() => {\n        fetchLivePrices([form.symbol.toUpperCase()]);\n      }, 500); // Debounce for 500ms\n\n      return () => {\n        clearTimeout(handler); // Cleanup timeout on unmount or dependency change\n      };\n    }\n  }, [form.symbol, livePrices, loadingData, fetchLivePrices, isInvalidApiKey, FINNHUB_API_KEY]);\n\n  // --- Effect for fetching detailed stock info and historical data ---\n  useEffect(() => {\n    const fetchStockDetails = async () => {\n      const symbol = form.symbol.toUpperCase();\n      if (!symbol || isInvalidApiKey(FINNHUB_API_KEY)) {\n        setCompanyProfile(null);\n        setQuoteDetails(null);\n        setHistoricalChartData([]);\n        setStockInfoError(null); // Clear errors when no valid symbol or API key\n        return;\n      }\n      setStockInfoLoading(true); // Start loading state\n      setStockInfoError(null); // Clear previous errors\n\n      try {\n        // Fetch Company Profile 2\n        const profileResponse = await axios.get(`https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n        setCompanyProfile(profileResponse.data && Object.keys(profileResponse.data).length > 0 ? profileResponse.data : null);\n\n        // Fetch Quote (Daily Summary)\n        const quoteResponse = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n        setQuoteDetails(quoteResponse.data && quoteResponse.data.c ? quoteResponse.data : null);\n\n        // --- HISTORICAL DATA FETCH (COMMENTED OUT DUE TO FREE-TIER LIMITATIONS) ---\n        // The free Finnhub API key typically does not support daily historical candlestick data\n        // for longer periods, often returning a 403 Forbidden error.\n        // Uncomment this section ONLY if you have a Finnhub plan that supports historical data.\n\n        // const now = Math.floor(Date.now() / 1000); // Current timestamp\n        // const sixMonthsAgo = now - (6 * 30 * 24 * 60 * 60); // Roughly 6 months ago for daily resolution\n\n        // const candlesResponse = await axios.get(\n        //   `https://finnhub.io/api/v1/stock/candle?symbol=${symbol}&resolution=D&from=${sixMonthsAgo}&to=${now}&token=${FINNHUB_API_KEY}`\n        // );\n        // if (candlesResponse.data && candlesResponse.data.c && candlesResponse.data.t && candlesResponse.data.c.length > 0) {\n        //   const processedData = candlesResponse.data.t.map((timestamp, index) => ({\n        //     date: new Date(timestamp * 1000).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: '2-digit' }),\n        //     price: candlesResponse.data.c[index],\n        //   }));\n        //   setHistoricalChartData(processedData);\n        // } else {\n        //   setHistoricalChartData([]);\n        // }\n        // --- END HISTORICAL DATA FETCH ---\n\n        // Ensure historical data is cleared if fetch is commented out or fails\n        setHistoricalChartData([]);\n      } catch (err) {\n        console.error(\"Error fetching stock info for\", symbol, err);\n        // Provide user-friendly error message for stock info\n        setStockInfoError(`Could not fetch detailed info for ${symbol}. This might be due to an invalid symbol, API key limits, or Finnhub free-tier restrictions on advanced data. Please check the symbol and your Finnhub plan.`);\n        setCompanyProfile(null);\n        setQuoteDetails(null);\n        setHistoricalChartData([]);\n      } finally {\n        setStockInfoLoading(false); // End loading state\n      }\n    };\n    const handler = setTimeout(() => {\n      fetchStockDetails();\n    }, 700); // Debounce stock info fetch\n\n    return () => clearTimeout(handler); // Cleanup on component unmount or dependency change\n  }, [form.symbol, FINNHUB_API_KEY, isInvalidApiKey]);\n  // --- END useEffect for detailed stock info ---\n\n  // Handle form input changes\n  const handleChange = e => {\n    let value = e.target.value;\n    if (e.target.name === \"symbol\") {\n      value = value.toUpperCase().replace(/[^A-Z0-9]/g, ''); // Ensure symbol is uppercase and alphanumeric\n    }\n    setForm({\n      ...form,\n      [e.target.name]: value\n    });\n  };\n\n  // --- Generic trade execution function ---\n  const validateAndExecuteTrade = async type => {\n    setTradeMessage(null); // Clear previous messages\n    setTradeError(null); // Clear previous errors\n\n    // Basic user validation\n    if (!user || !user.id) {\n      setTradeError(\"Authentication Error: Cannot execute trade without a valid user session. Please log in.\");\n      console.error(\"Trade rejected: Invalid user object or user ID.\");\n      return;\n    }\n\n    // API Key validation\n    if (isInvalidApiKey(FINNHUB_API_KEY)) {\n      setTradeError(\"Trading disabled: Invalid Finnhub API Key. Please update it in TradingDataContext.js.\");\n      return;\n    }\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n\n    // Input validation\n    if (!sym || !qty || qty <= 0) {\n      setTradeError(\"Invalid input: Symbol and a positive quantity are required.\");\n      return;\n    }\n\n    // Validate symbol against available symbols list\n    if (availableSymbols.length > 0 && !availableSymbols.includes(sym)) {\n      setTradeError(`Symbol '${sym}' is not a recognized US stock ticker. Please check your input or Finnhub API key coverage.`);\n      return;\n    }\n    const price = livePrices[sym];\n    // Check if live price is valid\n    if (typeof price !== 'number' || price <= 0) {\n      setTradeError(`Live price for '${sym}' is currently unavailable or invalid. ` + `Ensure the symbol is a correct US ticker, actively traded, and your API key is working. Try again shortly.`);\n      return;\n    }\n    let newCapital;\n    let tradeCostOrProceeds = qty * price;\n    if (type === \"buy\") {\n      if (tradeCostOrProceeds > capital) {\n        setTradeError(\"Insufficient capital to perform this buy trade.\");\n        return;\n      }\n      newCapital = capital - tradeCostOrProceeds;\n    } else {\n      // Sell trade logic\n      const {\n        holdings: pnlHoldingsForSell\n      } = calculatePnL(); // Use calculatePnL from context directly\n      const heldStock = pnlHoldingsForSell.find(s => s.symbol === sym);\n      if (!heldStock || heldStock.netQty < qty) {\n        setTradeError(`You only hold ${heldStock ? heldStock.netQty : 0} of ${sym}. Cannot sell ${qty}.`);\n        return;\n      }\n      newCapital = capital + tradeCostOrProceeds;\n    }\n    try {\n      // Record trade in Supabase\n      const {\n        error: tradeInsertError\n      } = await supabase.from(\"trades\").insert([{\n        user_id: user.id,\n        symbol: sym,\n        quantity: qty,\n        price,\n        type\n      }]);\n      if (tradeInsertError) throw tradeInsertError;\n\n      // Update capital in context and database (setCapital does both)\n      await setCapital(newCapital);\n      setTradeMessage(`${sym} ${type === 'buy' ? 'bought' : 'sold'} successfully!`);\n      setForm({\n        ...form,\n        quantity: \"\"\n      }); // Clear quantity input\n      fetchTrades(); // Refresh trade history\n      setSymbolError(\"\"); // Clear any symbol-related API errors\n    } catch (error) {\n      console.error(\"Error executing trade:\", error.message);\n      setTradeError(`Trade failed: ${error.message || \"An unexpected error occurred.\"}`);\n      // If DB insertion failed, revert local capital state\n      if (type === \"buy\") {\n        setCapital(capital + tradeCostOrProceeds); // Revert to previous capital\n      } else {\n        setCapital(capital - tradeCostOrProceeds); // Revert to previous capital\n      }\n    }\n  };\n  const handleBuy = () => validateAndExecuteTrade(\"buy\");\n  const handleSell = () => validateAndExecuteTrade(\"sell\");\n\n  // --- NEW: Function to handle trade removal ---\n  const handleRemoveTrade = async trade => {\n    if (!window.confirm(`Are you sure you want to remove this trade?\n    Symbol: ${trade.symbol}\n    Type: ${trade.type}\n    Quantity: ${trade.quantity}\n    Price: ${CURRENCY_SYMBOL}${trade.price.toFixed(2)}\n    This action cannot be undone and will adjust your capital.`)) {\n      return; // User cancelled\n    }\n    setTradeMessage(null);\n    setTradeError(null);\n    try {\n      await removeTrade(trade); // Call the removeTrade function from context\n      setTradeMessage(\"Trade successfully removed and capital adjusted.\");\n    } catch (error) {\n      console.error(\"Failed to remove trade:\", error);\n      setTradeError(`Failed to remove trade: ${error.message}`);\n    }\n  };\n  // --- END NEW: Function to handle trade removal ---\n\n  // Logout handler\n  const handleLogout = async () => {\n    if (!user || !user.id) return;\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      // App.js will handle redirect via auth listener\n    } catch (error) {\n      console.error(\"Error logging out:\", error.message);\n      alert(\"Logout failed: \" + error.message);\n    }\n  };\n\n  // Get holdings data from calculatePnL (no need to pass trades as it uses context state)\n  const {\n    holdings: holdingsData,\n    totalRealizedPnl,\n    totalUnrealizedPnl\n  } = calculatePnL();\n  const totalPortfolioValue = calculateTotalPortfolioValue(); // Get total portfolio value from context\n\n  // Display loading spinner while initial data is loading\n  if (loadingData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"spinner-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    }, \"Loading trading dashboard data...\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-header-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, \"Paper Trading Dashboard\"), user && user.email && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 34\n    }\n  }, \"Logged in as: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 51\n    }\n  }, user.email))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-user-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/portfolio\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"portfolio icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDCBC\"), \" View Portfolio\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"logout icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDEAA\"), \" Logout\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"key-metrics-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, \"Cash Available\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, CURRENCY_SYMBOL, capital.toFixed(2))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, \"Total Unrealized P&L\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: `metric-value ${parseFloat(totalUnrealizedPnl) >= 0 ? 'text-green' : 'text-red'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, CURRENCY_SYMBOL, totalUnrealizedPnl)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, \"Total Realized P&L\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: `metric-value ${parseFloat(totalRealizedPnl) >= 0 ? 'text-green' : 'text-red'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, CURRENCY_SYMBOL, totalRealizedPnl)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-card primary-metric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, \"Total Portfolio Value\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"metric-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, CURRENCY_SYMBOL, totalPortfolioValue))), isInvalidApiKey(FINNHUB_API_KEY) && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message api-warning-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"warning sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, \"\\u26A0\\uFE0F\"), \" WARNING: A valid Finnhub API Key is not set in `TradingDataContext.js` or your current key is a free-tier key. Symbol list, live prices, and full trading functionality may be limited or not work correctly. Please consider upgrading your Finnhub plan for broader access.\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"trade-execution-section card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, \"Place a Trade\"), tradeError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 24\n    }\n  }, tradeError), tradeMessage && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 26\n    }\n  }, tradeMessage), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => e.preventDefault(),\n    className: \"trade-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"symbol\",\n    placeholder: \"SYMBOL (e.g., AAPL, MSFT)\",\n    value: form.symbol,\n    onChange: handleChange,\n    required: true,\n    className: \"trade-input\",\n    list: \"symbols-list\" // Connects to datalist for suggestions\n    ,\n    title: \"Enter US stock symbol, e.g., AAPL, MSFT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"symbols-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, availableSymbols.map(sym => /*#__PURE__*/React.createElement(\"option\", {\n    key: sym,\n    value: sym,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"quantity\",\n    type: \"number\",\n    placeholder: \"Quantity\",\n    value: form.quantity,\n    onChange: handleChange,\n    required: true,\n    min: \"1\",\n    step: \"1\",\n    className: \"trade-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-type-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleBuy,\n    className: \"btn btn-success trade-submit-btn\" // Changed to always green for buy\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleSell,\n    className: \"btn btn-danger trade-submit-btn\" // Changed to always red for sell\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, \"Sell\")))), form.symbol &&\n  /*#__PURE__*/\n  // Only show this section if a symbol is typed in the form\n  React.createElement(\"section\", {\n    className: \"stock-info-card card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, \"Information for: \", form.symbol.toUpperCase(), \" \", livePrices[form.symbol.toUpperCase()] ? `(${CURRENCY_SYMBOL}${livePrices[form.symbol.toUpperCase()].toFixed(2)})` : ''), stockInfoLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"spinner-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 15\n    }\n  }, \"Loading stock details...\")), stockInfoError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, \"\\u274C\"), \" \", stockInfoError), !stockInfoLoading && !stockInfoError && companyProfile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stock-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, \"Company Profile\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 18\n    }\n  }, \"Name:\"), \" \", companyProfile.name || 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 18\n    }\n  }, \"Exchange:\"), \" \", companyProfile.exchange || 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 18\n    }\n  }, \"Industry:\"), \" \", companyProfile.finnhubIndustry || 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 18\n    }\n  }, \"IPO Date:\"), \" \", companyProfile.ipo || 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 18\n    }\n  }, \"Market Cap:\"), \" \", companyProfile.marketCapitalization ? `${CURRENCY_SYMBOL}${companyProfile.marketCapitalization.toFixed(2)}B` : 'N/A'), companyProfile.weburl && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 44\n    }\n  }, \"Website:\"), \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: companyProfile.weburl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 70\n    }\n  }, companyProfile.weburl))), !stockInfoLoading && !stockInfoError && quoteDetails && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quote-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 15\n    }\n  }, \"Daily Quote\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 18\n    }\n  }, \"Open:\"), \" \", quoteDetails.o ? `${CURRENCY_SYMBOL}${quoteDetails.o.toFixed(2)}` : 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 18\n    }\n  }, \"High:\"), \" \", quoteDetails.h ? `${CURRENCY_SYMBOL}${quoteDetails.h.toFixed(2)}` : 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 18\n    }\n  }, \"Low:\"), \" \", quoteDetails.l ? `${CURRENCY_SYMBOL}${quoteDetails.l.toFixed(2)}` : 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 18\n    }\n  }, \"Previous Close:\"), \" \", quoteDetails.pc ? `${CURRENCY_SYMBOL}${quoteDetails.pc.toFixed(2)}` : 'N/A'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 18\n    }\n  }, \"Change:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: quoteDetails.d >= 0 ? \"text-green\" : \"text-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 43\n    }\n  }, quoteDetails.d ? `${CURRENCY_SYMBOL}${quoteDetails.d.toFixed(2)}` : 'N/A')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 18\n    }\n  }, \"Percent Change:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: quoteDetails.dp >= 0 ? \"text-green\" : \"text-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 51\n    }\n  }, quoteDetails.dp ? `${quoteDetails.dp.toFixed(2)}%` : 'N/A'))), !stockInfoLoading && !stockInfoError && historicalChartData.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"historical-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 15\n    }\n  }, \"6-Month Price History\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: historicalChartData,\n    margin: {\n      top: 5,\n      right: 10,\n      left: 0,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    interval: Math.floor(historicalChartData.length / 5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    domain: ['dataMin', 'dataMax'],\n    tickFormatter: value => `${CURRENCY_SYMBOL}${value.toFixed(2)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => [`${CURRENCY_SYMBOL}${Number(value).toFixed(2)}`, 'Close Price'],\n    labelFormatter: label => `Date: ${label}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"price\",\n    stroke: \"#007bff\",\n    dot: false,\n    activeDot: {\n      r: 8\n    },\n    name: \"Close Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"info-message\",\n    style: {\n      textAlign: 'center',\n      fontSize: '0.9em',\n      color: '#777',\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 17\n    }\n  }, \"\\u2139\\uFE0F\"), \" Displaying daily close prices. Historical data access depends on Finnhub API plan.\")) : !stockInfoLoading && !stockInfoError && form.symbol && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message info-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 70\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, \"\\u2139\\uFE0F\"), \" No historical data available or supported by your Finnhub API key for this symbol.\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"live-prices-card card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }\n  }, \"Live Prices (US Stocks)\"), symbolError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"warning sign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, \"\\u26A0\\uFE0F\"), \" \", symbolError), Object.keys(livePrices).filter(sym => livePrices[sym] !== null && typeof livePrices[sym] === 'number' && livePrices[sym] > 0).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"live-prices-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, Object.entries(livePrices).map(([sym, price]) => price !== null && typeof price === 'number' && price > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    key: sym,\n    className: \"price-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price-symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 19\n    }\n  }, sym, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"price-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 19\n    }\n  }, CURRENCY_SYMBOL, price.toFixed(2))) : null)) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message info-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }\n  }, \"\\u2139\\uFE0F\"), \" No live prices for US stocks currently displayed. Ensure your API key is valid and type a valid US ticker (e.g. AAPL) in the trade form.\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"trade-history-section card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }\n  }, \"Trade History\"), trades.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-history-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"data-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 19\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 19\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 19\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 19\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 19\n    }\n  }, \"Actions\"), \" \")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 15\n    }\n  }, trades.map(t => /*#__PURE__*/React.createElement(\"tr\", {\n    key: t.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 21\n    }\n  }, t.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 21\n    }\n  }, t.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 21\n    }\n  }, CURRENCY_SYMBOL, Number(t.price).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    className: t.type === 'buy' ? 'trade-type-buy' : 'trade-type-sell',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 21\n    }\n  }, t.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, new Date(t.created_at).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveTrade(t) // Pass the whole trade object\n    ,\n    className: \"btn remove-trade-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 23\n    }\n  }, \"Remove\"))))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message info-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }\n  }, \"\\u2139\\uFE0F\"), \" No trades recorded yet. Place a trade to see your history.\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"holdings-card card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }\n  }, \"Holdings & Profit/Loss (Live)\"), holdingsData.filter(row => row.netQty > 0).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"holdings-table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"data-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 19\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 19\n    }\n  }, \"Net Qty Held\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 19\n    }\n  }, \"Avg. Buy Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 19\n    }\n  }, \"Live Price\"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 19\n    }\n  }, \"Live P&L\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }, holdingsData.filter(row => row.netQty > 0).map(row => /*#__PURE__*/React.createElement(\"tr\", {\n    key: row.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 21\n    }\n  }, row.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 21\n    }\n  }, row.netQty), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 21\n    }\n  }, CURRENCY_SYMBOL, row.avgBuyPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 21\n    }\n  }, livePrices[row.symbol] ? `${CURRENCY_SYMBOL}${livePrices[row.symbol].toFixed(2)}` : \"N/A\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: parseFloat(row.unrealizedPnl) >= 0 ? 'pnl-positive' : 'pnl-negative',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 21\n    }\n  }, CURRENCY_SYMBOL, row.unrealizedPnl)))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message info-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 13\n    }\n  }, \"\\u2139\\uFE0F\"), \" No current holdings or live P&L to display. Place a buy order to see them here.\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 9\n    }\n  }, \"P&L Chart (Live Unrealized P&L by Symbol)\"), holdingsData.filter(p => parseFloat(p.unrealizedPnl) !== 0 && p.netQty > 0).length > 0 ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: holdingsData.filter(p => parseFloat(p.unrealizedPnl) !== 0 && p.netQty > 0),\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"symbol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    tickFormatter: value => `${CURRENCY_SYMBOL}${value}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => [`${CURRENCY_SYMBOL}${Number(value).toFixed(2)}`, 'Live P&L'],\n    labelFormatter: label => `Symbol: ${label}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"unrealizedPnl\",\n    name: \"Live P&L\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 15\n    }\n  }, holdingsData.filter(p => parseFloat(p.unrealizedPnl) !== 0 && p.netQty > 0).map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: parseFloat(entry.unrealizedPnl) >= 0 ? \"#4caf50\" : \"#f44336\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 19\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message info-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 13\n    }\n  }, \"\\u2139\\uFE0F\"), \" No live unrealized P&L to chart for current holdings.\")));\n}\nexport default TradingDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","axios","supabase","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","LineChart","Line","useTradingData","TradingDashboard","user","trades","livePrices","capital","setCapital","availableSymbols","symbolError","setSymbolError","fetchTrades","fetchLivePrices","calculatePnL","isInvalidApiKey","FINNHUB_API_KEY","CURRENCY_SYMBOL","loadingData","removeTrade","form","setForm","symbol","quantity","type","tradeMessage","setTradeMessage","tradeError","setTradeError","companyProfile","setCompanyProfile","quoteDetails","setQuoteDetails","historicalChartData","setHistoricalChartData","stockInfoLoading","setStockInfoLoading","stockInfoError","setStockInfoError","toUpperCase","handler","setTimeout","clearTimeout","fetchStockDetails","profileResponse","get","data","Object","keys","length","quoteResponse","c","err","console","error","handleChange","e","value","target","name","replace","validateAndExecuteTrade","id","sym","qty","Number","includes","price","newCapital","tradeCostOrProceeds","holdings","pnlHoldingsForSell","heldStock","find","s","netQty","tradeInsertError","from","insert","user_id","message","handleBuy","handleSell","handleRemoveTrade","trade","window","confirm","toFixed","handleLogout","auth","signOut","alert","holdingsData","totalRealizedPnl","totalUnrealizedPnl","totalPortfolioValue","calculateTotalPortfolioValue","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","email","to","role","onClick","parseFloat","onSubmit","preventDefault","placeholder","onChange","required","list","title","map","key","min","step","exchange","finnhubIndustry","ipo","marketCapitalization","weburl","href","rel","o","h","l","pc","d","dp","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","interval","Math","floor","domain","tickFormatter","formatter","labelFormatter","label","stroke","dot","activeDot","r","style","textAlign","fontSize","color","marginTop","filter","entries","t","Date","created_at","toLocaleString","row","avgBuyPrice","unrealizedPnl","p","entry","index","fill"],"sources":["/Users/aryansrivastava/projects/Paper-Trading-Portal/src/TradingDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { supabase } from \"./supabaseClient\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell,\n  LineChart,\n  Line,\n} from \"recharts\";\nimport { useTradingData } from \"./TradingDataContext\"; // Import the custom hook\n\n// Import the new CSS file for Dashboard\nimport './TradingDashboard.css';\n\nfunction TradingDashboard() {\n  // Destructure states and functions from the custom context hook\n  const {\n    user, // User object from context\n    trades,\n    livePrices,\n    capital,\n    setCapital,\n    availableSymbols,\n    symbolError,\n    setSymbolError,\n    fetchTrades,\n    fetchLivePrices,\n    calculatePnL,\n    isInvalidApiKey,\n    FINNHUB_API_KEY,\n    CURRENCY_SYMBOL,\n  \n    loadingData,\n    removeTrade, // <-- NEW: The function to remove a trade\n  } = useTradingData();\n\n  const [form, setForm] = useState({ symbol: \"\", quantity: \"\", type: \"buy\" });\n  const [tradeMessage, setTradeMessage] = useState(null); // For trade success messages\n  const [tradeError, setTradeError] = useState(null); // For trade error messages\n\n  // --- States for detailed stock information section ---\n  const [companyProfile, setCompanyProfile] = useState(null);\n  const [quoteDetails, setQuoteDetails] = useState(null);\n  const [historicalChartData, setHistoricalChartData] = useState([]);\n  const [stockInfoLoading, setStockInfoLoading] = useState(false);\n  const [stockInfoError, setStockInfoError] = useState(null);\n  // --- END States for detailed stock information section ---\n\n  // Effect to fetch live prices for the symbol in the form input\n  useEffect(() => {\n    // Only fetch if symbol is entered, not already in livePrices, not globally loading, and valid API key\n    if (form.symbol && !livePrices[form.symbol.toUpperCase()] && !loadingData && !isInvalidApiKey(FINNHUB_API_KEY)) {\n      const handler = setTimeout(() => {\n        fetchLivePrices([form.symbol.toUpperCase()]);\n      }, 500); // Debounce for 500ms\n\n      return () => {\n        clearTimeout(handler); // Cleanup timeout on unmount or dependency change\n      };\n    }\n  }, [form.symbol, livePrices, loadingData, fetchLivePrices, isInvalidApiKey, FINNHUB_API_KEY]);\n\n  // --- Effect for fetching detailed stock info and historical data ---\n  useEffect(() => {\n    const fetchStockDetails = async () => {\n      const symbol = form.symbol.toUpperCase();\n      if (!symbol || isInvalidApiKey(FINNHUB_API_KEY)) {\n        setCompanyProfile(null);\n        setQuoteDetails(null);\n        setHistoricalChartData([]);\n        setStockInfoError(null); // Clear errors when no valid symbol or API key\n        return;\n      }\n\n      setStockInfoLoading(true); // Start loading state\n      setStockInfoError(null); // Clear previous errors\n\n      try {\n        // Fetch Company Profile 2\n        const profileResponse = await axios.get(\n          `https://finnhub.io/api/v1/stock/profile2?symbol=${symbol}&token=${FINNHUB_API_KEY}`\n        );\n        setCompanyProfile(profileResponse.data && Object.keys(profileResponse.data).length > 0 ? profileResponse.data : null);\n\n        // Fetch Quote (Daily Summary)\n        const quoteResponse = await axios.get(\n          `https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`\n        );\n        setQuoteDetails(quoteResponse.data && quoteResponse.data.c ? quoteResponse.data : null);\n\n        // --- HISTORICAL DATA FETCH (COMMENTED OUT DUE TO FREE-TIER LIMITATIONS) ---\n        // The free Finnhub API key typically does not support daily historical candlestick data\n        // for longer periods, often returning a 403 Forbidden error.\n        // Uncomment this section ONLY if you have a Finnhub plan that supports historical data.\n\n        // const now = Math.floor(Date.now() / 1000); // Current timestamp\n        // const sixMonthsAgo = now - (6 * 30 * 24 * 60 * 60); // Roughly 6 months ago for daily resolution\n        \n        // const candlesResponse = await axios.get(\n        //   `https://finnhub.io/api/v1/stock/candle?symbol=${symbol}&resolution=D&from=${sixMonthsAgo}&to=${now}&token=${FINNHUB_API_KEY}`\n        // );\n        // if (candlesResponse.data && candlesResponse.data.c && candlesResponse.data.t && candlesResponse.data.c.length > 0) {\n        //   const processedData = candlesResponse.data.t.map((timestamp, index) => ({\n        //     date: new Date(timestamp * 1000).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: '2-digit' }),\n        //     price: candlesResponse.data.c[index],\n        //   }));\n        //   setHistoricalChartData(processedData);\n        // } else {\n        //   setHistoricalChartData([]);\n        // }\n        // --- END HISTORICAL DATA FETCH ---\n        \n        // Ensure historical data is cleared if fetch is commented out or fails\n        setHistoricalChartData([]); \n\n      } catch (err) {\n        console.error(\"Error fetching stock info for\", symbol, err);\n        // Provide user-friendly error message for stock info\n        setStockInfoError(`Could not fetch detailed info for ${symbol}. This might be due to an invalid symbol, API key limits, or Finnhub free-tier restrictions on advanced data. Please check the symbol and your Finnhub plan.`);\n        setCompanyProfile(null);\n        setQuoteDetails(null);\n        setHistoricalChartData([]);\n      } finally {\n        setStockInfoLoading(false); // End loading state\n      }\n    };\n\n    const handler = setTimeout(() => {\n      fetchStockDetails();\n    }, 700); // Debounce stock info fetch\n\n    return () => clearTimeout(handler); // Cleanup on component unmount or dependency change\n\n  }, [form.symbol, FINNHUB_API_KEY, isInvalidApiKey]);\n  // --- END useEffect for detailed stock info ---\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    let value = e.target.value;\n    if (e.target.name === \"symbol\") {\n      value = value.toUpperCase().replace(/[^A-Z0-9]/g, ''); // Ensure symbol is uppercase and alphanumeric\n    }\n    setForm({ ...form, [e.target.name]: value });\n  };\n\n  // --- Generic trade execution function ---\n  const validateAndExecuteTrade = async (type) => {\n    setTradeMessage(null); // Clear previous messages\n    setTradeError(null);   // Clear previous errors\n\n    // Basic user validation\n    if (!user || !user.id) {\n      setTradeError(\"Authentication Error: Cannot execute trade without a valid user session. Please log in.\");\n      console.error(\"Trade rejected: Invalid user object or user ID.\");\n      return;\n    }\n\n    // API Key validation\n    if (isInvalidApiKey(FINNHUB_API_KEY)) {\n      setTradeError(\"Trading disabled: Invalid Finnhub API Key. Please update it in TradingDataContext.js.\");\n      return;\n    }\n\n    const sym = form.symbol.toUpperCase();\n    const qty = Number(form.quantity);\n\n    // Input validation\n    if (!sym || !qty || qty <= 0) {\n      setTradeError(\"Invalid input: Symbol and a positive quantity are required.\");\n      return;\n    }\n\n    // Validate symbol against available symbols list\n    if (availableSymbols.length > 0 && !availableSymbols.includes(sym)) {\n      setTradeError(`Symbol '${sym}' is not a recognized US stock ticker. Please check your input or Finnhub API key coverage.`);\n      return;\n    }\n    \n    const price = livePrices[sym];\n    // Check if live price is valid\n    if (typeof price !== 'number' || price <= 0) {\n      setTradeError(\n        `Live price for '${sym}' is currently unavailable or invalid. ` +\n        `Ensure the symbol is a correct US ticker, actively traded, and your API key is working. Try again shortly.`\n      );\n      return;\n    }\n\n    let newCapital;\n    let tradeCostOrProceeds = qty * price;\n\n    if (type === \"buy\") {\n      if (tradeCostOrProceeds > capital) {\n        setTradeError(\"Insufficient capital to perform this buy trade.\");\n        return;\n      }\n      newCapital = capital - tradeCostOrProceeds;\n    } else { // Sell trade logic\n      const { holdings: pnlHoldingsForSell } = calculatePnL(); // Use calculatePnL from context directly\n      const heldStock = pnlHoldingsForSell.find(s => s.symbol === sym);\n      \n      if (!heldStock || heldStock.netQty < qty) {\n          setTradeError(`You only hold ${heldStock ? heldStock.netQty : 0} of ${sym}. Cannot sell ${qty}.`);\n          return;\n      }\n      newCapital = capital + tradeCostOrProceeds;\n    }\n\n    try {\n      // Record trade in Supabase\n      const { error: tradeInsertError } = await supabase.from(\"trades\").insert([\n        { user_id: user.id, symbol: sym, quantity: qty, price, type }\n      ]);\n\n      if (tradeInsertError) throw tradeInsertError;\n\n      // Update capital in context and database (setCapital does both)\n      await setCapital(newCapital);\n\n      setTradeMessage(`${sym} ${type === 'buy' ? 'bought' : 'sold'} successfully!`);\n      setForm({ ...form, quantity: \"\" }); // Clear quantity input\n      fetchTrades(); // Refresh trade history\n      setSymbolError(\"\"); // Clear any symbol-related API errors\n    } catch (error) {\n      console.error(\"Error executing trade:\", error.message);\n      setTradeError(`Trade failed: ${error.message || \"An unexpected error occurred.\"}`);\n      // If DB insertion failed, revert local capital state\n      if (type === \"buy\") {\n        setCapital(capital + tradeCostOrProceeds); // Revert to previous capital\n      } else {\n        setCapital(capital - tradeCostOrProceeds); // Revert to previous capital\n      }\n    }\n  };\n\n  const handleBuy = () => validateAndExecuteTrade(\"buy\");\n  const handleSell = () => validateAndExecuteTrade(\"sell\");\n\n  // --- NEW: Function to handle trade removal ---\n  const handleRemoveTrade = async (trade) => {\n    if (!window.confirm(`Are you sure you want to remove this trade?\n    Symbol: ${trade.symbol}\n    Type: ${trade.type}\n    Quantity: ${trade.quantity}\n    Price: ${CURRENCY_SYMBOL}${trade.price.toFixed(2)}\n    This action cannot be undone and will adjust your capital.`)) {\n      return; // User cancelled\n    }\n\n    setTradeMessage(null);\n    setTradeError(null);\n\n    try {\n      await removeTrade(trade); // Call the removeTrade function from context\n      setTradeMessage(\"Trade successfully removed and capital adjusted.\");\n    } catch (error) {\n      console.error(\"Failed to remove trade:\", error);\n      setTradeError(`Failed to remove trade: ${error.message}`);\n    }\n  };\n  // --- END NEW: Function to handle trade removal ---\n\n  // Logout handler\n  const handleLogout = async () => {\n    if (!user || !user.id) return;\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      // App.js will handle redirect via auth listener\n    } catch (error) {\n      console.error(\"Error logging out:\", error.message);\n      alert(\"Logout failed: \" + error.message);\n    }\n  };\n\n  // Get holdings data from calculatePnL (no need to pass trades as it uses context state)\n  const { holdings: holdingsData, totalRealizedPnl, totalUnrealizedPnl } = calculatePnL();\n  const totalPortfolioValue = calculateTotalPortfolioValue(); // Get total portfolio value from context\n\n  // Display loading spinner while initial data is loading\n  if (loadingData) {\n    return (\n      <div className=\"spinner-container\">\n        <div className=\"spinner\"></div>\n        <p className=\"spinner-text\">Loading trading dashboard data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      {/* --- Dashboard Header (User Info & Actions) --- */}\n      <div className=\"dashboard-header-top\">\n        <div className=\"dashboard-user-info\">\n          <h1>Paper Trading Dashboard</h1>\n          {user && user.email && <p>Logged in as: <strong>{user.email}</strong></p>}\n        </div>\n        <div className=\"dashboard-user-actions\">\n          <Link to=\"/portfolio\" className=\"btn btn-secondary\">\n            <span role=\"img\" aria-label=\"portfolio icon\">💼</span> View Portfolio\n          </Link>\n          <button onClick={handleLogout} className=\"btn btn-danger\">\n            <span role=\"img\" aria-label=\"logout icon\">🚪</span> Logout\n          </button>\n        </div>\n      </div>\n\n      {/* --- Key Metrics Section --- */}\n      <section className=\"key-metrics-section\">\n        <div className=\"metric-card\">\n          <h3>Cash Available</h3>\n          <p className=\"metric-value\">{CURRENCY_SYMBOL}{capital.toFixed(2)}</p>\n        </div>\n        <div className=\"metric-card\">\n          <h3>Total Unrealized P&L</h3>\n          <p className={`metric-value ${parseFloat(totalUnrealizedPnl) >= 0 ? 'text-green' : 'text-red'}`}>\n            {CURRENCY_SYMBOL}{totalUnrealizedPnl}\n          </p>\n        </div>\n        <div className=\"metric-card\">\n          <h3>Total Realized P&L</h3>\n          <p className={`metric-value ${parseFloat(totalRealizedPnl) >= 0 ? 'text-green' : 'text-red'}`}>\n            {CURRENCY_SYMBOL}{totalRealizedPnl}\n          </p>\n        </div>\n        <div className=\"metric-card primary-metric\">\n          <h3>Total Portfolio Value</h3>\n          <p className=\"metric-value\">{CURRENCY_SYMBOL}{totalPortfolioValue}</p>\n        </div>\n      </section>\n\n      {/* --- API Key Warning Message --- */}\n      {isInvalidApiKey(FINNHUB_API_KEY) && (\n        <p className=\"message api-warning-message\">\n          <span role=\"img\" aria-label=\"warning sign\">⚠️</span> WARNING: A valid Finnhub API Key is not set in `TradingDataContext.js` or your current key is a free-tier key.\n          Symbol list, live prices, and full trading functionality may be limited or not work correctly.\n          Please consider upgrading your Finnhub plan for broader access.\n        </p>\n      )}\n\n      {/* --- Trade Execution Section --- */}\n      <section className=\"trade-execution-section card\">\n        <h2>Place a Trade</h2>\n        {tradeError && <p className=\"message error-message\">{tradeError}</p>}\n        {tradeMessage && <p className=\"message success-message\">{tradeMessage}</p>}\n        <form onSubmit={(e) => e.preventDefault()} className=\"trade-form\">\n          <input\n            name=\"symbol\"\n            placeholder=\"SYMBOL (e.g., AAPL, MSFT)\"\n            value={form.symbol}\n            onChange={handleChange}\n            required\n            className=\"trade-input\"\n            list=\"symbols-list\" // Connects to datalist for suggestions\n            title=\"Enter US stock symbol, e.g., AAPL, MSFT\"\n          />\n          {/* Datalist for symbol suggestions */}\n          <datalist id=\"symbols-list\">\n            {availableSymbols.map((sym) => (\n                <option key={sym} value={sym} />\n            ))}\n          </datalist>\n\n          <input\n            name=\"quantity\"\n            type=\"number\"\n            placeholder=\"Quantity\"\n            value={form.quantity}\n            onChange={handleChange}\n            required\n            min=\"1\"\n            step=\"1\"\n            className=\"trade-input\"\n          />\n          <div className=\"trade-type-buttons\">\n            <button\n              type=\"button\"\n              onClick={handleBuy}\n              className=\"btn btn-success trade-submit-btn\" // Changed to always green for buy\n            >\n              Buy\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleSell}\n              className=\"btn btn-danger trade-submit-btn\" // Changed to always red for sell\n            >\n              Sell\n            </button>\n          </div>\n        </form>\n      </section>\n\n      {/* --- Symbol-specific Information & History Section --- */}\n      {form.symbol && ( // Only show this section if a symbol is typed in the form\n        <section className=\"stock-info-card card\">\n          <h2>\n            Information for: {form.symbol.toUpperCase()}{\" \"}\n            {livePrices[form.symbol.toUpperCase()] ? `(${CURRENCY_SYMBOL}${livePrices[form.symbol.toUpperCase()].toFixed(2)})` : ''}\n          </h2>\n\n          {stockInfoLoading && (\n            <div className=\"spinner-container\">\n              <div className=\"spinner\"></div>\n              <p className=\"spinner-text\">Loading stock details...</p>\n            </div>\n          )}\n\n          {stockInfoError && <p className=\"message error-message\">\n            <span role=\"img\" aria-label=\"error\">❌</span> {stockInfoError}\n          </p>}\n\n          {!stockInfoLoading && !stockInfoError && companyProfile && (\n            <div className=\"stock-profile\">\n              <h3>Company Profile</h3>\n              <p><strong>Name:</strong> {companyProfile.name || 'N/A'}</p>\n              <p><strong>Exchange:</strong> {companyProfile.exchange || 'N/A'}</p>\n              <p><strong>Industry:</strong> {companyProfile.finnhubIndustry || 'N/A'}</p>\n              <p><strong>IPO Date:</strong> {companyProfile.ipo || 'N/A'}</p>\n              <p><strong>Market Cap:</strong> {companyProfile.marketCapitalization ? `${CURRENCY_SYMBOL}${companyProfile.marketCapitalization.toFixed(2)}B` : 'N/A'}</p>\n              {companyProfile.weburl && <p><strong>Website:</strong> <a href={companyProfile.weburl} target=\"_blank\" rel=\"noopener noreferrer\">{companyProfile.weburl}</a></p>}\n            </div>\n          )}\n\n          {!stockInfoLoading && !stockInfoError && quoteDetails && (\n            <div className=\"quote-details\">\n              <h3>Daily Quote</h3>\n              <p><strong>Open:</strong> {quoteDetails.o ? `${CURRENCY_SYMBOL}${quoteDetails.o.toFixed(2)}` : 'N/A'}</p>\n              <p><strong>High:</strong> {quoteDetails.h ? `${CURRENCY_SYMBOL}${quoteDetails.h.toFixed(2)}` : 'N/A'}</p>\n              <p><strong>Low:</strong> {quoteDetails.l ? `${CURRENCY_SYMBOL}${quoteDetails.l.toFixed(2)}` : 'N/A'}</p>\n              <p><strong>Previous Close:</strong> {quoteDetails.pc ? `${CURRENCY_SYMBOL}${quoteDetails.pc.toFixed(2)}` : 'N/A'}</p>\n              <p><strong>Change:</strong> <span className={quoteDetails.d >= 0 ? \"text-green\" : \"text-red\"}>{quoteDetails.d ? `${CURRENCY_SYMBOL}${quoteDetails.d.toFixed(2)}` : 'N/A'}</span></p>\n              <p><strong>Percent Change:</strong> <span className={quoteDetails.dp >= 0 ? \"text-green\" : \"text-red\"}>{quoteDetails.dp ? `${quoteDetails.dp.toFixed(2)}%` : 'N/A'}</span></p>\n            </div>\n          )}\n\n          {!stockInfoLoading && !stockInfoError && historicalChartData.length > 0 ? (\n            <div className=\"historical-chart\">\n              <h3>6-Month Price History</h3>\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={historicalChartData} margin={{ top: 5, right: 10, left: 0, bottom: 5 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" interval={Math.floor(historicalChartData.length / 5)} />\n                  <YAxis domain={['dataMin', 'dataMax']} tickFormatter={(value) => `${CURRENCY_SYMBOL}${value.toFixed(2)}`}/>\n                  <Tooltip\n                    formatter={(value) => [`${CURRENCY_SYMBOL}${Number(value).toFixed(2)}`, 'Close Price']}\n                    labelFormatter={(label) => `Date: ${label}`}\n                  />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"price\" stroke=\"#007bff\" dot={false} activeDot={{ r: 8 }} name=\"Close Price\" />\n                </LineChart>\n              </ResponsiveContainer>\n              <p className=\"info-message\" style={{textAlign: 'center', fontSize: '0.9em', color: '#777', marginTop: '1rem'}}>\n                <span role=\"img\" aria-label=\"info\">ℹ️</span> Displaying daily close prices. Historical data access depends on Finnhub API plan.\n              </p>\n            </div>\n          ) : !stockInfoLoading && !stockInfoError && form.symbol && <p className=\"message info-message\">\n            <span role=\"img\" aria-label=\"info\">ℹ️</span> No historical data available or supported by your Finnhub API key for this symbol.\n          </p>}\n        </section>\n      )}\n\n      {/* --- Live Prices Section --- */}\n      <section className=\"live-prices-card card\">\n        <h2>Live Prices (US Stocks)</h2>\n        {symbolError && <p className=\"message error-message\">\n          <span role=\"img\" aria-label=\"warning sign\">⚠️</span> {symbolError}\n        </p>}\n        {Object.keys(livePrices).filter(sym => livePrices[sym] !== null && typeof livePrices[sym] === 'number' && livePrices[sym] > 0).length > 0 ? (\n          <div className=\"live-prices-grid\">\n            {Object.entries(livePrices).map(([sym, price]) =>\n              (price !== null && typeof price === 'number' && price > 0) ? (\n                <div key={sym} className=\"price-item\">\n                  <span className=\"price-symbol\">{sym}:</span>\n                  <span className=\"price-value\">{CURRENCY_SYMBOL}{price.toFixed(2)}</span>\n                </div>\n              ) : null\n            )}\n          </div>\n        ) : (\n          <p className=\"message info-message\">\n            <span role=\"img\" aria-label=\"info\">ℹ️</span> No live prices for US stocks currently displayed. Ensure your API key is valid and type a valid US ticker (e.g. AAPL) in the trade form.\n          </p>\n        )}\n      </section>\n\n      {/* --- Trade History Section --- */}\n      <section className=\"trade-history-section card\">\n        <h2>Trade History</h2>\n        {trades.length > 0 ? (\n          <div className=\"trade-history-table-container\">\n            <table className=\"data-table\">\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Qty</th>\n                  <th>Price</th>\n                  <th>Type</th>\n                  <th>Time</th>\n                  <th>Actions</th> {/* NEW: Actions column */}\n                </tr>\n              </thead>\n              <tbody>\n                {trades.map((t) => (\n                  <tr key={t.id}>\n                    <td>{t.symbol}</td>\n                    <td>{t.quantity}</td>\n                    <td>{CURRENCY_SYMBOL}{Number(t.price).toFixed(2)}</td>\n                    <td className={t.type === 'buy' ? 'trade-type-buy' : 'trade-type-sell'}>{t.type}</td>\n                    <td>{new Date(t.created_at).toLocaleString()}</td>\n                    <td>\n                      <button\n                        onClick={() => handleRemoveTrade(t)} // Pass the whole trade object\n                        className=\"btn remove-trade-btn\"\n                      >\n                        Remove\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (<p className=\"message info-message\">\n            <span role=\"img\" aria-label=\"info\">ℹ️</span> No trades recorded yet. Place a trade to see your history.\n          </p>)}\n      </section>\n\n      {/* --- Holdings & P&L (Live) Section --- */}\n      <section className=\"holdings-card card\">\n        <h2>Holdings & Profit/Loss (Live)</h2>\n        {holdingsData.filter(row => row.netQty > 0).length > 0 ? (\n          <div className=\"holdings-table-container\">\n            <table className=\"data-table\">\n              <thead>\n                <tr>\n                  <th>Symbol</th>\n                  <th>Net Qty Held</th>\n                  <th>Avg. Buy Price</th>\n                  <th>Live Price</th> {/* Changed from Current Price for clarity */}\n                  <th>Live P&L</th>\n                </tr>\n              </thead>\n              <tbody>\n                {holdingsData.filter(row => row.netQty > 0).map((row) => (\n                  <tr key={row.symbol}>\n                    <td>{row.symbol}</td>\n                    <td>{row.netQty}</td>\n                    <td>{CURRENCY_SYMBOL}{row.avgBuyPrice}</td>\n                    <td>{livePrices[row.symbol] ? `${CURRENCY_SYMBOL}${livePrices[row.symbol].toFixed(2)}` : \"N/A\"}</td>\n                    <td className={parseFloat(row.unrealizedPnl) >= 0 ? 'pnl-positive' : 'pnl-negative'}>\n                      {CURRENCY_SYMBOL}{row.unrealizedPnl}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (<p className=\"message info-message\">\n            <span role=\"img\" aria-label=\"info\">ℹ️</span> No current holdings or live P&L to display. Place a buy order to see them here.\n          </p>)}\n      </section>\n\n      {/* --- P&L Chart (Live) Section --- */}\n      <section className=\"card\">\n        <h2>P&L Chart (Live Unrealized P&L by Symbol)</h2>\n        {holdingsData.filter(p => parseFloat(p.unrealizedPnl) !== 0 && p.netQty > 0).length > 0 ? (\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart data={holdingsData.filter(p => parseFloat(p.unrealizedPnl) !== 0 && p.netQty > 0)} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"symbol\" />\n              <YAxis tickFormatter={(value) => `${CURRENCY_SYMBOL}${value}`}/>\n              <Tooltip\n                formatter={(value) => [`${CURRENCY_SYMBOL}${Number(value).toFixed(2)}`, 'Live P&L']}\n                labelFormatter={(label) => `Symbol: ${label}`}\n              />\n              <Legend />\n              <Bar dataKey=\"unrealizedPnl\" name=\"Live P&L\">\n                {holdingsData.filter(p => parseFloat(p.unrealizedPnl) !== 0 && p.netQty > 0).map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={parseFloat(entry.unrealizedPnl) >= 0 ? \"#4caf50\" : \"#f44336\"} />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        ) : (<p className=\"message info-message\">\n            <span role=\"img\" aria-label=\"info\">ℹ️</span> No live unrealized P&L to chart for current holdings.\n          </p>)}\n      </section>\n    </div>\n  );\n}\n\nexport default TradingDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}